{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/redux/actions.ts","webpack:///./src/ts/redux/undoable.ts","webpack:///./src/ts/lib/Stack.ts","webpack:///./src/ts/lib/util.ts","webpack:///./src/ts/lib/Card.ts","webpack:///./src/ts/redux/selectors.ts","webpack:///./src/ts/redux/stock.ts","webpack:///./src/ts/redux/score.ts","webpack:///./src/ts/redux/deck.ts","webpack:///./src/styles/cards.scss","webpack:///./src/ts/index.tsx","webpack:///./src/ts/store.ts","webpack:///./src/ts/redux/index.ts","webpack:///./src/ts/redux/tableau.ts","webpack:///./src/ts/redux/foundation.ts","webpack:///./src/ts/redux/waste.ts","webpack:///./src/ts/components/Container.tsx","webpack:///./src/ts/components/Stack.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","reselect_1","stock_1","Stack_1","Card_1","util_1","score_1","selectors_1","undoable_1","deck_1","INITIALIZE","SELECT_CARD","DESELECT_CARD","MOVE_CARDS","REPLACE_TOP","APPEND_CARDS","getAllStacks","createSelector","getFoundation","getWaste","getTableau","stacks","foundation","waste","tableau","initialize","dispatch","getState","type","cards","getRandomCards","forEach","stack","index","appendCards","selectCard","card","deselectCard","moveCards","from","to","from_card","reverse","Error","findIndex","replaceTop","doubleClick","stackCard","StackType","stock","foundation_stack","ValueType","ace","find","first","suit","top_card","get_top_card","movable_to_foundation","checkpoint","incrementScore","clickFoundation","selection","get_selection","selected","selected_card","from_stack","clickWaste","clickTableau","movable_to_tableau","clickStock","state","waste_stack","stock_stack","left","getStock","useStock","actions_1","UNDO","undo","REDO","redo","CHECKPOINT","undoable","reducer","initialState","past","present","undefined","future","action","previous","next","newFuture","newPresent","StackDirection","valueToInt","jack","queen","king","parseInt","random","min","max","Math","floor","select_card","map","some","item","contains","assign","deselect_card","move_cards","filter","indexOf","append_cards","card1","card2","isRed","isBlack","WIDTH","HEIGHT","SuitType","Cards","entries","diamond","heart","club","spade","drawing","getDrawing","color","fontSize","pos","three","five","nine","x","y","two","four","six","seven","eight","ten","cornerFont","valueXOffset","valueYOffset","suitXOffset","suitYOffset","positions","textAlign","getTextAlign","rotated","getLeft","top","getTop","getScore","score","getDeck","deck","USE_STOCK","count","default","INCREMENT_SCORE","REMOVE_CARD","removeCards","deck_cards","container","play","version","new-game","newGame","React","ReactDOM","offline","react_redux_1","store_1","Container_1","install","[object Object]","applyUpdate","location","reload","store","render","createElement","Provider","Container","document","getElementById","redux_1","redux_thunk_1","redux_2","middleware","createStore","applyMiddleware","tableau_1","foundation_1","waste_1","combineReducers","showing","cards_scss_1","Stack_2","selector","connect","handleNewGame","handleStockClick","handleTableauClick","handleWasteClick","handleFoundationClick","handleDoubleClick","handleUndo","handleRedo","PureComponent","props","super","this","handleNewGameClick","handleKeyDown","addEventListener","removeEventListener","e","keyCode","ctrlKey","shiftKey","className","id","onClick","StackComponent","direction","none","hidden","onDoubleClick","horizontal","offset","vertical","ref","createRef","handleCanvasClick","handleCanvasDoubleClick","stack_style","canvas_width","width","height","canvas_height","evt","nativeEvent","prop","updateCanvas","canvas","current","ctx","getContext","save","translate","clearRect","drawBoxRadius","stroke","drawClipRegion","drawCard","restore","radius","clip_width","clip_height","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","stack_card","fillStyle","fill","textBaseline","font","fillText","rotate","PI","factor","defaultProps","Infinity"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,EAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,QAEAU,sFCrJA,MAAA0C,EAAAnC,EAAA,GAEAoC,EAAApC,EAAA,IACAqC,EAAArC,EAAA,GACAsC,EAAAtC,EAAA,IACAuC,EAAAvC,EAAA,GACAwC,EAAAxC,EAAA,IACAyC,EAAAzC,EAAA,IACA0C,EAAA1C,EAAA,GACA2C,EAAA3C,EAAA,IAEaI,EAAAwC,WAAa,aAIbxC,EAAAyC,YAAc,cAIdzC,EAAA0C,cAAgB,gBAIhB1C,EAAA2C,WAAa,aAIb3C,EAAA4C,YAAc,cAId5C,EAAA6C,aAAe,eAY5B,MAAMC,EAAef,EAAAgB,eAAe,CAClCV,EAAAW,cACAX,EAAAY,SACAZ,EAAAa,YACC,EACAC,OAAQC,IACRD,OAAQE,IACRF,OAAQG,KACN,IACAF,KACAC,KACAC,IAGLtD,EAAAuD,WAAA,WACE,MAAO,CAACC,EAAUC,KAChBD,EAAS,CAACE,KAAM1D,EAAAwC,aAEhB,MAAMc,EAAUjB,EAAAa,WAAWO,KACrBE,EAAQH,EAASjB,EAAAqB,eAAeN,EAAQH,OAAO1E,SACrD6E,EAAQH,OAAOU,QAAQ,CAACC,EAAOC,KAC7BP,EAASQ,EAAYF,EAAO,CAACH,EAAMI,UAMzC,MAAME,EAAa,CAACH,EAAcI,KAAkC,CAAER,KAAM1D,EAAAyC,YAAayB,OAAMJ,UAEzFK,EAAe,KAAsB,CAAET,KAAM1D,EAAA0C,gBAE7CsB,EAAc,CAACF,EAAcH,KAAoC,CAAED,KAAM1D,EAAA6C,aAAcc,QAAOG,UAE9FM,EAAY,CAChBC,EACAC,EACAC,EAAyB,KACzBR,EAAuB,KACvBS,GAAmB,KAGnB,GAAa,MAATT,EAAe,CACjB,GAAiB,MAAbQ,EAAqB,MAAM,IAAIE,MAAM,6CACzCV,EAAQM,EAAKV,MAAMe,UAAUR,KAAUA,EAAKA,MAAQA,EAAKA,OAASK,GAGpE,MAAMZ,EAAQU,EAAKV,MAAM7B,MAAMiC,GAE/B,OADIS,GAAWb,EAAMa,UACd,CAACd,KAAM1D,EAAA2C,WAAY0B,OAAMC,KAAIX,UAGhCgB,EAAa,CAACb,EAAcI,KAAiC,CAAER,KAAM1D,EAAA4C,YAAakB,QAAOI,SAE/FlE,EAAA4E,YAAA,SAA6Bd,EAAce,GACzC,MAAO,CAACrB,EAAUC,KAEhB,GAAIK,EAAMJ,OAASzB,EAAA6C,UAAU1B,YAAcU,EAAMJ,OAASzB,EAAA6C,UAAUC,MAClE,OAGF,GAAiB,MAAbF,EACF,OAGF,MAAMX,KAACA,GAAQW,EAEf,GAAY,MAARX,EACF,OAGF,MAAMd,EAAaf,EAAAW,cAAcS,KAE3BuB,EACJd,EAAKnD,QAAUmB,EAAA+C,UAAUC,IACrB9B,EAAWD,OAAOgC,KAAKrB,GAAgC,IAAvBA,EAAMH,MAAMlF,QAC5C2E,EAAWD,OAAOgC,KAAKrB,IACvB,GAA2B,IAAvBA,EAAMH,MAAMlF,OAAgB,OAAO,EACvC,MAAM2G,EAAQtB,EAAMH,MAAM,GAAGO,KAC7B,OAAa,MAATkB,GACGA,EAAMC,OAASnB,EAAKmB,OAI3BC,EAAWnD,EAAAoD,aAAaP,GAE1B7C,EAAAqD,sBAAsBtB,EAAMoB,KAE9B9B,EAASlB,EAAAmD,cAEL3B,EAAMJ,OAASzB,EAAA6C,UAAUzB,OAC3BG,EAASpB,EAAAsD,eAAe,IAGtB5B,EAAMJ,OAASzB,EAAA6C,UAAUxB,SAC3BE,EAASpB,EAAAsD,eAAe,KAG1BlC,EAASY,EAAUN,EAAOkB,EAAkBd,IAC5CV,EAASW,QAMfnE,EAAA2F,gBAAA,SAAiC7B,EAAcI,GAC7C,MAAO,CAACV,EAAUC,KAEhB,MAAMN,EAASL,EAAaW,KACtBmC,EAAYzD,EAAA0D,cAAc1C,GAEhC,IAAKyC,EAIH,YAHI1B,GAAQA,EAAKA,MACfV,EAASS,EAAWH,EAAOI,KAK/B,GAAIA,GAAQA,EAAK4B,SAEf,YADAtC,EAASW,KAIX,MAAMmB,EAAWnD,EAAAoD,aAAazB,IACvBI,KAAM6B,EAAejC,MAAOkC,GAAcJ,EAE7CzD,EAAAqD,sBAAsBO,EAAeT,KAEvC9B,EAASlB,EAAAmD,cAELO,EAAWtC,OAASzB,EAAA6C,UAAUzB,OAChCG,EAASpB,EAAAsD,eAAe,IAGtBM,EAAWtC,OAASzB,EAAA6C,UAAUxB,SAChCE,EAASpB,EAAAsD,eAAe,KAG1BlC,EAASY,EAAU4B,EAAYlC,EAAOiC,IACtCvC,EAASW,QAMfnE,EAAAiG,WAAA,SAA4BnC,EAAcI,GACxC,MAAO,CAACV,EAAUC,KAEhB,IAAKS,EAAQ,OAEb,MAAMf,EAASL,EAAaW,KACtBmC,EAAYzD,EAAA0D,cAAc1C,GAC1BmC,EAAWnD,EAAAoD,aAAazB,GAE1BI,EAAK4B,SACPtC,EAASW,KAINyB,GAAaN,IAAapB,GAC7BV,EAASS,EAAWH,EAAOI,MAMjClE,EAAAkG,aAAA,SAA8BpC,EAAcI,GAC1C,MAAO,CAACV,EAAUC,KAEhB,MAAMN,EAASL,EAAaW,KACtBmC,EAAYzD,EAAA0D,cAAc1C,GAC1BmC,EAAWnD,EAAAoD,aAAazB,GAE9B,IAAK8B,EAAW,CACd,GAAI1B,GAAQA,EAAKA,KACfV,EAASS,EAAWH,EAAOI,SACtB,GAAIA,GAAQoB,GAA6B,MAAjBA,EAASpB,KAAc,CACpDV,EAASlB,EAAAmD,cACTjC,EAASpB,EAAAsD,eAAe,IACxB,MAAMxB,EAAOV,EAASjB,EAAAqB,eAAe,IACrCJ,EAASmB,EAAWb,EAAOI,EAAK,KAElC,OAGF,GAAIA,GAAQA,EAAK4B,SAEf,YADAtC,EAASW,KAIX,MAAOD,KAAM6B,EAAejC,MAAOkC,GAAcJ,EAE7C1B,IAASoB,GAAYnD,EAAAgE,mBAAmBJ,EAAeT,KAEzD9B,EAASlB,EAAAmD,cAELO,EAAWtC,OAASzB,EAAA6C,UAAUzB,OAChCG,EAASpB,EAAAsD,eAAe,KAGtBM,EAAWtC,OAASzB,EAAA6C,UAAU1B,YAChCI,EAASpB,EAAAsD,gBAAgB,KAG3BlC,EAASY,EAAU4B,EAAYlC,EAAOiC,IACtCvC,EAASW,QAMfnE,EAAAoG,WAAA,WACE,MAAO,CAAC5C,EAAUC,KAEhB,MAAM4C,EAAQ5C,KACPN,QAASmD,IAAgBjE,EAAAY,SAASoD,IAClClD,QAASoD,GAAYC,KAAEA,GAAQnE,EAAAoE,SAASJ,GAE/C7C,EAASlB,EAAAmD,cAELe,EAAO,GAEThD,EAASxB,EAAA0E,SAAS,IAClBlD,EAASQ,EAAYsC,EAAa9C,EAASjB,EAAAqB,eAAe,OAEjD2C,EAAY5C,MAAMlF,OAAS,EAEpC+E,EAASY,EAAUmC,EAAaD,EAAa,MAAO,GAAG,IAIvD9C,EAASY,EAAUkC,EAAaC,EAAa,KAAM,GAAG,qFChR5D,MAAAI,EAAA/G,EAAA,GAQMgH,EAAO,OAGA5G,EAAA6G,KAAO,MAAkB,CAAEnD,KAAMkD,KAE9C,MAAME,EAAO,OAGA9G,EAAA+G,KAAO,MAAkB,CAAErD,KAAMoD,KAE9C,MAAME,EAAa,aAGNhH,EAAAyF,WAAa,MAAwB,CAAE/B,KAAMsD,KAI1DhH,EAAAiH,SAAA,SAA2DC,GAEzD,MAAMC,EAA2B,CAC/BC,KAAM,GACNC,QAASH,OAAQI,EAAW,IAC5BC,OAAQ,IAGV,OAAO,SAAUlB,EAAQc,EAAcK,GACrC,MAAMJ,KAACA,EAAIC,QAAEA,EAAOE,OAAEA,GAAUlB,EAEhC,GAAImB,EAAO9D,OAASkD,EAAM,CACxB,MAAMa,EAAWL,EAAKA,EAAK3I,OAAS,GACpC,OAAKgJ,EAGE,CACLL,KAFcA,EAAKtF,MAAM,EAAGsF,EAAK3I,OAAS,GAG1C4I,QAASI,EACTF,OAAQ,CAACF,KAAYE,IANClB,EAU1B,GAAImB,EAAO9D,OAASoD,EAAM,CACxB,MAAMY,EAAOH,EAAO,GACpB,IAAKG,EAAQ,OAAOrB,EAEpB,MAAMsB,EAAYJ,EAAOzF,MAAM,GAC/B,MAAO,CACLsF,KAAM,IAAIA,EAAMC,GAChBA,QAASK,EACTH,OAAQI,GAIZ,MAAMC,EAAaV,EAAQG,EAASG,GAEpC,OAAIA,EAAO9D,OAASiD,EAAAnE,WACX,CACL4E,KAAM,GACNC,QAASO,EACTL,OAAQ,IAIRC,EAAO9D,OAASsD,EACX,CACLI,KAAM,IAAIA,EAAMC,GAChBA,QAASO,EACTL,OAAQ,IAIRF,IAAYO,EACPvB,EAGF,CACLe,OACAC,QAASO,EACTL,2FC/EN,SAAYM,GACVA,EAAA,wBACAA,EAAA,oBACAA,EAAA,QAHF,CAAY7H,EAAA6H,iBAAA7H,EAAA6H,eAAc,KAM1B,SAAY/C,GACVA,EAAA,kBACAA,EAAA,wBACAA,EAAA,cACAA,EAAA,cAJF,CAAY9E,EAAA8E,YAAA9E,EAAA8E,UAAS,oFCbrB,MAAA5C,EAAAtC,EAAA,IAyHA,SAASkI,EAAY/G,GACnB,OAAIA,IAAUmB,EAAA+C,UAAUC,IAAc,EAClCnE,IAAUmB,EAAA+C,UAAU8C,KAAe,GACnChH,IAAUmB,EAAA+C,UAAU+C,MAAgB,GACpCjH,IAAUmB,EAAA+C,UAAUgD,KAAe,GAChCC,SAASnH,GA3HLf,EAAAmI,OAAS,EAACC,EAAaC,IAC3BC,KAAKC,MAAMD,KAAKH,SAAWE,GAAOD,GAO3CpI,EAAAuF,aAAA,SAA8BzB,GAC5B,OAAOA,EAAMH,MAAMG,EAAMH,MAAMlF,OAAS,IAG1CuB,EAAA6F,cAAA,SAA+B1C,GAC7B,IAAK,IAAI5E,EAAI,EAAGA,EAAI4E,EAAO1E,OAAQF,IAAK,CACtC,MAAMuF,EAAQX,EAAO5E,GACrB,GAAuB,MAAnBuF,EAAM8B,UACV,MAAO,CAAC1B,KAAMJ,EAAM8B,UAAW9B,SAEjC,OAAO,MAGT9D,EAAAwI,YAAA,SAA6BrF,EAAiB0B,GAC5C,MAAMX,EAAOW,EAAUX,KACvB,OAAY,MAARA,EAAuBf,EACpBA,EAAOsF,IAAI3E,IApBpB,SAAmBA,EAAcI,GAC/B,OAAOJ,EAAMH,MAAM+E,KAAMC,KAAsBA,EAAKzE,MAAQyE,EAAKzE,OAASA,GAqBnE0E,CAAS9E,EAAOI,GAAgBJ,EAErClF,OAAAiK,OAAA,GACK/E,EAAK,CACRH,MAAOG,EAAMH,MAAM8E,IAAI5D,GAChBA,EAAUX,KACXW,EAAUX,OAASA,EAAeW,EACtCjG,OAAAiK,OAAA,GAAWhE,EAAS,CAAEiB,UAAU,IAFFjB,GAIhCe,UAAW1B,MAMjBlE,EAAA8I,cAAA,SAA+B3F,GAC7B,OAAOA,EAAOsF,IAAI3E,GACXA,EAAM8B,UACXhH,OAAAiK,OAAA,GACK/E,EAAK,CACR8B,eAAW,EACXjC,MAAOG,EAAMH,MAAM8E,IAAIvE,GAASA,EAAK4B,SAAiBlH,OAAAiK,OAAA,GAAK3E,EAAI,CAAE4B,cAAU,IAA3B5B,KAJnBJ,IASnC9D,EAAA+I,WAAA,SAA4B5F,EAAiBkB,EAAoBC,EAAWX,GAC1E,OAAOR,EAAOsF,IAAI3E,GACZA,IAAUQ,EACZ1F,OAAAiK,OAAA,GACK/E,EAAK,CACRH,MAAO,IACFG,EAAMH,SACNA,EAAM8E,IAAIvE,GAAQtF,OAAAiK,OAAA,GAAM3E,EAAI,CAAE4B,UAAU,QAI7ChC,IAAUO,EACZzF,OAAAiK,OAAA,GACK/E,EAAK,CACRH,MAAOG,EAAMH,MAAMqF,OAAOnE,IAA2C,IAA9BlB,EAAMsF,QAAQpE,MAGlDf,IAIX9D,EAAAkJ,aAAA,SAA8B/F,EAAiBmB,EAAWX,GACxD,OAAOR,EAAOsF,IAAI3E,GACZA,IAAUQ,EACLR,EAETlF,OAAAiK,OAAA,GACK/E,EAAK,CACRH,MAAO,IACFG,EAAMH,SACNA,EAAM8E,IAAIvE,IAAQ,CAAEA,eAM/BlE,EAAAwF,sBAAA,SAAuC2D,EAAaC,GAElD,GAAa,MAATA,EACF,OAAOD,EAAMpI,QAAUmB,EAAA+C,UAAUC,IAGnC,MAAMhB,KAACA,GAAQkF,EACf,QAAKlF,GAGH4D,EAAWqB,EAAMpI,SAAW+G,EAAW5D,EAAKnD,OAAS,GACrDoI,EAAM9D,OAASnB,EAAKmB,MAIxBrF,EAAAmG,mBAAA,SAAoCgD,EAAaC,GAE/C,GAAa,MAATA,EACF,OAAOD,EAAMpI,QAAUmB,EAAA+C,UAAUgD,KAGnC,MAAM/D,KAACA,GAAQkF,EACf,QAAKlF,IAGH4D,EAAWqB,EAAMpI,OAAS,IAAM+G,EAAW5D,EAAKnD,QAChDoI,EAAME,OAASnF,EAAKoF,SAAWH,EAAMG,SAAWpF,EAAKmF,2FCrHzD,MAAME,EAAQ,GACRC,EAAS,GAEf,IAAYvE,EAgBPwE,GAhBL,SAAYxE,GACVA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SAbF,CAAYA,EAAAjF,EAAAiF,YAAAjF,EAAAiF,UAAS,KAgBrB,SAAKwE,GACHA,EAAA,UACAA,EAAA,YACAA,EAAA,UACAA,EAAA,SAJF,CAAKA,MAAQ,KAiCAzJ,EAAA0J,MAAgB,GAC7B,IAAK,MAAO,CAAE3I,KAAUnC,OAAO+K,QAAQ1E,GACrC,IAAK,MAAO,CAAEI,KAASzG,OAAO+K,QAAQF,GACpCzJ,EAAA0J,MAAM/K,KAAK,CACT0G,OACAtE,QACAsI,MAAO,CAACI,EAASG,QAASH,EAASI,OAAOZ,QAAQ5D,IAAS,EAC3DiE,QAAS,CAACG,EAASK,KAAML,EAASM,OAAOd,QAAQ5D,IAAS,EAC1D2E,QAASC,EAAW5E,EAAMtE,KAKhC,SAASkJ,EAAY5E,EAAgBtE,GAKnC,MAAMmJ,EAAQ,CACZT,EAASG,QACTH,EAASI,OACTZ,QAAQ5D,IAAS,EAAI,MAAQ,QAEzB8E,EAAW,CACflF,EAAUC,IACVD,EAAU8C,KACV9C,EAAU+C,MACV/C,EAAUgD,MACVgB,QAAQlI,IAAU,EAAI,OAAS,OAE3BqJ,EAA4B,GAE9B,CAACnF,EAAUC,IAAKD,EAAUoF,MAAOpF,EAAUqF,KAAMrF,EAAUsF,KAAMtF,EAAU8C,KAAM9C,EAAU+C,MAAO/C,EAAUgD,MAAMgB,QAAQlI,IAAU,GACtIqJ,EAAIzL,KAAK,CAAC6L,EAAG,EAAGC,EAAG,IAGjB,CAACxF,EAAUyF,IAAKzF,EAAUoF,OAAOpB,QAAQlI,IAAU,GACrDqJ,EAAIzL,KAAK,CAAC6L,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,IAG/B,CAACxF,EAAU0F,KAAM1F,EAAUqF,KAAMrF,EAAU2F,IAAK3F,EAAU4F,MAAO5F,EAAU6F,MAAO7F,EAAUsF,KAAMtF,EAAU8F,KAAK9B,QAAQlI,IAAU,GACrIqJ,EAAIzL,KAAK,CAAC6L,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,IAG3D,CAACxF,EAAU2F,IAAK3F,EAAU4F,MAAO5F,EAAU6F,OAAO7B,QAAQlI,IAAU,GACtEqJ,EAAIzL,KAAK,CAAC6L,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,IAG/B,CAACxF,EAAU4F,MAAO5F,EAAU8F,IAAK9F,EAAU6F,OAAO7B,QAAQlI,IAAU,GACtEqJ,EAAIzL,KAAK,CAAC6L,EAAG,EAAGC,EAAG,IAGjB,CAACxF,EAAUsF,KAAMtF,EAAU8F,KAAK9B,QAAQlI,IAAU,GACpDqJ,EAAIzL,KAAK,CAAC6L,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,IAG3D,CAACxF,EAAU8F,IAAK9F,EAAU6F,OAAO7B,QAAQlI,IAAU,GACrDqJ,EAAIzL,KAAK,CAAC6L,EAAG,EAAGC,EAAG,IAqCrB,MAAO,CACLO,WAAY,uBACZC,aAAc,EACdC,aAAc,EACdC,YAAa,EACbC,YAAa,GACblB,QACAC,WACAkB,UAjB4BjB,EAAI3B,IAAI,EAAE+B,IAAGC,QAClC,CACLa,UAViB,CAACd,IACpB,OAAQA,GACN,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,UAMJe,CAAaf,GACxBgB,QAASf,EAAI,EACbjE,KApBY,CAACgE,IACf,OAAQA,GACN,KAAK,EAAG,MAAe,IAARjB,EACf,KAAK,EAAG,MAAe,GAARA,EACf,KAAK,EAAG,MAAe,IAARA,IAgBTkC,CAAQjB,GACdkB,IA9BW,CAACjB,IACd,OAAQA,GACN,KAAK,EAAG,KAAK,EAAG,MAAgB,GAATjB,EACvB,KAAK,EAAG,KAAK,EAAG,MAAgB,GAATA,EACvB,KAAK,EAAG,KAAK,EAAG,MAAgB,GAATA,EACvB,KAAK,EAAG,MAAgB,GAATA,IAyBVmC,CAAOlB,uFC/IlB,MAAA1I,EAAAnC,EAAA,GAGaI,EAAAgD,cAAgBjB,EAAAgB,eAC1BsD,GAAsBA,EAAMjD,WAAWiE,QACxCjE,GAAcA,GAGHpD,EAAA4L,SAAW7J,EAAAgB,eACrBsD,GAAsBA,EAAMwF,MAAMxE,QACnCwE,GAASA,GAGE7L,EAAAyG,SAAW1E,EAAAgB,eACrBsD,GAAsBA,EAAMtB,MAAMsC,QACnCtC,GAASA,GAGE/E,EAAAkD,WAAanB,EAAAgB,eACvBsD,GAAsBA,EAAM/C,QAAQ+D,QACrC/D,GAAWA,GAGAtD,EAAAiD,SAAWlB,EAAAgB,eACrBsD,GAAsBA,EAAMhD,MAAMgE,QACnChE,GAASA,GAGErD,EAAA8L,QAAU/J,EAAAgB,eACpBsD,GAAsBA,EAAM0F,KAAK1E,QAClC0E,GAAQA,oFC7BV,MAAAzJ,EAAA1C,EAAA,GACA+G,EAAA/G,EAAA,GACAqC,EAAArC,EAAA,GACAuC,EAAAvC,EAAA,GAEMoM,EAAY,YAIlBhM,EAAA0G,SAAA,SAA0BuF,GACxB,MAAO,CAACvI,KAAMsI,EAAWC,UAU3B,MAAM9E,EAA2B,CAC/BhE,OAAQ,CAAC,CACPO,KAAMzB,EAAA6C,UAAUC,MAChBpB,MAAO,KAET6C,KAAM,IA4BRxG,EAAAkM,QAAe5J,EAAA2E,SAzBf,SACEZ,EAAoBc,EACpBK,GAGA,OAAIA,EAAO9D,OAASiD,EAAAnE,WAClB5D,OAAAiK,OAAA,GAAW1B,GAGTK,EAAO9D,OAASsI,EAClBpN,OAAAiK,OAAA,GAAWxC,EAAK,CAAEG,KAAMH,EAAMG,KAAOgB,EAAOyE,QAG1CzE,EAAO9D,OAASiD,EAAAhE,YAAc0D,EAAMlD,OAAOuF,KAAK5E,GAAS,CAAC0D,EAAOnD,KAAMmD,EAAOlD,IAAI2E,QAAQnF,IAAU,GACtGlF,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAA4G,WAAW1C,EAAMlD,OAAQqE,EAAOnD,KAAMmD,EAAOlD,GAAIkD,EAAO7D,SAGhF6D,EAAO9D,OAASiD,EAAA9D,cAAgBwD,EAAMlD,OAAOuF,KAAK5E,GAAS0D,EAAO1D,QAAUA,GAC9ElF,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAA+G,aAAa7C,EAAMlD,OAAQqE,EAAO1D,MAAO0D,EAAO7D,SAGrE0C,mFCjDT,MAAAM,EAAA/G,EAAA,GACA0C,EAAA1C,EAAA,GAEMuM,EAAkB,kBAQxBnM,EAAA0F,eAAA,SAAgCmG,GAC9B,MAAO,CAACnI,KAAMyI,EAAiBN,UASjC,MAAM1E,EAA2B,CAAC0E,MAAO,GAmBzC7L,EAAAkM,QAAe5J,EAAA2E,SAjBf,SACEZ,EAAoBc,EACpBK,GAGA,OAAIA,EAAO9D,OAASiD,EAAAnE,WACX,CAACqJ,MAAO,GAGbrE,EAAO9D,OAASyI,EACX,CAACN,MAAOxF,EAAMwF,MAAQrE,EAAOqE,OAG/BxF,mFCrCT,MAAAnE,EAAAtC,EAAA,IACA+G,EAAA/G,EAAA,GACA0C,EAAA1C,EAAA,GACAuC,EAAAvC,EAAA,GAEAyC,EAAAzC,EAAA,IAMMwM,EAAc,cAGPpM,EAAAqM,YAAc,CAAC1I,IAAoC,CAAED,KAAM0I,EAAazI,WAIxE3D,EAAA4D,eAAiB,CAACqI,GACtB,CAACzI,EAAUC,KAEhB,MACM6I,EAAa,IADEjK,EAAAyJ,QAAQrI,KACOE,OAC9BA,EAAQ,GACd,IAAK,IAAIpF,EAAI,EAAGA,EAAI0N,EAAO1N,IAAK,CAC9B,MAAMwF,EAAQ5B,EAAAgG,OAAO,EAAGmE,EAAW7N,OAAS,GAC5CkF,EAAMhF,QAAQ2N,EAAW3M,OAAOoE,EAAO,IAIzC,OADAP,EAASxD,EAAAqM,YAAY1I,IACdA,IAIX,MAAMwD,EAA0B,CAC9BxD,MAAO,IAyBT3D,EAAAkM,QAAe5J,EAAA2E,SAtBf,SACEZ,EAAmBc,EACnBK,GAGA,GAAIA,EAAO9D,OAASiD,EAAAnE,WAAY,CAC9B,MAAMmB,EAAQ,GACd,IAAK,MAAMO,KAAQhC,EAAAwH,MACjB/F,EAAMhF,KAAIC,OAAAiK,OAAA,GAAK3E,IAEjB,MAAO,CAACP,SAGV,OAAI6D,EAAO9D,OAAS0I,EACX,CACLzI,MAAO0C,EAAM1C,MAAMqF,OAAO9E,IAAwC,IAAhCsD,EAAO7D,MAAMsF,QAAQ/E,KAIpDmC,qBCxDTpG,EAAAD,QAAA,CAAkBuM,UAAA,SAAAb,IAAA,SAAAc,KAAA,SAAAzH,MAAA,SAAA1B,MAAA,SAAAD,WAAA,QAAAE,QAAA,SAAAmJ,QAAA,SAAAC,WAAA,SAAAC,QAAA,SAAAd,MAAA,6FCAlB,MAAAe,EAAAhN,EAAA,GACAiN,EAAAjN,EAAA,IACAkN,EAAAlN,EAAA,IACAmN,EAAAnN,EAAA,IACAoN,EAAApN,EAAA,IACA+G,EAAA/G,EAAA,GACAqN,EAAArN,EAAA,IAGAkN,EAAQI,QAAQ,CACdC,gBAAmBL,EAAQM,eAC3BD,YAAevL,OAAOyL,SAASC,YAGjC,MAAMC,EAAQP,EAAAd,UAEXqB,EAAM/J,SAA2BmD,EAAApD,cAEpCsJ,EAASW,OACPZ,EAAAa,cAACV,EAAAW,SAAQ,CAACH,MAAOA,GACfX,EAAAa,cAACR,EAAAU,UAAS,OAEZC,SAASC,eAAe,iGCtB1B,MAAAC,EAAAlO,EAAA,GACAmO,EAAAnO,EAAA,IAEAoO,GADApO,EAAA,IACAA,EAAA,KAEAI,EAAAkM,QAAA,SAAqC7F,GAEnC,MAAM4H,EAAa,GAQnB,OANAA,EAAWtP,KAAKoP,EAAA7B,SAMT4B,EAAAI,YACLF,EAAA9B,QACA7F,EACAyH,EAAAK,mBAAmBF,sFClBvB,MAAAH,EAAAlO,EAAA,GAGAwO,EAAAxO,EAAA,IACAyO,EAAAzO,EAAA,IACA0O,EAAA1O,EAAA,IACAoC,EAAApC,EAAA,IACAwC,EAAAxC,EAAA,IACA2C,EAAA3C,EAAA,IAsBAI,EAAAkM,QAAe4B,EAAAS,gBAA0C,CACvDxC,KAAAxJ,EAAA2J,QACA5I,QAAA8K,EAAAlC,QACA9I,WAAAiL,EAAAnC,QACA7I,MAAAiL,EAAApC,QACAnH,MAAA/C,EAAAkK,QACAL,MAAAzJ,EAAA8J,yFCpCF,MAAAvF,EAAA/G,EAAA,GACAqC,EAAArC,EAAA,GACAuC,EAAAvC,EAAA,GACA0C,EAAA1C,EAAA,GAMMuH,EAA6B,CAAChE,OAAQ,IA0D5CnD,EAAAkM,QAAe5J,EAAA2E,SAxDf,SACEZ,EAAsBc,EACtBK,GAGA,GAAIA,EAAO9D,OAASiD,EAAAnE,WAAY,CAE9B,MAAMW,EAAkB,GACxB,IAAK,IAAI5E,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,MAAMuF,EAAe,CAACJ,KAAMzB,EAAA6C,UAAUxB,QAASK,MAAO,IACtD,IAAK,IAAIlE,EAAI,EAAGA,EAAIlB,EAAGkB,IACnBqE,EAAMH,MAAMhF,KAAK,IAErBwE,EAAOxE,KAAKmF,GAGd,MAAO,CAACX,UAGV,OAAIqE,EAAO9D,OAASiD,EAAAlE,aAAe4D,EAAMlD,OAAOuF,KAAK5E,GAASA,IAAU0D,EAAO1D,OAC7ElF,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAAqG,YAAYnC,EAAMlD,OAAQqE,EAAOtD,QAGzDsD,EAAO9D,OAASiD,EAAAjE,eAAiB2D,EAAMlD,OAAOuF,KAAK5E,KAAWA,EAAM8B,WACtEhH,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAA2G,cAAczC,EAAMlD,UAG5CqE,EAAO9D,OAASiD,EAAAhE,YAAc0D,EAAMlD,OAAOuF,KAAK5E,GAAS,CAAC0D,EAAOnD,KAAMmD,EAAOlD,IAAI2E,QAAQnF,IAAU,GACtGlF,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAA4G,WAAW1C,EAAMlD,OAAQqE,EAAOnD,KAAMmD,EAAOlD,GAAIkD,EAAO7D,SAGhF6D,EAAO9D,OAASiD,EAAA9D,cAAgBwD,EAAMlD,OAAOuF,KAAK5E,GAAS0D,EAAO1D,QAAUA,GAC9ElF,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAA+G,aAAa7C,EAAMlD,OAAQqE,EAAO1D,MAAO0D,EAAO7D,SAGxE6D,EAAO9D,OAASiD,EAAA/D,YAClBhE,OAAAiK,OAAA,GACKxC,EAAK,CACRlD,OAAQkD,EAAMlD,OAAOsF,IAAI3E,GACnBA,IAAU0D,EAAO1D,MAAgBA,EACrClF,OAAAiK,OAAA,GACK/E,EAAK,CACRH,MAAOG,EAAMH,MAAM8E,IAAI,CAACvE,EAAMH,IACxBA,EAAQD,EAAMH,MAAMlF,OAAS,EAAYyF,EACtC,CAACA,KAAMsD,EAAOtD,YAQxBmC,mFC/DT,MAAAM,EAAA/G,EAAA,GACAqC,EAAArC,EAAA,GACAuC,EAAAvC,EAAA,GACA0C,EAAA1C,EAAA,GAMMuH,EAAgC,CACpChE,OAAQ,CACN,CAACO,KAAMzB,EAAA6C,UAAU1B,WAAYO,MAAO,IACpC,CAACD,KAAMzB,EAAA6C,UAAU1B,WAAYO,MAAO,IACpC,CAACD,KAAMzB,EAAA6C,UAAU1B,WAAYO,MAAO,IACpC,CAACD,KAAMzB,EAAA6C,UAAU1B,WAAYO,MAAO,MA6BxC3D,EAAAkM,QAAe5J,EAAA2E,SAzBf,SACEZ,EAAyBc,EACzBK,GAGA,OAAIA,EAAO9D,OAASiD,EAAAnE,WAClB5D,OAAAiK,OAAA,GAAW1B,GAGTK,EAAO9D,OAASiD,EAAAlE,aAAe4D,EAAMlD,OAAOuF,KAAK5E,GAASA,IAAU0D,EAAO1D,OAC7ElF,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAAqG,YAAYnC,EAAMlD,OAAQqE,EAAOtD,QAGzDsD,EAAO9D,OAASiD,EAAAjE,eAAiB2D,EAAMlD,OAAOuF,KAAK5E,KAAWA,EAAM8B,WACtEhH,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAA2G,cAAczC,EAAMlD,UAG5CqE,EAAO9D,OAASiD,EAAAhE,YAAc0D,EAAMlD,OAAOuF,KAAK5E,GAAS,CAAC0D,EAAOnD,KAAMmD,EAAOlD,IAAI2E,QAAQnF,IAAU,GACtGlF,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAA4G,WAAW1C,EAAMlD,OAAQqE,EAAOnD,KAAMmD,EAAOlD,GAAIkD,EAAO7D,SAG7E0C,mFCvCT,MAAAM,EAAA/G,EAAA,GACAuC,EAAAvC,EAAA,GACAqC,EAAArC,EAAA,GACA0C,EAAA1C,EAAA,GAOMuH,EAA2B,CAAChE,OAAQ,CAAC,CAACO,KAAMzB,EAAA6C,UAAUzB,MAAOM,MAAO,KAAM6K,QAAS,GA2CzFxO,EAAAkM,QAAe5J,EAAA2E,SAzCf,SACEZ,EAAoBc,EACpBK,GAGA,OAAIA,EAAO9D,OAASiD,EAAAnE,WAClB5D,OAAAiK,OAAA,GAAW1B,GAGTK,EAAO9D,OAASiD,EAAAlE,aAAe4D,EAAMlD,OAAOuF,KAAK5E,GAASA,IAAU0D,EAAO1D,OAC7ElF,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAAqG,YAAYnC,EAAMlD,OAAQqE,EAAOtD,QAGzDsD,EAAO9D,OAASiD,EAAAjE,eAAiB2D,EAAMlD,OAAOuF,KAAK5E,KAAWA,EAAM8B,WACtEhH,OAAAiK,OAAA,GAAWxC,EAAK,CAAElD,OAAQhB,EAAA2G,cAAczC,EAAMlD,UAG5CqE,EAAO9D,OAASiD,EAAAhE,YAAc0D,EAAMlD,OAAOuF,KAAK5E,GAAS,CAAC0D,EAAOnD,KAAMmD,EAAOlD,IAAI2E,QAAQnF,IAAU,GACtGlF,OAAAiK,OAAA,GACKxC,EAAK,CACRmI,QAAShH,EAAOlD,KAAO+B,EAAMlD,OAAO,GAChCmF,KAAKF,IAAI/B,EAAMlD,OAAO,GAAGQ,MAAMlF,OAAS+I,EAAO7D,MAAMlF,OAAQ,GAC7D6J,KAAKD,IAAI,EAAGhC,EAAMmI,QAAU,GAChCrL,OAAQhB,EAAA4G,WAAW1C,EAAMlD,OAAQqE,EAAOnD,KAAMmD,EAAOlD,GAAIkD,EAAO7D,SAIhE6D,EAAO9D,OAASiD,EAAA9D,cAAgBwD,EAAMlD,OAAOuF,KAAK5E,GAAS0D,EAAO1D,QAAUA,GAC9ElF,OAAAiK,OAAA,GACKxC,EAAK,CACRmI,QAAShH,EAAO1D,QAAUuC,EAAMlD,OAAO,GACnCmF,KAAKF,IAAI/B,EAAMlD,OAAO,GAAGQ,MAAMlF,OAAS+I,EAAO7D,MAAMlF,OAAQ,GAC7D6J,KAAKD,IAAI,EAAGhC,EAAMmI,QAAU,GAChCrL,OAAQhB,EAAA+G,aAAa7C,EAAMlD,OAAQqE,EAAO1D,MAAO0D,EAAO7D,SAIrD0C,mFCjDT,MAAAuG,EAAAhN,EAAA,GACAmN,EAAAnN,EAAA,IACAmC,EAAAnC,EAAA,GACAqC,EAAArC,EAAA,IACA6O,EAAA7O,EAAA,IAEA8O,EAAA9O,EAAA,GACA+G,EAAA/G,EAAA,GAEAyC,EAAAzC,EAAA,IACA0C,EAAA1C,EAAA,GA2IA,MAAM+O,EAAW5M,EAAAgB,eAAe,CAC9BV,EAAAa,WACAb,EAAAW,cACAX,EAAAoE,SACApE,EAAAY,SACAZ,EAAAuJ,UACC,EACAzI,OAAQG,IACRH,OAAQC,GACT2B,EACA1B,GACCwI,YACE,CACHvI,UACAF,aACA2B,QACA1B,QACAwI,WAgBW7L,EAAA2N,UAAYZ,EAAA6B,QAFAvI,GAA+CsI,EAAStI,GAXrD7C,IAAkD,CAC5EqL,cAAe,IAAMrL,EAASmD,EAAApD,cAC9BuL,iBAAkB,IAAMtL,EAASmD,EAAAP,cACjC2I,mBAAoB,CAACjL,EAAOI,IAASV,EAASmD,EAAAT,aAAapC,EAAOI,IAClE8K,iBAAkB,CAAClL,EAAOI,IAASV,EAASmD,EAAAV,WAAWnC,EAAOI,IAC9D+K,sBAAuB,CAACnL,EAAOI,IAASV,EAASmD,EAAAhB,gBAAgB7B,EAAOI,IACxEgL,kBAAmB,CAACpL,EAAOI,IAASV,EAASmD,EAAA/B,YAAYd,EAAOI,IAChEiL,WAAY,IAAM3L,EAASlB,EAAAuE,QAC3BuI,WAAY,IAAM5L,EAASlB,EAAAyE,UAKJgG,CApJzB,cAAiCH,EAAMyC,cAErClC,YAAamC,GACXC,MAAMD,GACNE,KAAKC,mBAAqBD,KAAKC,mBAAmBnO,KAAKkO,MACvDA,KAAKV,iBAAmBU,KAAKV,iBAAiBxN,KAAKkO,MACnDA,KAAKT,mBAAqBS,KAAKT,mBAAmBzN,KAAKkO,MACvDA,KAAKR,iBAAmBQ,KAAKR,iBAAiB1N,KAAKkO,MACnDA,KAAKP,sBAAwBO,KAAKP,sBAAsB3N,KAAKkO,MAC7DA,KAAKN,kBAAoBM,KAAKN,kBAAkB5N,KAAKkO,MACrDA,KAAKE,cAAgBF,KAAKE,cAAcpO,KAAKkO,MAG/CrC,oBACES,SAAS+B,iBAAiB,UAAWH,KAAKE,eAG5CvC,uBACES,SAASgC,oBAAoB,UAAWJ,KAAKE,eAG/CvC,qBACEqC,KAAKF,MAAMT,gBAGb1B,cAAe0C,GACK,KAAdA,EAAEC,UACFD,EAAEE,SAAWF,EAAEG,SACjBR,KAAKF,MAAMF,aACFS,EAAEE,SACXP,KAAKF,MAAMH,cAIfhC,iBAAkBrJ,EAAcI,GAC9BsL,KAAKF,MAAMR,iBAAiBhL,EAAOI,GAGrCiJ,mBAAoBrJ,EAAcI,GAChCsL,KAAKF,MAAMP,mBAAmBjL,EAAOI,GAGvCiJ,iBAAkBrJ,EAAcI,GAC9BsL,KAAKF,MAAMN,iBAAiBlL,EAAOI,GAGrCiJ,sBAAuBrJ,EAAcI,GACnCsL,KAAKF,MAAML,sBAAsBnL,EAAOI,GAG1CiJ,kBAAmBrJ,EAAcI,GAC/BsL,KAAKF,MAAMJ,kBAAkBpL,EAAOI,GAGtCiJ,SACE,OACEP,EAAAa,cAAA,OAAKwC,UAAWxB,EAAAlC,WACdK,EAAAa,cAAA,WACEb,EAAAa,cAAA,UAAQyC,GAAG,WAAWD,UAAWxB,EAAA9B,QAASwD,QAASX,KAAKC,oBACrD,YAEH7C,EAAAa,cAAA,SAAOyC,GAAG,QAAQD,UAAWxB,EAAA5C,OAC1B,UACA2D,KAAKF,MAAMzD,QAGhBe,EAAAa,cAAA,OAAKwC,UAAWxB,EAAA/C,KACdkB,EAAAa,cAACxL,EAAAmO,eAAc,CACbtM,MAAO0L,KAAKF,MAAMvK,MAAM5B,OAAO,GAC/BgN,QAASX,KAAKV,iBACduB,UAAW3B,EAAA7G,eAAeyI,KAC1B5M,KAAMgL,EAAA5J,UAAUC,MAChByB,KAAMgJ,KAAKF,MAAMvK,MAAMyB,KACvB+J,QAAQ,IAEV3D,EAAAa,cAACxL,EAAAmO,eAAc,CACbtM,MAAO0L,KAAKF,MAAMjM,MAAMF,OAAO,GAC/BgN,QAASX,KAAKR,iBACdwB,cAAehB,KAAKN,kBACpBmB,UAAW3B,EAAA7G,eAAe4I,WAC1B/M,KAAMgL,EAAA5J,UAAUzB,MAChBgF,IAAKmH,KAAKF,MAAMjM,MAAMmL,QACtBkC,OAAQ,KAETlB,KAAKF,MAAMlM,WAAWqF,IAAI,CAAC3E,EAAOC,IACjC6I,EAAAa,cAACxL,EAAAmO,eAAc,CACb/O,kBAAmB0C,IACnBoM,QAASX,KAAKP,sBACdnL,MAAOA,EACPuM,UAAW3B,EAAA7G,eAAeyI,KAC1B5M,KAAMgL,EAAA5J,UAAU1B,WAChBiF,IAAK,MAIXuE,EAAAa,cAAA,OAAKwC,UAAWxB,EAAAjC,MACbgD,KAAKF,MAAMhM,QAAQmF,IAAI,CAAC3E,EAAOC,IAC9B6I,EAAAa,cAACxL,EAAAmO,eAAc,CACb/O,eAAgB0C,IAChBoM,QAASX,KAAKT,mBACdyB,cAAehB,KAAKN,kBACpBpL,MAAOA,EACPuM,UAAW3B,EAAA7G,eAAe8I,SAC1BjN,KAAMgL,EAAA5J,UAAUxB,YAItBsJ,EAAAa,cAAA,OAAKwC,UAAWxB,EAAAhC,SACb,4FC9IX,MAAAG,EAAAhN,EAAA,GACA6O,EAAA7O,EAAA,IACAqC,EAAArC,EAAA,GA8BA,MAAawQ,UAAuBxD,EAAMyC,cAaxClC,YAAamC,GACXC,MAAMD,GAHAE,KAAAoB,IAAMhE,EAAMiE,YAIlBrB,KAAKsB,kBAAoBtB,KAAKsB,kBAAkBxP,KAAKkO,MACrDA,KAAKuB,wBAA0BvB,KAAKuB,wBAAwBzP,KAAKkO,MAGnEwB,kBACE,OAAQxB,KAAKF,MAAM5L,MACjB,KAAKzB,EAAA6C,UAAU1B,WAAY,OAAOqL,EAAArL,WAClC,KAAKnB,EAAA6C,UAAUxB,QAAS,OAAOmL,EAAAnL,QAC/B,KAAKrB,EAAA6C,UAAUC,MAAO,OAAO0J,EAAA1J,MAC7B,KAAK9C,EAAA6C,UAAUzB,MAAO,OAAOoL,EAAApL,OAIjC4N,mBACE,OAAQzB,KAAKF,MAAMe,WACjB,KAAKpO,EAAA4F,eAAeyI,KACpB,KAAKrO,EAAA4F,eAAe8I,SAClB,OAAOnB,KAAKF,MAAM4B,MACpB,KAAKjP,EAAA4F,eAAe4I,WAClB,OAA6B,IAAtBjB,KAAK7L,MAAMlF,OACd+Q,KAAKF,MAAM6B,OACV3B,KAAKF,MAAMoB,QAAUlB,KAAK7L,MAAMlF,OAAS,GAAK+Q,KAAKF,MAAM4B,OAIpEE,oBACE,OAAQ5B,KAAKF,MAAMe,WACjB,KAAKpO,EAAA4F,eAAeyI,KACpB,KAAKrO,EAAA4F,eAAe4I,WAClB,OAAOjB,KAAKF,MAAM6B,OACpB,KAAKlP,EAAA4F,eAAe8I,SAClB,OAA6B,IAAtBnB,KAAK7L,MAAMlF,OACd+Q,KAAKF,MAAM6B,OACX3B,KAAKF,MAAMoB,QAAUlB,KAAK7L,MAAMlF,OAAS,GAAK+Q,KAAKF,MAAM6B,QAInExN,YACE,OAAO6L,KAAKF,MAAMiB,SAAWf,KAAKF,MAAMxL,MAAMH,MAAMlF,OAAS,GAAK+Q,KAAKF,MAAM9I,MAAQgJ,KAAKF,MAAM9I,KAAO,GACnG,CAAC,IACDgJ,KAAKF,MAAMxL,MAAMH,MAAM7B,OAAO0N,KAAKF,MAAMjH,KAG/C8E,wBAAyBkE,GACvB,MAAM1N,MAACA,GAAS6L,MACV1L,MAACA,EAAK4M,OAAEA,EAAML,UAAEA,EAASG,cAAEA,GAAiBhB,KAAKF,OAChDgC,YAAazB,GAAKwB,EACzB,IAAKb,EAAiB,OAEtB,MAAMe,EAAOlB,IAAcpO,EAAA4F,eAAe4I,WAAa,UAAY,UAEnED,EAAc1M,EAAOH,EADP2E,KAAKF,IAAIzE,EAAMlF,OAAS,EAAG6J,KAAKC,MAAMsH,EAAE0B,GAAQb,MAIhEvD,kBAAmBkE,GACjB,MAAM1N,MAACA,GAAS6L,MACV1L,MAACA,EAAK4M,OAAEA,EAAML,UAAEA,EAASF,QAAEA,GAAWX,KAAKF,OAC1CgC,YAAazB,GAAKwB,EACzB,IAAKlB,EAAW,OAEhB,MAAMoB,EAAOlB,IAAcpO,EAAA4F,eAAe4I,WAAa,UAAY,UAEnEN,EAAQrM,EAAOH,EADD2E,KAAKF,IAAIzE,EAAMlF,OAAS,EAAG6J,KAAKC,MAAMsH,EAAE0B,GAAQb,MAIhEvD,oBACEqC,KAAKgC,eAGPrE,qBACEqC,KAAKgC,eAGPrE,eACE,MAAMsE,EAASjC,KAAKoB,IAAIc,QACxB,IAAKD,EAAU,OAEf,MAAME,EAAMF,EAAOG,WAAW,MAC9B,IAAKD,EAAO,OAEZ,MAAMhO,MAACA,GAAS6L,MACVa,UAACA,EAASK,OAAEA,GAAUlB,KAAKF,MAEjCqC,EAAIE,OACJF,EAAIG,UAAU,GAAK,IACnBH,EAAII,UAAU,EAAG,EAAGN,EAAOP,MAAOO,EAAON,QAEpB,IAAjBxN,EAAMlF,SACR+Q,KAAKwC,cAAcL,EAAK,CAACnH,EAAG,EAAGC,EAAG,IAClCkH,EAAIM,UAGN,IAAK,IAAI1T,EAAI,EAAGA,EAAIoF,EAAMlF,OAAQF,IAAK,CACrC,MAAMiM,EAAI6F,IAAcpO,EAAA4F,eAAe4I,WAAalS,EAAImS,EAAS,EAC3DjG,EAAI4F,IAAcpO,EAAA4F,eAAe4I,WAAa,EAAIlS,EAAImS,EAExDnS,EAAIoF,EAAMlF,OAAS,IACrBkT,EAAIE,OACJrC,KAAK0C,eAAeP,EAAK,CAACnH,IAAGC,OAG/B+E,KAAK2C,SAASR,EAAKhO,EAAMpF,GAAI,CAACiM,IAAGC,MAE7BlM,EAAIoF,EAAMlF,OAAS,GACrBkT,EAAIS,UAGRT,EAAIS,UAGNjF,eAAgBwE,GAA+BnH,EAACA,EAACC,EAAEA,IAEjD,MAAM4F,UAACA,EAASgC,OAAEA,EAAM3B,OAAEA,EAAMQ,MAAEA,EAAKC,OAAEA,GAAU3B,KAAKF,MAClDgD,EAAajC,IAAcpO,EAAA4F,eAAe4I,WAAaC,EAASQ,EAChEqB,EAAclC,IAAcpO,EAAA4F,eAAe4I,WAAaU,EAAST,EAEvEiB,EAAIa,YACAnC,IAAcpO,EAAA4F,eAAe4I,YAC/BkB,EAAIc,OAAOjI,EAAGC,GACdkH,EAAIe,OAAOlI,EAAI8H,EAAaD,EAAQ5H,GACpCkH,EAAIgB,iBAAiBnI,EAAI8H,EAAY7H,EAAGD,EAAI8H,EAAY7H,EAAI4H,GAC5DV,EAAIe,OAAOlI,EAAI8H,EAAY7H,EAAI8H,EAAcF,GAC7CV,EAAIgB,iBAAiBnI,EAAI8H,EAAY7H,EAAI8H,EAAa/H,EAAI8H,EAAaD,EAAQ5H,EAAI8H,GACnFZ,EAAIe,OAAOlI,EAAGC,EAAI8H,KAElBZ,EAAIc,OAAOjI,EAAI8H,EAAY7H,GAC3BkH,EAAIe,OAAOlI,EAAI8H,EAAY7H,EAAI8H,EAAcF,GAC7CV,EAAIgB,iBAAiBnI,EAAI8H,EAAY7H,EAAI8H,EAAa/H,EAAI8H,EAAaD,EAAQ5H,EAAI8H,GACnFZ,EAAIe,OAAOlI,EAAI6H,EAAQ5H,EAAI8H,GAC3BZ,EAAIgB,iBAAiBnI,EAAGC,EAAI8H,EAAa/H,EAAGC,EAAI8H,EAAcF,GAC9DV,EAAIe,OAAOlI,EAAGC,IAEhBkH,EAAIiB,YACJjB,EAAIkB,OAGN1F,cAAewE,GAA+BnH,EAACA,EAACC,EAAEA,IAChD,MAAM4H,OAACA,EAAMlB,OAAEA,EAAMD,MAAEA,GAAS1B,KAAKF,MACrCqC,EAAIa,YACJb,EAAIc,OAAOjI,EAAI6H,EAAQ5H,GACvBkH,EAAIe,OAAOlI,EAAI0G,EAAQmB,EAAQ5H,GAC/BkH,EAAIgB,iBAAiBnI,EAAI0G,EAAOzG,EAAGD,EAAI0G,EAAOzG,EAAI4H,GAClDV,EAAIe,OAAOlI,EAAI0G,EAAOzG,EAAI0G,EAASkB,GACnCV,EAAIgB,iBAAiBnI,EAAI0G,EAAOzG,EAAI0G,EAAQ3G,EAAI0G,EAAQmB,EAAQ5H,EAAI0G,GACpEQ,EAAIe,OAAOlI,EAAI6H,EAAQ5H,EAAI0G,GAC3BQ,EAAIgB,iBAAiBnI,EAAGC,EAAI0G,EAAQ3G,EAAGC,EAAI0G,EAASkB,GACpDV,EAAIe,OAAOlI,EAAGC,EAAI4H,GAClBV,EAAIgB,iBAAiBnI,EAAGC,EAAGD,EAAI6H,EAAQ5H,GACvCkH,EAAIiB,YAGNzF,SAAUwE,EAA+BmB,GAAuBtI,EAACA,EAACC,EAAEA,IAElE,MAAMvG,KAACA,EAAI4B,SAAEA,GAAYgN,EAKzB,GAHAtD,KAAKwC,cAAcL,EAAK,CAACnH,IAAGC,MAC5BkH,EAAIM,UAEC/N,EAGH,OAFAyN,EAAIoB,UAAY,YAChBpB,EAAIqB,OAIFlN,IACF6L,EAAIoB,UAAY,SAChBpB,EAAIqB,QAGN,MAAMjS,MAACA,EAAKsE,KAAEA,EAAI2E,QAAEA,GAAW9F,EAE/ByN,EAAIoB,UAAY/I,EAAQE,MACxByH,EAAIrG,UAAY,SAChBqG,EAAIsB,aAAe,MAEnBtB,EAAIuB,KAAOlJ,EAAQgB,WACnB2G,EAAIwB,SAASpS,EAAOiJ,EAAQiB,aAAeT,EAAGR,EAAQkB,aAAeT,EAAG,IACxEkH,EAAIwB,SAAS9N,EAAM2E,EAAQmB,YAAcX,EAAGR,EAAQoB,YAAcX,GAElEkH,EAAIE,OACJF,EAAIG,UAAUtC,KAAKF,MAAM4B,MAAO1B,KAAKF,MAAM6B,QAC3CQ,EAAIyB,OAAO9K,KAAK+K,IAChB1B,EAAIwB,SAASpS,EAAOiJ,EAAQiB,aAAeT,EAAGR,EAAQkB,aAAeT,EAAG,IACxEkH,EAAIwB,SAAS9N,EAAM2E,EAAQmB,YAAcX,EAAGR,EAAQoB,YAAcX,GAClEkH,EAAIS,UAEJT,EAAIsB,aAAe,SAEnB,IAAK,MAAM7I,KAAOJ,EAAQqB,UAAW,CACnC,MAAMiI,EAASlJ,EAAIoB,SAAW,EAAI,EAClCmG,EAAIrG,UAAYlB,EAAIkB,UAEhBlB,EAAIoB,UACNmG,EAAIE,OACJF,EAAIG,UAAUtC,KAAKF,MAAM4B,MAAO1B,KAAKF,MAAM6B,QAC3CQ,EAAIyB,OAAO9K,KAAK+K,KAGlB1B,EAAIuB,QAAUlJ,EAAQG,sBACtBwH,EAAIwB,SAAS9N,EAAM+E,EAAI5D,KAAOgE,EAAI8I,EAAQlJ,EAAIsB,IAAMjB,EAAI6I,GAEpDlJ,EAAIoB,SACNmG,EAAIS,WAKVjF,SACE,OACEP,EAAAa,cAAA,UACE+C,cAAehB,KAAKuB,wBACpBZ,QAASX,KAAKsB,kBACdb,UAAWT,KAAKwB,YAChBE,MAAO1B,KAAKyB,aAAe,EAC3BE,OAAQ3B,KAAK4B,cAAgB,EAC7BR,IAAKpB,KAAKoB,OApOTR,EAAAmD,aAAe,CACpBlL,IAAKmL,IACLjD,QAAQ,EACRW,MAAO,GACPC,OAAQ,GACRT,OAAQ,GACR2B,OAAQ,IARZrS,EAAAoQ","file":"klondike.7dd40bc5434c5b3afe78.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([22,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nimport {createSelector} from 'reselect'\nimport {ThunkResult} from './index'\nimport {useStock} from './stock'\nimport {StackCard, Stack, StackType} from '../lib/Stack'\nimport {Card, ValueType} from '../lib/Card'\nimport {get_selection, movable_to_tableau, get_top_card, movable_to_foundation} from '../lib/util'\nimport {incrementScore} from './score'\nimport {getWaste, getTableau, getFoundation, getStock} from '../redux/selectors'\nimport {checkpoint} from './undoable'\nimport {getRandomCards} from './deck'\n\nexport const INITIALIZE = 'INITIALIZE'\nexport type INITIALIZE = typeof INITIALIZE\ntype Initialize = {type: INITIALIZE}\n\nexport const SELECT_CARD = 'SELECT_CARD'\ntype SELECT_CARD = typeof SELECT_CARD\ntype SelectAction = {type: SELECT_CARD, stack: Stack, card: StackCard}\n\nexport const DESELECT_CARD = 'DESELECT_CARD'\ntype DESELECT_CARD = typeof DESELECT_CARD\ntype DeselectAction = {type: DESELECT_CARD}\n\nexport const MOVE_CARDS = 'MOVE_CARDS'\ntype MOVE_CARDS = typeof MOVE_CARDS\ntype MoveCardAction = {type: MOVE_CARDS, from: Stack, to: Stack, cards: StackCard[]}\n\nexport const REPLACE_TOP = 'REPLACE_TOP'\ntype REPLACE_TOP = typeof REPLACE_TOP\ntype ReplaceTopAction = {type: REPLACE_TOP, stack: Stack, card: Card}\n\nexport const APPEND_CARDS = 'APPEND_CARDS'\ntype APPEND_CARDS = typeof APPEND_CARDS\ntype AppendCardAction = {type: APPEND_CARDS, stack: Stack, cards: Card[]}\n\nexport type GlobalActions =\n  Initialize |\n  SelectAction |\n  DeselectAction |\n  MoveCardAction |\n  ReplaceTopAction |\n  AppendCardAction\n\nconst getAllStacks = createSelector([\n  getFoundation,\n  getWaste,\n  getTableau\n], (\n  {stacks: foundation},\n  {stacks: waste},\n  {stacks: tableau}\n) => [\n  ...foundation,\n  ...waste,\n  ...tableau\n])\n\nexport function initialize(): ThunkResult<void> {\n  return (dispatch, getState) => {\n    dispatch({type: INITIALIZE})\n\n    const tableau = getTableau(getState())\n    const cards = dispatch(getRandomCards(tableau.stacks.length))\n    tableau.stacks.forEach((stack, index) => {\n      dispatch(appendCards(stack, [cards[index]]))\n    })\n\n  }\n}\n\nconst selectCard = (stack: Stack, card: StackCard): SelectAction => ({type: SELECT_CARD, card, stack})\n\nconst deselectCard = (): DeselectAction => ({type: DESELECT_CARD})\n\nconst appendCards = (stack: Stack, cards: Card[]): AppendCardAction => ({type: APPEND_CARDS, cards, stack})\n\nconst moveCards = (\n  from: Stack,\n  to: Stack,\n  from_card: Card | null = null,\n  index: number | null = null,\n  reverse: Boolean = false\n): MoveCardAction => {\n\n  if (index == null) {\n    if (from_card == null) { throw new Error('from card reqired when index not provided')}\n    index = from.cards.findIndex(card => !!card.card && card.card === from_card)\n  }\n\n  const cards = from.cards.slice(index)\n  if (reverse) { cards.reverse() }\n  return {type: MOVE_CARDS, from, to, cards}\n}\n\nconst replaceTop = (stack: Stack, card: Card): ReplaceTopAction => ({type: REPLACE_TOP, stack, card})\n\nexport function doubleClick (stack: Stack, stackCard?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    if (stack.type === StackType.foundation || stack.type === StackType.stock) {\n      return\n    }\n\n    if (stackCard == null) {\n      return\n    }\n\n    const {card} = stackCard\n\n    if (card == null) {\n      return\n    }\n\n    const foundation = getFoundation(getState())\n\n    const foundation_stack = (\n      card.value === ValueType.ace\n        ? foundation.stacks.find(stack => stack.cards.length === 0)\n        : foundation.stacks.find(stack => {\n          if (stack.cards.length === 0) { return false }\n          const first = stack.cards[0].card\n          if (first == null) { return false }\n          return first.suit === card.suit\n        })\n    ) as Stack\n\n    const top_card = get_top_card(foundation_stack)\n\n    if (movable_to_foundation(card, top_card)) {\n\n      dispatch(checkpoint())\n\n      if (stack.type === StackType.waste) {\n        dispatch(incrementScore(5))\n      }\n\n      if (stack.type === StackType.tableau) {\n        dispatch(incrementScore(10))\n      }\n\n      dispatch(moveCards(stack, foundation_stack, card))\n      dispatch(deselectCard())\n    }\n\n  }\n}\n\nexport function clickFoundation (stack: Stack, card?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    const stacks = getAllStacks(getState())\n    const selection = get_selection(stacks)\n\n    if (!selection) {\n      if (card && card.card) {\n        dispatch(selectCard(stack, card))\n      }\n      return\n    }\n\n    if (card && card.selected) {\n      dispatch(deselectCard())\n      return\n    }\n\n    const top_card = get_top_card(stack)\n    const {card: selected_card, stack: from_stack} = selection\n\n    if (movable_to_foundation(selected_card, top_card)) {\n\n      dispatch(checkpoint())\n\n      if (from_stack.type === StackType.waste) {\n        dispatch(incrementScore(5))\n      }\n\n      if (from_stack.type === StackType.tableau) {\n        dispatch(incrementScore(10))\n      }\n\n      dispatch(moveCards(from_stack, stack, selected_card))\n      dispatch(deselectCard())\n    }\n\n  }\n}\n\nexport function clickWaste (stack: Stack, card?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    if (!card) { return }\n\n    const stacks = getAllStacks(getState())\n    const selection = get_selection(stacks)\n    const top_card = get_top_card(stack)\n\n    if (card.selected) {\n      dispatch(deselectCard())\n      return\n    }\n\n    if (!selection && top_card === card) {\n      dispatch(selectCard(stack, card))\n    }\n\n  }\n}\n\nexport function clickTableau (stack: Stack, card?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    const stacks = getAllStacks(getState())\n    const selection = get_selection(stacks)\n    const top_card = get_top_card(stack)\n\n    if (!selection) {\n      if (card && card.card) {\n        dispatch(selectCard(stack, card))\n      } else if (card && top_card && top_card.card == null) {\n        dispatch(checkpoint())\n        dispatch(incrementScore(5))\n        const card = dispatch(getRandomCards(1))\n        dispatch(replaceTop(stack, card[0]))\n      }\n      return\n    }\n\n    if (card && card.selected) {\n      dispatch(deselectCard())\n      return\n    }\n\n    const {card: selected_card, stack: from_stack} = selection\n\n    if (card === top_card && movable_to_tableau(selected_card, top_card)) {\n\n      dispatch(checkpoint())\n\n      if (from_stack.type === StackType.waste) {\n        dispatch(incrementScore(10))\n      }\n\n      if (from_stack.type === StackType.foundation) {\n        dispatch(incrementScore(-10))\n      }\n\n      dispatch(moveCards(from_stack, stack, selected_card))\n      dispatch(deselectCard())\n\n    }\n  }\n}\n\nexport function clickStock (): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    const state = getState()\n    const {stacks: [waste_stack]} = getWaste(state)\n    const {stacks: [stock_stack], left} = getStock(state)\n\n    dispatch(checkpoint())\n\n    if (left > 0) {\n\n      dispatch(useStock(3))\n      dispatch(appendCards(waste_stack, dispatch(getRandomCards(3))))\n\n    } else if (stock_stack.cards.length > 0) {\n\n      dispatch(moveCards(stock_stack, waste_stack, null, -3, true))\n\n    } else {\n\n      dispatch(moveCards(waste_stack, stock_stack, null, 0, true))\n\n    }\n\n  }\n}\n","\nimport {Reducer, Action, AnyAction} from 'redux'\nimport {INITIALIZE} from './actions'\n\nexport type History <State> = {\n  past: State[],\n  present: State,\n  future: State[]\n}\n\nconst UNDO = 'UNDO'\ntype UNDO = typeof UNDO\ntype UndoAction = {type: UNDO}\nexport const undo = (): UndoAction => ({type: UNDO})\n\nconst REDO = 'REDO'\ntype REDO = typeof REDO\ntype RedoAction = {type: REDO}\nexport const redo = (): RedoAction => ({type: REDO})\n\nconst CHECKPOINT = 'CHECKPOINT'\ntype CHECKPOINT = typeof CHECKPOINT\ntype CheckpointAction = {type: CHECKPOINT}\nexport const checkpoint = (): CheckpointAction => ({type: CHECKPOINT})\n\nexport type UndoableActions = UndoAction | RedoAction | CheckpointAction\n\nexport function undoable <S, A extends AnyAction = Action>(reducer: Reducer<S, A>) {\n\n  const initialState: History<S> = {\n    past: [],\n    present: reducer(undefined, {} as A),\n    future: []\n  }\n\n  return function (state = initialState, action: A) {\n    const {past, present, future} = state\n\n    if (action.type === UNDO) {\n      const previous = past[past.length - 1]\n      if (!previous) { return state }\n\n      const newPast = past.slice(0, past.length - 1)\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future]\n      }\n    }\n\n    if (action.type === REDO) {\n      const next = future[0]\n      if (!next) { return state }\n\n      const newFuture = future.slice(1)\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture\n      }\n    }\n\n    const newPresent = reducer(present, action)\n\n    if (action.type === INITIALIZE) {\n      return {\n        past: [],\n        present: newPresent,\n        future: []\n      }\n    }\n\n    if (action.type === CHECKPOINT) {\n      return {\n        past: [...past, present],\n        present: newPresent,\n        future: []\n      }\n    }\n\n    if (present === newPresent) {\n      return state\n    }\n\n    return {\n      past,\n      present: newPresent,\n      future\n    }\n  }\n}\n","\nimport {Card} from './Card'\n\nexport type StackCard = {\n  card?: Card\n  selected?: boolean\n}\n\nexport enum StackDirection {\n  horizontal = 'horizontal',\n  vertical = 'vertical',\n  none = ''\n}\n\nexport enum StackType {\n  tableau = 'tableau',\n  foundation = 'foundation',\n  stock = 'stock',\n  waste = 'waste'\n}\n\nexport type Stack = {\n  cards: StackCard[],\n  selection?: Card,\n  type: StackType\n}\n","\nimport {Card, ValueType} from './Card'\nimport {Stack, StackCard} from './Stack'\n\nexport const random = (min: number, max: number): number => {\n  return Math.floor(Math.random() * max) + min\n}\n\nfunction contains (stack: Stack, card: Card) {\n  return stack.cards.some((item: StackCard) => !!item.card && item.card === card)\n}\n\nexport function get_top_card (stack: Stack): StackCard | null {\n  return stack.cards[stack.cards.length - 1]\n}\n\nexport function get_selection (stacks: Stack[]): {card: Card, stack: Stack} | null {\n  for (let i = 0; i < stacks.length; i++) {\n    const stack = stacks[i]\n    if (stack.selection == null) { continue }\n    return {card: stack.selection, stack}\n  }\n  return null\n}\n\nexport function select_card (stacks: Stack[], stackCard: StackCard): Stack[] {\n  const card = stackCard.card\n  if (card == null) { return stacks }\n  return stacks.map(stack => {\n\n    if (!contains(stack, card)) { return stack }\n\n    return {\n      ...stack,\n      cards: stack.cards.map(stackCard => {\n        if (!stackCard.card) { return stackCard }\n        if (stackCard.card !== card) { return stackCard }\n        return {...stackCard, selected: true}\n      }),\n      selection: card\n    }\n\n  })\n}\n\nexport function deselect_card (stacks: Stack[]): Stack[] {\n  return stacks.map(stack => {\n    if (!stack.selection) { return stack }\n    return {\n      ...stack,\n      selection: void 0,\n      cards: stack.cards.map(card => !card.selected ? card : {...card, selected: void 0})\n    }\n  })\n}\n\nexport function move_cards (stacks: Stack[], from: Stack | null, to: Stack, cards: StackCard[]): Stack[] {\n  return stacks.map(stack => {\n    if (stack === to) {\n      return {\n        ...stack,\n        cards: [\n          ...stack.cards,\n          ...cards.map(card => ({ ...card, selected: false }) )\n        ]\n      }\n    }\n    if (stack === from) {\n      return {\n        ...stack,\n        cards: stack.cards.filter(stackCard => cards.indexOf(stackCard) === -1)\n      }\n    }\n    return stack\n  })\n}\n\nexport function append_cards (stacks: Stack[], to: Stack, cards: Card[]) {\n  return stacks.map(stack => {\n    if (stack !== to) {\n      return stack\n    }\n    return {\n      ...stack,\n      cards: [\n        ...stack.cards,\n        ...cards.map(card => ({card}))\n      ]\n    }\n  })\n}\n\nexport function movable_to_foundation (card1: Card, card2?: StackCard | null) {\n\n  if (card2 == null) {\n    return card1.value === ValueType.ace\n  }\n\n  const {card} = card2\n  if (!card) { return false }\n\n  return (\n    valueToInt(card1.value) === valueToInt(card.value) + 1 &&\n    card1.suit === card.suit\n  )\n}\n\nexport function movable_to_tableau (card1: Card, card2?: StackCard | null) {\n\n  if (card2 == null) {\n    return card1.value === ValueType.king\n  }\n\n  const {card} = card2\n  if (!card) { return false }\n\n  return (\n    valueToInt(card1.value) + 1 === valueToInt(card.value) &&\n    card1.isRed && card.isBlack || card1.isBlack && card.isRed\n  )\n}\n\nfunction valueToInt (value: ValueType): number {\n  if (value === ValueType.ace) { return 1 }\n  if (value === ValueType.jack) { return 11 }\n  if (value === ValueType.queen) { return 12 }\n  if (value === ValueType.king) { return 13 }\n  return parseInt(value)\n}\n","\nconst WIDTH = 75\nconst HEIGHT = 97\n\nexport enum ValueType {\n  ace = 'A',\n  two = '2',\n  three = '3',\n  four = '4',\n  five = '5',\n  six = '6',\n  seven = '7',\n  eight = '8',\n  nine = '9',\n  ten = '10',\n  jack = 'J',\n  queen = 'Q',\n  king = 'K'\n}\n\nenum SuitType {\n  heart = '\\u2665',\n  diamond = '\\u2666',\n  spade = '\\u2660',\n  club = '\\u2663'\n}\n\ntype Position = {\n  left: number,\n  top: number,\n  rotated: boolean,\n  textAlign: string\n}\n\ntype Drawing = {\n  color: string,\n  cornerFont: string,\n  fontSize: string\n  suitXOffset: number,\n  suitYOffset: number,\n  valueXOffset: number,\n  valueYOffset: number,\n  positions: Position[]\n}\n\nexport type Card = {\n  suit: SuitType,\n  value: ValueType,\n  drawing: Drawing,\n  isRed: boolean,\n  isBlack: boolean\n}\n\nexport const Cards: Card[] = []\nfor (const [, value] of Object.entries(ValueType)) {\n  for (const [, suit] of Object.entries(SuitType)) {\n    Cards.push({\n      suit,\n      value,\n      isRed: [SuitType.diamond, SuitType.heart].indexOf(suit) > -1,\n      isBlack: [SuitType.club, SuitType.spade].indexOf(suit) > -1,\n      drawing: getDrawing(suit, value)\n    })\n  }\n}\n\nfunction getDrawing (suit: SuitType, value: ValueType): Drawing {\n\n  type ypos = 0|1|2|3|4|5|6\n  type xpos = 0|1|2\n\n  const color = [\n    SuitType.diamond,\n    SuitType.heart\n  ].indexOf(suit) > -1 ? 'red' : 'black'\n\n  const fontSize = [\n    ValueType.ace,\n    ValueType.jack,\n    ValueType.queen,\n    ValueType.king\n  ].indexOf(value) > -1 ? '72px' : '20px'\n\n  const pos: {x: xpos, y: ypos}[] = []\n\n  if ([ValueType.ace, ValueType.three, ValueType.five, ValueType.nine, ValueType.jack, ValueType.queen, ValueType.king].indexOf(value) > -1) {\n    pos.push({x: 1, y: 3})\n  }\n\n  if ([ValueType.two, ValueType.three].indexOf(value) > -1) {\n    pos.push({x: 1, y: 0}, {x: 1, y: 6})\n  }\n\n  if ([ValueType.four, ValueType.five, ValueType.six, ValueType.seven, ValueType.eight, ValueType.nine, ValueType.ten].indexOf(value) > -1) {\n    pos.push({x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 6}, {x: 2, y: 6})\n  }\n\n  if ([ValueType.six, ValueType.seven, ValueType.eight].indexOf(value) > -1) {\n    pos.push({x: 0, y: 3}, {x: 2, y: 3})\n  }\n\n  if ([ValueType.seven, ValueType.ten, ValueType.eight].indexOf(value) > -1) {\n    pos.push({x: 1, y: 1})\n  }\n\n  if ([ValueType.nine, ValueType.ten].indexOf(value) > -1) {\n    pos.push({x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 4}, {x: 2, y: 4})\n  }\n\n  if ([ValueType.ten, ValueType.eight].indexOf(value) > -1) {\n    pos.push({x: 1, y: 5})\n  }\n\n  const getTop = (y: ypos) => {\n    switch (y) {\n      case 0: case 6: return HEIGHT * 0.2\n      case 1: case 5: return HEIGHT * 0.3\n      case 2: case 4: return HEIGHT * 0.4\n      case 3: return HEIGHT * 0.5\n    }\n  }\n\n  const getLeft = (x: xpos) => {\n    switch (x) {\n      case 0: return WIDTH * 0.25\n      case 1: return WIDTH * 0.50\n      case 2: return WIDTH * 0.75\n    }\n  }\n\n  const getTextAlign = (x: xpos) => {\n    switch (x) {\n      case 0: return 'left'\n      case 1: return 'center'\n      case 2: return 'right'\n    }\n  }\n\n  const positions: Position[] = pos.map(({x, y}) => {\n    return {\n      textAlign: getTextAlign(x),\n      rotated: y > 3,\n      left: getLeft(x),\n      top: getTop(y)\n    }\n  })\n\n  return {\n    cornerFont: 'bold 15px sans-serif',\n    valueXOffset: 9,\n    valueYOffset: 2,\n    suitXOffset: 9,\n    suitYOffset: 12,\n    color,\n    fontSize,\n    positions\n  }\n}\n","import {createSelector} from 'reselect'\nimport {StoreState} from './index'\n\nexport const getFoundation = createSelector(\n  (state: StoreState) => state.foundation.present,\n  foundation => foundation\n)\n\nexport const getScore = createSelector(\n  (state: StoreState) => state.score.present,\n  score => score\n)\n\nexport const getStock = createSelector(\n  (state: StoreState) => state.stock.present,\n  stock => stock\n)\n\nexport const getTableau = createSelector(\n  (state: StoreState) => state.tableau.present,\n  tableau => tableau\n)\n\nexport const getWaste = createSelector(\n  (state: StoreState) => state.waste.present,\n  waste => waste\n)\n\nexport const getDeck = createSelector(\n  (state: StoreState) => state.deck.present,\n  deck => deck\n)\n","\nimport {undoable} from './undoable'\nimport {INITIALIZE, GlobalActions, APPEND_CARDS, MOVE_CARDS} from './actions'\nimport {Stack, StackType} from '../lib/Stack'\nimport {append_cards, move_cards} from '../lib/util'\n\nconst USE_STOCK = 'USE_STOCK'\ntype USE_STOCK = typeof USE_STOCK\ntype UseStockAction = {type: USE_STOCK, count: number}\n\nexport function useStock (count: number): UseStockAction {\n  return {type: USE_STOCK, count}\n}\n\nexport type StockActions = UseStockAction\n\nexport type StockStore = {\n  readonly stacks: Stack[] // this is an array for consistency with other stores\n  readonly left: number\n}\n\nconst initialState: StockStore = {\n  stacks: [{\n    type: StackType.stock,\n    cards: []\n  }],\n  left: 24\n}\n\nfunction stockReducer (\n  state: StockStore = initialState,\n  action: StockActions | GlobalActions\n): StockStore {\n\n  if (action.type === INITIALIZE) {\n    return {...initialState}\n  }\n\n  if (action.type === USE_STOCK) {\n    return {...state, left: state.left - action.count}\n  }\n\n  if (action.type === MOVE_CARDS && state.stacks.some(stack => [action.from, action.to].indexOf(stack) > -1)) {\n    return {...state, stacks: move_cards(state.stacks, action.from, action.to, action.cards)}\n  }\n\n  if (action.type === APPEND_CARDS && state.stacks.some(stack => action.stack === stack)) {\n    return {...state, stacks: append_cards(state.stacks, action.stack, action.cards)}\n  }\n\n  return state\n\n}\n\nexport default undoable(stockReducer)\n","\nimport {INITIALIZE, GlobalActions} from './actions'\nimport {undoable} from './undoable'\n\nconst INCREMENT_SCORE = 'INCREMENT_SCORE'\ntype INCREMENT_SCORE = typeof INCREMENT_SCORE\n\ntype IncrementAction = {\n  type: INCREMENT_SCORE,\n  score: number\n}\n\nexport function incrementScore (score: number): IncrementAction {\n  return {type: INCREMENT_SCORE, score}\n}\n\nexport type ScoreStore = {\n  score: number\n}\n\nexport type ScoreActions = IncrementAction\n\nconst initialState: ScoreStore = {score: 0}\n\nfunction scoreReducer (\n  state: ScoreStore = initialState,\n  action: IncrementAction | GlobalActions\n): ScoreStore {\n\n  if (action.type === INITIALIZE) {\n    return {score: 0}\n  }\n\n  if (action.type === INCREMENT_SCORE) {\n    return {score: state.score + action.score}\n  }\n\n  return state\n\n}\n\nexport default undoable(scoreReducer)\n","import {Card, Cards} from '../lib/Card'\nimport {GlobalActions, INITIALIZE} from './actions'\nimport {undoable} from './undoable'\nimport {random} from '../lib/util'\nimport {ThunkResult} from '.'\nimport {getDeck} from './selectors'\n\nexport type DeckStore = {\n  readonly cards: Card[]\n}\n\nconst REMOVE_CARD = 'REMOVE_CARD'\ntype REMOVE_CARD = typeof REMOVE_CARD\ntype RemoveCardAction = {type: REMOVE_CARD, cards: Card[]}\nexport const removeCards = (cards: Card[]): RemoveCardAction => ({type: REMOVE_CARD, cards})\n\nexport type DeckActions = RemoveCardAction\n\nexport const getRandomCards = (count: Number): ThunkResult<Card[]> => {\n  return (dispatch, getState) => {\n\n    const current_deck = getDeck(getState())\n    const deck_cards = [...current_deck.cards]\n    const cards = []\n    for (let i = 0; i < count; i++) {\n      const index = random(0, deck_cards.length - 1)\n      cards.push(...deck_cards.splice(index, 1))\n    }\n\n    dispatch(removeCards(cards))\n    return cards\n  }\n}\n\nconst initialState: DeckStore = {\n  cards: []\n}\n\nfunction deckReducer (\n  state: DeckStore = initialState,\n  action: DeckActions | GlobalActions\n): DeckStore {\n\n  if (action.type === INITIALIZE) {\n    const cards = []\n    for (const card of Cards) {\n      cards.push({...card})\n    }\n    return {cards}\n  }\n\n  if (action.type === REMOVE_CARD) {\n    return {\n      cards: state.cards.filter(card => action.cards.indexOf(card) === -1)\n    }\n  }\n\n  return state\n}\n\nexport default undoable(deckReducer)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3hBob\",\"top\":\"_3awzY\",\"play\":\"_1E68Q\",\"stock\":\"_2EnhJ\",\"waste\":\"_3xl1i\",\"foundation\":\"cOfJ3\",\"tableau\":\"_2j3jz\",\"version\":\"_3qfCP\",\"new-game\":\"_3o9uZ\",\"newGame\":\"_3o9uZ\",\"score\":\"_1xo1P\"};","\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport * as offline from 'offline-plugin/runtime'\nimport {Provider} from 'react-redux'\nimport configStore from './store'\nimport {initialize} from './redux/actions'\nimport {Container} from './components/Container'\nimport {ThunkDispatch} from './redux'\n\noffline.install({\n  onUpdateReady () { offline.applyUpdate() },\n  onUpdated () { window.location.reload() }\n})\n\nconst store = configStore()\n\n; (store.dispatch as ThunkDispatch)(initialize())\n\nReactDOM.render(\n  <Provider store={store}>\n    <Container />\n  </Provider>,\n  document.getElementById('root')\n)\n","\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\nimport {createLogger} from 'redux-logger'\nimport reducer, {StoreState, StoreActions} from './redux'\n\nexport default function configStore (state?: object) {\n\n  const middleware = []\n\n  middleware.push(thunk as ThunkMiddleware<StoreState, StoreActions>)\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger())\n  }\n\n  return createStore(\n    reducer,\n    state!,\n    applyMiddleware(...middleware)\n  )\n}\n","\nimport {combineReducers} from 'redux'\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk'\nimport {GlobalActions} from './actions'\nimport tableau, {TableauStore} from './tableau'\nimport foundation, {FoundationStore} from './foundation'\nimport waste, {WasteStore} from './waste'\nimport stock, {StockStore, StockActions} from './stock'\nimport score, {ScoreStore, ScoreActions} from './score'\nimport deck, {DeckStore, DeckActions} from './deck'\nimport {History, UndoableActions} from './undoable'\n\nexport type StoreActions =\n  GlobalActions |\n  ScoreActions |\n  StockActions |\n  UndoableActions |\n  DeckActions\n\nexport type StoreState = {\n  deck: History<DeckStore>,\n  tableau: History<TableauStore>,\n  foundation: History<FoundationStore>,\n  waste: History<WasteStore>,\n  stock: History<StockStore>,\n  score: History<ScoreStore>\n}\n\nexport type ThunkResult<R> = ThunkAction<R, StoreState, null, StoreActions>\nexport type ThunkDispatch = ThunkDispatch<StoreState, null, StoreActions>\n\nexport default combineReducers<StoreState, StoreActions>({\n  deck,\n  tableau,\n  foundation,\n  waste,\n  stock,\n  score\n})\n","\nimport {INITIALIZE, GlobalActions, SELECT_CARD, DESELECT_CARD, MOVE_CARDS, REPLACE_TOP, APPEND_CARDS} from './actions'\nimport {Stack, StackType} from '../lib/Stack'\nimport {select_card, deselect_card, move_cards, append_cards} from '../lib/util'\nimport {undoable} from './undoable'\n\nexport type TableauStore = {\n  readonly stacks: Stack[]\n}\n\nconst initialState: TableauStore = {stacks: []}\n\nfunction tableauReducer (\n  state: TableauStore = initialState,\n  action: GlobalActions\n): TableauStore {\n\n  if (action.type === INITIALIZE) {\n\n    const stacks: Stack[] = []\n    for (let i = 0; i <= 6; i++) {\n      const stack: Stack = {type: StackType.tableau, cards: []}\n      for (let j = 0; j < i; j++) {\n          stack.cards.push({})\n      }\n      stacks.push(stack)\n    }\n\n    return {stacks}\n  }\n\n  if (action.type === SELECT_CARD && state.stacks.some(stack => stack === action.stack)) {\n    return {...state, stacks: select_card(state.stacks, action.card)}\n  }\n\n  if (action.type === DESELECT_CARD && state.stacks.some(stack => !!stack.selection)) {\n    return {...state, stacks: deselect_card(state.stacks)}\n  }\n\n  if (action.type === MOVE_CARDS && state.stacks.some(stack => [action.from, action.to].indexOf(stack) > -1)) {\n    return {...state, stacks: move_cards(state.stacks, action.from, action.to, action.cards)}\n  }\n\n  if (action.type === APPEND_CARDS && state.stacks.some(stack => action.stack === stack)) {\n    return {...state, stacks: append_cards(state.stacks, action.stack, action.cards)}\n  }\n\n  if (action.type === REPLACE_TOP) {\n    return {\n      ...state,\n      stacks: state.stacks.map(stack => {\n        if (stack !== action.stack) { return stack }\n        return {\n          ...stack,\n          cards: stack.cards.map((card, index) => {\n            if (index < stack.cards.length - 1) { return card }\n            return {card: action.card}\n          })\n        }\n      })\n    }\n  }\n\n\n  return state\n\n}\n\nexport default undoable(tableauReducer)\n","\nimport {INITIALIZE, GlobalActions, SELECT_CARD, DESELECT_CARD, MOVE_CARDS} from './actions'\nimport {Stack, StackType} from '../lib/Stack'\nimport {select_card, deselect_card, move_cards} from '../lib/util'\nimport {undoable} from './undoable'\n\nexport type FoundationStore = {\n  readonly stacks: Stack[]\n}\n\nconst initialState: FoundationStore = {\n  stacks: [\n    {type: StackType.foundation, cards: []},\n    {type: StackType.foundation, cards: []},\n    {type: StackType.foundation, cards: []},\n    {type: StackType.foundation, cards: []}\n  ]\n}\n\nfunction foundationReducer (\n  state: FoundationStore = initialState,\n  action: GlobalActions\n): FoundationStore {\n\n  if (action.type === INITIALIZE) {\n    return {...initialState}\n  }\n\n  if (action.type === SELECT_CARD && state.stacks.some(stack => stack === action.stack)) {\n    return {...state, stacks: select_card(state.stacks, action.card)}\n  }\n\n  if (action.type === DESELECT_CARD && state.stacks.some(stack => !!stack.selection)) {\n    return {...state, stacks: deselect_card(state.stacks)}\n  }\n\n  if (action.type === MOVE_CARDS && state.stacks.some(stack => [action.from, action.to].indexOf(stack) > -1)) {\n    return {...state, stacks: move_cards(state.stacks, action.from, action.to, action.cards)}\n  }\n\n  return state\n\n}\n\nexport default undoable(foundationReducer)\n","\nimport {INITIALIZE, GlobalActions, SELECT_CARD, DESELECT_CARD, MOVE_CARDS, APPEND_CARDS} from './actions'\nimport {select_card, deselect_card, move_cards, append_cards} from '../lib/util'\nimport {Stack, StackType} from '../lib/Stack'\nimport {undoable} from './undoable'\n\nexport type WasteStore = {\n  readonly stacks: Stack[] // this is an array for consistency with other stores\n  readonly showing: number\n}\n\nconst initialState: WasteStore = {stacks: [{type: StackType.waste, cards: []}], showing: 0}\n\nfunction wasteReducer (\n  state: WasteStore = initialState,\n  action: GlobalActions\n): WasteStore {\n\n  if (action.type === INITIALIZE) {\n    return {...initialState}\n  }\n\n  if (action.type === SELECT_CARD && state.stacks.some(stack => stack === action.stack)) {\n    return {...state, stacks: select_card(state.stacks, action.card)}\n  }\n\n  if (action.type === DESELECT_CARD && state.stacks.some(stack => !!stack.selection)) {\n    return {...state, stacks: deselect_card(state.stacks)}\n  }\n\n  if (action.type === MOVE_CARDS && state.stacks.some(stack => [action.from, action.to].indexOf(stack) > -1)) {\n    return {\n      ...state,\n      showing: action.to === state.stacks[0]\n        ? Math.min(state.stacks[0].cards.length + action.cards.length, 3)\n        : Math.max(1, state.showing - 1),\n      stacks: move_cards(state.stacks, action.from, action.to, action.cards)\n    }\n  }\n\n  if (action.type === APPEND_CARDS && state.stacks.some(stack => action.stack === stack)) {\n    return {\n      ...state,\n      showing: action.stack === state.stacks[0]\n        ? Math.min(state.stacks[0].cards.length + action.cards.length, 3)\n        : Math.max(1, state.showing - 1),\n      stacks: append_cards(state.stacks, action.stack, action.cards)\n    }\n  }\n\n  return state\n\n}\n\nexport default undoable(wasteReducer)\n","\nimport * as React from 'react'\nimport {connect} from 'react-redux'\nimport {createSelector} from 'reselect'\nimport {StackComponent} from './Stack'\nimport {container, top, play, newGame, score, version} from '../../styles/cards.scss'\nimport {StoreState, ThunkDispatch} from '../redux'\nimport {Stack, StackCard, StackType, StackDirection} from '../lib/Stack'\nimport {initialize, clickStock, clickTableau, clickWaste, clickFoundation, doubleClick} from '../redux/actions'\nimport {WasteStore} from '../redux/waste'\nimport {getWaste, getTableau, getFoundation, getStock, getScore} from '../redux/selectors'\nimport {undo, redo} from '../redux/undoable'\nimport {StockStore} from '../redux/stock'\n\ntype ContainerConnectedProps = {\n  tableau: Stack[],\n  foundation: Stack[],\n  stock: StockStore,\n  waste: WasteStore,\n  score: number\n}\n\ntype ContainerActionProps = {\n  handleNewGame: () => void\n  handleStockClick: (stack: Stack, card?: StackCard) => void,\n  handleTableauClick: (stack: Stack, card?: StackCard) => void,\n  handleWasteClick: (stack: Stack, card?: StackCard) => void,\n  handleFoundationClick: (stack: Stack, card?: StackCard) => void,\n  handleDoubleClick: (stack: Stack, card?: StackCard) => void,\n  handleUndo: () => void,\n  handleRedo: () => void\n}\n\ntype ContainerProps = ContainerConnectedProps & ContainerActionProps\n\nclass ContainerComponent extends React.PureComponent<ContainerProps> {\n\n  constructor (props: ContainerProps) {\n    super(props)\n    this.handleNewGameClick = this.handleNewGameClick.bind(this)\n    this.handleStockClick = this.handleStockClick.bind(this)\n    this.handleTableauClick = this.handleTableauClick.bind(this)\n    this.handleWasteClick = this.handleWasteClick.bind(this)\n    this.handleFoundationClick = this.handleFoundationClick.bind(this)\n    this.handleDoubleClick = this.handleDoubleClick.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n  }\n\n  componentDidMount () {\n    document.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleNewGameClick () {\n    this.props.handleNewGame()\n  }\n\n  handleKeyDown (e: KeyboardEvent) {\n    if (e.keyCode !== 90) { return }\n    if (e.ctrlKey && e.shiftKey) {\n      this.props.handleRedo()\n    } else if (e.ctrlKey) {\n      this.props.handleUndo()\n    }\n  }\n\n  handleStockClick (stack: Stack, card?: StackCard) {\n    this.props.handleStockClick(stack, card)\n  }\n\n  handleTableauClick (stack: Stack, card?: StackCard) {\n    this.props.handleTableauClick(stack, card)\n  }\n\n  handleWasteClick (stack: Stack, card?: StackCard) {\n    this.props.handleWasteClick(stack, card)\n  }\n\n  handleFoundationClick (stack: Stack, card?: StackCard) {\n    this.props.handleFoundationClick(stack, card)\n  }\n\n  handleDoubleClick (stack: Stack, card?: StackCard) {\n    this.props.handleDoubleClick(stack, card)\n  }\n\n  render () {\n    return (\n      <div className={container}>\n        <div>\n          <button id=\"new-game\" className={newGame} onClick={this.handleNewGameClick}>\n            {'New Game'}\n          </button>\n          <label id=\"score\" className={score}>\n            {'Score: '}\n            {this.props.score}\n          </label>\n        </div>\n        <div className={top}>\n          <StackComponent\n            stack={this.props.stock.stacks[0]}\n            onClick={this.handleStockClick}\n            direction={StackDirection.none}\n            type={StackType.stock}\n            left={this.props.stock.left}\n            hidden={true}\n          />\n          <StackComponent\n            stack={this.props.waste.stacks[0]}\n            onClick={this.handleWasteClick}\n            onDoubleClick={this.handleDoubleClick}\n            direction={StackDirection.horizontal}\n            type={StackType.waste}\n            max={this.props.waste.showing}\n            offset={15}\n          />\n          {this.props.foundation.map((stack, index) => (\n            <StackComponent\n              key={`foundation-${index}`}\n              onClick={this.handleFoundationClick}\n              stack={stack}\n              direction={StackDirection.none}\n              type={StackType.foundation}\n              max={1}\n            />\n          ))}\n        </div>\n        <div className={play}>\n          {this.props.tableau.map((stack, index) => (\n            <StackComponent\n              key={`tableau-${index}`}\n              onClick={this.handleTableauClick}\n              onDoubleClick={this.handleDoubleClick}\n              stack={stack}\n              direction={StackDirection.vertical}\n              type={StackType.tableau}\n            />\n          ))}\n        </div>\n        <div className={version}>\n          {process.env.version}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst selector = createSelector([\n  getTableau,\n  getFoundation,\n  getStock,\n  getWaste,\n  getScore\n], (\n  {stacks: tableau},\n  {stacks: foundation},\n  stock,\n  waste,\n  {score}\n) => ({\n  tableau,\n  foundation,\n  stock,\n  waste,\n  score\n}))\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch): ContainerActionProps => ({\n  handleNewGame: () => dispatch(initialize()),\n  handleStockClick: () => dispatch(clickStock()),\n  handleTableauClick: (stack, card) => dispatch(clickTableau(stack, card)),\n  handleWasteClick: (stack, card) => dispatch(clickWaste(stack, card)),\n  handleFoundationClick: (stack, card) => dispatch(clickFoundation(stack, card)),\n  handleDoubleClick: (stack, card) => dispatch(doubleClick(stack, card)),\n  handleUndo: () => dispatch(undo()),\n  handleRedo: () => dispatch(redo())\n})\n\nconst mapStateToProps = (state: StoreState): ContainerConnectedProps => selector(state)\n\nexport const Container = connect(mapStateToProps, mapDispatchToProps)(ContainerComponent)\n","\nimport * as React from 'react'\nimport {stock, waste, tableau, foundation} from '../../styles/cards.scss'\nimport {Stack, StackCard, StackType, StackDirection} from '../lib/Stack'\n\ntype CardClickEvent = (stack: Stack, card: StackCard) => void\n\ntype StackOwnProps = {\n  type: StackType,\n  direction: StackDirection,\n  children?: React.ReactNode,\n  stack: Stack,\n  onClick?: CardClickEvent,\n  onDoubleClick?: CardClickEvent\n  max: number,\n  hidden: boolean,\n  width: number,\n  height: number,\n  offset: number,\n  radius: number,\n  left?: number\n}\n\ntype StackConnectedProps = {\n}\n\ntype StackProps = StackOwnProps & StackConnectedProps\n\ntype Point = {\n  x: number\n  y: number\n}\n\nexport class StackComponent extends React.PureComponent<StackProps> {\n\n  static defaultProps = {\n    max: Infinity,\n    hidden: false,\n    width: 74,\n    height: 97,\n    offset: 20,\n    radius: 10\n  }\n\n  private ref = React.createRef<HTMLCanvasElement>()\n\n  constructor (props: StackProps) {\n    super(props)\n    this.handleCanvasClick = this.handleCanvasClick.bind(this)\n    this.handleCanvasDoubleClick = this.handleCanvasDoubleClick.bind(this)\n  }\n\n  get stack_style(): string {\n    switch (this.props.type) {\n      case StackType.foundation: return foundation\n      case StackType.tableau: return tableau\n      case StackType.stock: return stock\n      case StackType.waste: return waste\n    }\n  }\n\n  get canvas_width () {\n    switch (this.props.direction) {\n      case StackDirection.none:\n      case StackDirection.vertical:\n        return this.props.width\n      case StackDirection.horizontal:\n        return this.cards.length === 0\n          ? this.props.height\n          : (this.props.offset * (this.cards.length - 1) + this.props.width)\n    }\n  }\n\n  get canvas_height () {\n    switch (this.props.direction) {\n      case StackDirection.none:\n      case StackDirection.horizontal:\n        return this.props.height\n      case StackDirection.vertical:\n        return this.cards.length === 0\n          ? this.props.height\n          : this.props.offset * (this.cards.length - 1) + this.props.height\n    }\n  }\n\n  get cards () {\n    return this.props.hidden && (this.props.stack.cards.length > 0 || this.props.left && this.props.left > 0)\n      ? [{}]\n      : this.props.stack.cards.slice(-this.props.max)\n  }\n\n  handleCanvasDoubleClick (evt: React.MouseEvent<Element>) {\n    const {cards} = this\n    const {stack, offset, direction, onDoubleClick} = this.props\n    const {nativeEvent: e} = evt\n    if (!onDoubleClick) { return }\n\n    const prop = direction === StackDirection.horizontal ? 'offsetX' : 'offsetY'\n    const index = Math.min(cards.length - 1, Math.floor(e[prop] / offset))\n    onDoubleClick(stack, cards[index])\n  }\n\n  handleCanvasClick (evt: React.MouseEvent<Element>) {\n    const {cards} = this\n    const {stack, offset, direction, onClick} = this.props\n    const {nativeEvent: e} = evt\n    if (!onClick) { return }\n\n    const prop = direction === StackDirection.horizontal ? 'offsetX' : 'offsetY'\n    const index = Math.min(cards.length - 1, Math.floor(e[prop] / offset))\n    onClick(stack, cards[index])\n  }\n\n  componentDidMount () {\n    this.updateCanvas()\n  }\n\n  componentDidUpdate () {\n    this.updateCanvas()\n  }\n\n  updateCanvas () {\n    const canvas = this.ref.current\n    if (!canvas) { return }\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) { return }\n\n    const {cards} = this\n    const {direction, offset} = this.props\n\n    ctx.save()\n    ctx.translate(0.5, 0.5)\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n    if (cards.length === 0) {\n      this.drawBoxRadius(ctx, {x: 0, y: 0})\n      ctx.stroke()\n    }\n\n    for (let i = 0; i < cards.length; i++) {\n      const x = direction === StackDirection.horizontal ? i * offset : 0\n      const y = direction === StackDirection.horizontal ? 0 : i * offset\n\n      if (i < cards.length - 1) {\n        ctx.save()\n        this.drawClipRegion(ctx, {x, y})\n      }\n\n      this.drawCard(ctx, cards[i], {x, y})\n\n      if (i < cards.length - 1) {\n        ctx.restore()\n      }\n    }\n    ctx.restore()\n  }\n\n  drawClipRegion (ctx: CanvasRenderingContext2D, {x, y}: Point) {\n\n    const {direction, radius, offset, width, height} = this.props\n    const clip_width = direction === StackDirection.horizontal ? offset : width\n    const clip_height = direction === StackDirection.horizontal ? height : offset\n\n    ctx.beginPath()\n    if (direction === StackDirection.horizontal) {\n      ctx.moveTo(x, y)\n      ctx.lineTo(x + clip_width + radius, y)\n      ctx.quadraticCurveTo(x + clip_width, y, x + clip_width, y + radius)\n      ctx.lineTo(x + clip_width, y + clip_height - radius)\n      ctx.quadraticCurveTo(x + clip_width, y + clip_height, x + clip_width + radius, y + clip_height)\n      ctx.lineTo(x, y + clip_height)\n    } else {\n      ctx.moveTo(x + clip_width, y)\n      ctx.lineTo(x + clip_width, y + clip_height + radius)\n      ctx.quadraticCurveTo(x + clip_width, y + clip_height, x + clip_width - radius, y + clip_height)\n      ctx.lineTo(x + radius, y + clip_height)\n      ctx.quadraticCurveTo(x, y + clip_height, x, y + clip_height + radius)\n      ctx.lineTo(x, y)\n    }\n    ctx.closePath()\n    ctx.clip()\n  }\n\n  drawBoxRadius (ctx: CanvasRenderingContext2D, {x, y}: Point) {\n    const {radius, height, width} = this.props\n    ctx.beginPath()\n    ctx.moveTo(x + radius, y)\n    ctx.lineTo(x + width - radius, y)\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n    ctx.lineTo(x + width, y + height - radius)\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n    ctx.lineTo(x + radius, y + height)\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n    ctx.lineTo(x, y + radius)\n    ctx.quadraticCurveTo(x, y, x + radius, y)\n    ctx.closePath()\n  }\n\n  drawCard (ctx: CanvasRenderingContext2D, stack_card: StackCard, {x, y}: Point) {\n\n    const {card, selected} = stack_card\n\n    this.drawBoxRadius(ctx, {x, y})\n    ctx.stroke()\n\n    if (!card) {\n      ctx.fillStyle = '#0aa'\n      ctx.fill()\n      return\n    }\n\n    if (selected) {\n      ctx.fillStyle = 'yellow'\n      ctx.fill()\n    }\n\n    const {value, suit, drawing} = card\n\n    ctx.fillStyle = drawing.color\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'top'\n\n    ctx.font = drawing.cornerFont\n    ctx.fillText(value, drawing.valueXOffset + x, drawing.valueYOffset + y, 12)\n    ctx.fillText(suit, drawing.suitXOffset + x, drawing.suitYOffset + y)\n\n    ctx.save()\n    ctx.translate(this.props.width, this.props.height)\n    ctx.rotate(Math.PI)\n    ctx.fillText(value, drawing.valueXOffset - x, drawing.valueYOffset - y, 12)\n    ctx.fillText(suit, drawing.suitXOffset - x, drawing.suitYOffset - y)\n    ctx.restore()\n\n    ctx.textBaseline = 'middle'\n\n    for (const pos of drawing.positions) {\n      const factor = pos.rotated ? -1 : 1\n      ctx.textAlign = pos.textAlign\n\n      if (pos.rotated) {\n        ctx.save()\n        ctx.translate(this.props.width, this.props.height)\n        ctx.rotate(Math.PI)\n      }\n\n      ctx.font = `${drawing.fontSize} sans-serif`\n      ctx.fillText(suit, pos.left + x * factor, pos.top + y * factor)\n\n      if (pos.rotated) {\n        ctx.restore()\n      }\n    }\n  }\n\n  render () {\n    return (\n      <canvas\n        onDoubleClick={this.handleCanvasDoubleClick}\n        onClick={this.handleCanvasClick}\n        className={this.stack_style}\n        width={this.canvas_width + 1}\n        height={this.canvas_height + 1}\n        ref={this.ref}\n      />\n    )\n  }\n}\n"],"sourceRoot":""}