{"version":3,"sources":["webpack://klondike/webpack/runtime/chunk loaded","webpack://klondike/./src/css/index.css?2563","webpack://klondike/./src/components/App.tsx","webpack://klondike/./src/components/Container.tsx","webpack://klondike/./src/components/Fireworks.tsx","webpack://klondike/./src/components/GameCanvas.tsx","webpack://klondike/./src/components/Options.tsx","webpack://klondike/./src/components/StackElement.tsx","webpack://klondike/./src/drawing/Card.ts","webpack://klondike/./src/drawing/ColorScheme.ts","webpack://klondike/./src/drawing/Common.ts","webpack://klondike/./src/drawing/FontSize.ts","webpack://klondike/./src/drawing/Layout.ts","webpack://klondike/./src/drawing/Stack.ts","webpack://klondike/./src/hooks/useCanvasSize.ts","webpack://klondike/./src/hooks/useDrawing.ts","webpack://klondike/./src/index.tsx","webpack://klondike/./src/lib/Card.ts","webpack://klondike/./src/lib/Persist.ts","webpack://klondike/./src/lib/Scoring.ts","webpack://klondike/./src/lib/util.ts","webpack://klondike/./src/redux/game-state.ts","webpack://klondike/./src/redux/index.ts","webpack://klondike/./src/redux/init.ts","webpack://klondike/./src/redux/selectors.ts","webpack://klondike/./src/redux/stacks.ts","webpack://klondike/./src/redux/thunks.ts","webpack://klondike/./src/redux/undoable.ts","webpack://klondike/webpack/bootstrap","webpack://klondike/webpack/runtime/compat get default export","webpack://klondike/webpack/runtime/define property getters","webpack://klondike/webpack/runtime/global","webpack://klondike/webpack/runtime/hasOwnProperty shorthand","webpack://klondike/webpack/runtime/make namespace object","webpack://klondike/webpack/runtime/jsonp chunk loading","webpack://klondike/webpack/startup"],"names":["deferred","module","exports","App","newNumber","retrieve","PersistanceType","number","newType","type","ScoringType","regular","newTheme","theme","ColorSchemeType","dark","dispatch","initializeGame","Provider","store","React","memo","hot","useDispatch","stacks","useSelector","getStacks","overDrawn","getOverDrawn","showing","getShowing","getTheme","score","getScore","getNumber","cssVars","useMemo","colors","colorSchemes","background","color","emptyColor","faceUp","hiddenColor1","hiddenColor2","buttonBorder","cardBorder","black","red","selected","errorColor","showOptions","setShowOptions","useState","handleCloseOptions","useCallback","handleShowOptions","handleNewGame","useEffect","handleMouseDown","e","button","preventDefault","performMoves","handleKeyDown","keyCode","prev","ctrlKey","shiftKey","redo","undo","document","addEventListener","removeEventListener","style","onClose","className","optionsModal","onClick","optionsMask","topBar","tabIndex","label","game","map","stack","key","index","StackType","waste","stock","ref","useRef","fireworksObj","active","getGameWon","display","current","FireworksCanvas","ev","stop","destroy","start","fireworks","GameCtx","createContext","intersect","evt","pointsRef","nativeEvent","canvas","target","point","x","offsetX","y","offsetY","ctx","getContext","path","keys","isPointInPath","thing","get","GameCanvas","children","rest","Map","clickHandlers","doubleClickHandlers","width","height","handleCanvasRef","useCanvasSize","colorSchemeType","colorScheme","context","useLayoutEffect","initialize","value","events","set","onDoubleClick","delete","handleCanvasDoubleClick","selection","event","handleCanvasClick","id","window","innerWidth","innerHeight","submitCallbacks","Set","OptionCtx","Option","onChange","name","options","props","newValue","setValue","handleChange","handleSubmit","add","length","htmlFor","String","option","toString","checked","displayName","typeOptions","vegas","colorSchemeOptions","light","Options","forEach","cb","getType","gameNumber","handleNewNumber","parseInt","handleNewType","handleNewTheme","changeTheme","onSubmit","StackElement","Infinity","gameContext","useContext","drawingOpts","getStackDrawingContext","prop","direction","StackDirection","horizontal","cards","slice","max","Math","min","floor","box","space","doubleClickCard","stackCard","clickCard","useDrawing","drawStack","FontSizeType","getBoxPath","radius","smaller","Path2D","dx","dy","dw","dh","moveTo","lineTo","quadraticCurveTo","closePath","getGlyphLocations","card","hidden","cardWidth","cardHeight","getCardDimensions","gutterHeight","getVerticalMarginSize","gutterWidth","getHorizontalMarginSize","cornerWidth","figureOutFontSize","search","Corner","isBig","fontSizes","Regular","cornerValueX","cornerValueY","cornerSuitX","cornerSuitY","measureHeight","suit","positions","glyph","reduce","push","rotated","textAlign","textBaseline","font","pos","ValueType","ace","three","five","nine","jack","queen","king","includes","two","four","six","seven","eight","ten","getTop","getLeft","getTextAlign","getEmptyImageData","clearRect","fillStyle","fillRect","lineWidth","strokeStyle","strokeRect","getImageData","getHiddenImageData","tile","createElement","tileCtx","gradient","createLinearGradient","addColorStop","stroke","save","clip","createPattern","restore","getCardImageData","fill","isRed","translate","rotate","PI","fillText","getErrorImageData","c2","getKey","cardCache","Cards","writeDataToCanvas","data","ctx2","putImageData","drawImage","allFontSizes","Array","from","v","k","measureWidth","text","measureText","searchFontSize","isBigEnough","getStackCardOffsetWidth","getStackCardOffsetHeight","getTopbarBox","horizontalMargin","verticalMargin","topBarBox","stackCardOffsetHeight","usedVerticalSpace","usedHorizontalSpace","maxWidth","maxHeight","DESIRED_RATIO","getStackBox","cardLength","usedWidth","baseX","stackWidth","stackHeight","vertical","foundation","tableau","opts","rect","empty","error","elements","i","drawing","setCanvas","getSize","size","setSize","tid","handleSize","clearTimeout","setTimeout","draw","performCleanup","lastWidth","lastHeight","remove","offline","install","applyUpdate","location","reload","ReactDOM","render","getElementById","SuitType","Object","values","freeze","persist","localStorage","setItem","JSON","stringify","err","init","getItem","parse","ScoreType","getScoreChange","scoringType","scoreType","tableauToFoundation","wasteToFoundation","revealCard","wasteToTableau","foundationToTableau","rnd","s","imul","sumConsecutive","getTopCard","random","sameStack","stack1","stack2","sameCard","stackCard1","stackCard2","stackContainsCard","stackCards","some","item","isSequential","card1","valueToInt","diamond","heart","isBlack","club","spade","isValidFoundationMove","desintation","isValidTableauMove","destination","gameStateSlice","createSlice","initialState","draws","reducers","state","payload","extraReducers","builder","addCase","addMatcher","action","shiftCards","match","to","actions","incrementDraws","incrementScore","undoable","reducer","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","combineReducers","gameState","configureStore","getGameState","createAction","createSelector","present","getFoundation","filter","getTableau","every","getHiddenCard","acc","topCard","getMovableToFoundation","f","getStock","getWaste","getFoundationStack","_","find","getDraws","getSelection","disallowClickStock","stacksSlice","toStack","fromStack","revealTop","thisStack","selectCard","thisCard","deselectCard","selectedCard","a","moveCards","from_card","findIndex","drawStockCards","reverse","recycleWaste","getState","availableCards","rando","splice","movable","checkAndPerformCardReveal","checkAndPerformFoundationMove","checkpoint","cardSelection","past","future","previous","next","newFuture","newPresent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","j","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prototype","hasOwnProperty","r","Symbol","toStringTag","installedChunks","604","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"UAAIA,E,SCCJC,EAAOC,QAAU,CAAC,OAAS,wBAAwB,UAAY,0BAA0B,KAAO,0BAA0B,OAAS,wBAAwB,MAAQ,0BAA0B,YAAc,0BAA0B,aAAe,4B,yFCDpP,eAEA,SAEA,SACA,SACA,OACA,SACA,SACA,SAEMC,EAAgB,KACpB,MAAMC,EAAY,EAAAC,SAAS,EAAAC,gBAAgBC,OAAQ,GAC7CC,EAAU,EAAAH,SAAsB,EAAAC,gBAAgBG,KAAM,EAAAC,YAAYC,SAClEC,EAAW,EAAAP,SAA0B,EAAAC,gBAAgBO,MAAO,EAAAC,gBAAgBC,MAIlF,OAFA,UAAMC,SAAS,EAAAC,eAAe,CAAET,UAASJ,YAAWQ,cAGlD,gBAAC,EAAAM,SAAQ,CAACC,MAAO,WACf,gBAAC,UAAS,QAKP,EAAAhB,MAET,UAAeiB,EAAMC,KAAKlB,I,4EC3B1B,eACA,SACA,SAEA,SACA,SACA,OAEA,SACA,SACA,SACA,SAEA,SACA,SACA,SAiGA,UAAe,EAAAmB,IAAIF,EAAMC,MA/FG,KAC1B,MAAML,EAAW,EAAAO,cACXC,EAAS,EAAAC,YAAY,EAAAC,WACrBC,EAAY,EAAAF,YAAY,EAAAG,cACxBC,EAAU,EAAAJ,YAAY,EAAAK,YACtBjB,EAAQ,EAAAY,YAAY,EAAAM,UACpBC,EAAQ,EAAAP,YAAY,EAAAQ,UACpB1B,EAAS,EAAAkB,YAAY,EAAAS,WAErBC,EAAUf,EAAMgB,SAAQ,KAC5B,MAAMC,EAAS,EAAAC,aAAazB,GAC5B,MAAO,CACL,eAAgBwB,EAAOE,WACvB,UAAWF,EAAOG,MAClB,eAAgBH,EAAOI,WACvB,WAAYJ,EAAOK,OACnB,iBAAkBL,EAAOM,aACzB,iBAAkBN,EAAOO,aACzB,iBAAkBP,EAAOQ,aACzB,eAAgBR,EAAOS,WACvB,UAAWT,EAAOU,MAClB,QAASV,EAAOW,IAChB,aAAcX,EAAOY,SACrB,eAAgBZ,EAAOa,cAExB,CAACrC,KAEGsC,EAAaC,GAAkBhC,EAAMiC,UAAS,GAE/CC,EAAqBlC,EAAMmC,aAAY,IAAMH,GAAe,IAAQ,IACpEI,EAAoBpC,EAAMmC,aAAY,IAAMH,GAAe,IAAO,IAClEK,EAAgBrC,EAAMmC,aAAY,IAAMvC,EAAS,EAAAZ,cAAc,CAACY,IA2BtE,OAzBAI,EAAMsC,WAAU,KACd,MAAMC,EAAmBC,IACN,IAAbA,EAAEC,SACND,EAAEE,iBACF9C,EAAS,EAAA+C,kBAELC,EAAiBJ,IACH,MAAdA,EAAEK,SAAiBjD,EAAS,EAAAZ,aACd,KAAdwD,EAAEK,SAAgBb,GAAgBc,IAAUA,IAC9B,KAAdN,EAAEK,UACAL,EAAEO,SAAWP,EAAEQ,SACjBpD,EAAS,EAAAqD,QACAT,EAAEO,SACXnD,EAAS,EAAAsD,UAMf,OAFAC,SAASC,iBAAiB,YAAab,GACvCY,SAASC,iBAAiB,UAAWR,GAC9B,KACLO,SAASE,oBAAoB,YAAad,GAC1CY,SAASE,oBAAoB,UAAWT,MAEzC,CAAChD,IAGF,uBAAK0D,MAAOvC,GACV,gBAAC,UAAkB,MAClBgB,GACC,gCACE,gBAAC,UAAO,CAACwB,QAASrB,EAAoBsB,UAAW,EAAAC,eACjD,uBAAKC,QAASxB,EAAoBsB,UAAW,EAAAG,eAGjD,uBAAKH,UAAW,EAAAI,QACd,2BACE,0BAAQC,SAAU,EAAGH,QAASrB,EAAemB,UAAW,EAAAf,QAAM,OAG9D,wBAAMe,UAAW,EAAAM,OAAQ3E,IAE3B,2BACE,wBAAMqE,UAAW,EAAAM,OAAQlD,GACzB,0BAAQiD,SAAU,EAAGH,QAAStB,EAAmBoB,UAAW,EAAAf,QAAM,QAKtE,gBAAC,UAAU,CAACe,UAAW,EAAAO,MACpB3D,EAAO4D,KAAKC,GACX,gBAAC,UAAY,eACXC,IAAK,GAAGD,EAAM5E,QAAQ4E,EAAME,QAC5BF,MAAOA,GACFA,EAAM5E,OAAS,EAAA+E,UAAUC,OAAS,CAAE5D,WACpCwD,EAAM5E,OAAS,EAAA+E,UAAUE,OAAS,CAAE/D,wB,4ECxGrD,eACA,SACA,SACA,SACA,OAkCA,UAAeP,EAAMC,MAhCO,KAC1B,MAAMsE,EAAMvE,EAAMwE,OAAuB,MACnCC,EAAezE,EAAMwE,SACrBE,EAAS,EAAArE,YAAY,EAAAsE,YACrBC,EAAUF,EAAS,GAAK,OAyB9B,OAvBA1E,EAAMsC,WAAU,KACd,GAAmB,MAAfiC,EAAIM,QAAiB,OACzBJ,EAAaI,QAAU,IAAIC,EAAgBP,EAAIM,SAQ/C,OAFA1B,SAASC,iBAAiB,WAJK2B,I,MACV,KAAfA,EAAGlC,UAAoC,QAApB,EAAA4B,EAAaI,eAAO,SAAEG,WAKxC,K,MACe,QAApB,EAAAP,EAAaI,eAAO,SAAEI,aAEvB,CAACV,EAAKG,IAET1E,EAAMsC,WAAU,K,QACVoC,EACkB,QAApB,EAAAD,EAAaI,eAAO,SAAEG,OAEF,QAApB,EAAAP,EAAaI,eAAO,SAAEK,UAEvB,CAACR,IAEG,uBAAKlB,UAAW,EAAA2B,UAAW7B,MAAO,CAAEsB,WAAWL,IAAKA,Q,mdCnC7D,eAEA,SACA,SACA,SACA,SACA,SAQa,EAAAa,QAAUpF,EAAMqF,cAAkC,MAE/D,MAAMC,EAAY,CAACC,EAA0CC,KAC3D,MAAQC,YAAajD,GAAM+C,EACrBG,EAASlD,EAAEmD,OACXC,EAAQ,CAAEC,EAAGrD,EAAEsD,QAASC,EAAGvD,EAAEwD,SAC7BC,EAAMP,EAAOQ,WAAW,MAC9B,IAAK,MAAMC,KAAQX,EAAUY,OAC3B,GAAIH,aAAG,EAAHA,EAAKI,cAAcF,EAAMP,EAAMC,EAAGD,EAAMG,GAAI,CAC9C,MAAMO,EAAQd,EAAUe,IAAIJ,GAC5B,GAAa,MAATG,EAAe,OACnB,MAAO,CAAEA,QAAOV,WAIhBY,EAAiE,I,IAAA,SAAEC,GAAQ,EAAKC,EAAI,IAAnB,cACrE,MAAMlB,EAAYxF,EAAMwE,OAA8B,IAAImC,KACpDC,EAAgB5G,EAAMwE,OAA6B,IAAImC,KACvDE,EAAsB7G,EAAMwE,OAA6B,IAAImC,MAE7D,IAAEV,EAAG,MAAEa,EAAK,OAAEC,EAAM,gBAAEC,GAAoB,EAAAC,gBAC1CC,EAAkB,EAAA7G,YAAY,EAAAM,UAC9BwG,EAAc,EAAAjG,aAAagG,GAE3BE,EAAUpH,EAAMgB,SAA+B,IAC9C8F,GAAUC,GAAWd,EACnB,CAAEA,MAAKa,QAAOC,SAAQG,kBAAiBC,eADR,MAErC,CAAClB,EAAKa,EAAOC,EAAQG,EAAiBC,IAEzCnH,EAAMqH,iBAAgB,IAAOD,GAAW,EAAAE,WAAWF,SAAa,GAAQ,CAACA,IAEzE,MAAMG,EAAQvH,EAAMgB,SAClB,IACEoG,GAAW,CACTA,UACA,IAAId,EAAOkB,GACThC,EAAUX,QAAQ4C,IAAInB,EAAMH,KAAMG,GAC9BkB,EAAO9D,SAASkD,EAAc/B,QAAQ4C,IAAInB,EAAMH,KAAMqB,EAAO9D,SAC7D8D,EAAOE,eAAeb,EAAoBhC,QAAQ4C,IAAInB,EAAMH,KAAMqB,EAAOE,gBAE/E,OAAOvB,GACLX,EAAUX,QAAQ8C,OAAOxB,GACzBS,EAAc/B,QAAQ8C,OAAOxB,GAC7BU,EAAoBhC,QAAQ8C,OAAOxB,MAGzC,CAACiB,IAGGQ,EAA0B5H,EAAMmC,aAAaoD,IACjD,MAAMsC,EAAYvC,EAAUC,EAAKC,EAAUX,SAC3C,GAAIgD,EAAW,CACb,MAAM,MAAEvB,EAAK,MAAEV,GAAUiC,EACnBC,EAAQjB,EAAoBhC,QAAQ0B,IAAID,EAAMH,MAChD2B,GAAOA,EAAMxB,EAAOV,MAEzB,IAEGmC,EAAoB/H,EAAMmC,aAAaoD,IAC3C,MAAMsC,EAAYvC,EAAUC,EAAKC,EAAUX,SAC3C,GAAIgD,EAAW,CACb,MAAM,MAAEvB,EAAK,MAAEV,GAAUiC,EACnBC,EAAQlB,EAAc/B,QAAQ0B,IAAID,EAAMH,MAC1C2B,GAAOA,EAAMxB,EAAOV,MAEzB,IAEH,OACE,gCACE,wCACEoC,GAAG,SACHzD,IAAKyC,EACLF,MAAOmB,OAAOC,WACdnB,OAAQkB,OAAOE,YACfzE,QAASqE,EACTL,cAAeE,GACXlB,IAEN,gBAAC,EAAAtB,QAAQtF,SAAQ,CAACyH,MAAOA,GAAQd,KAK9B,EAAAD,aACT,UAAexG,EAAMC,KAAKuG,I,kdClG1B,eACA,SACA,OACA,SACA,SACA,SACA,SAEM4B,EAAmC,IAAIC,IAChC,EAAAC,UAAYtI,EAAMqF,cAAc+C,GAU7C,MAAMG,EAA+BvI,EAAMC,MAAM,I,IAAA,MAAEsH,EAAK,SAAEiB,EAAQ,KAAEC,EAAI,QAAEC,EAAU,GAAE,MAAE5E,GAAK,EAAK6E,EAAK,IAAtD,+CAC/C,MAAOC,EAAUC,GAAY7I,EAAMiC,SAASsF,GAEtCuB,EAAe9I,EAAMmC,aAAaK,GAA2CqG,EAASrG,EAAEmD,OAAO4B,QAAQ,IAEvGwB,EAAe/I,EAAMmC,aAAY,KACjCyG,IAAarB,GAAOiB,EAASI,KAChC,CAACrB,EAAOqB,EAAUJ,IASrB,OAPAxI,EAAMsC,WAAU,KACd8F,EAAgBY,IAAID,GACb,KACLX,EAAgBT,OAAOoB,OAKzB,4CAAcJ,GACZ,8BAAS7E,GACW,IAAnB4E,EAAQO,OACP,2BACE,yBAAOC,QAAS,UAAUT,IAAQnF,MAAO,CAAEsB,QAAS,SACjDd,GAEH,yBAAOzE,KAAK,OAAO2I,GAAI,UAAUS,IAAQlB,MAAO4B,OAAOP,GAAWJ,SAAUM,KAG9EJ,EAAQ1E,KAAI,EAAEF,EAAOsF,KACnB,uBAAKlF,IAAKJ,EAAMuF,YACd,yBACEhK,KAAK,QACL2I,GAAI,GAAGS,KAAQ3E,IACfwF,QAASV,IAAaQ,EACtB7B,MAAO4B,OAAOC,GACdZ,SAAUM,IAEZ,yBAAOI,QAAS,GAAGT,KAAQ3E,KAAUA,UAQjDyE,EAAOgB,YAAc,SAErB,MAAMC,EAAuC,CAC3C,CAAC,UAAW,EAAAlK,YAAYC,SACxB,CAAC,QAAS,EAAAD,YAAYmK,QAGlBC,EAAkD,CACtD,CAAC,OAAQ,EAAAhK,gBAAgBC,MACzB,CAAC,QAAS,EAAAD,gBAAgBiK,QAKtBC,EAA0C5J,EAAMC,MAAM,I,IAAA,QAAEsD,GAAO,EAAKoF,EAAK,IAAnB,aAC1D,MAAMI,EAAe/I,EAAMmC,aACxBK,IACCA,EAAEE,iBACF0F,EAAgByB,SAASC,GAAOA,MAChCvG,MAEF,CAACA,IAGG3D,EAAW,EAAAO,cACXd,EAAO,EAAAgB,YAAY,EAAA0J,SACnBtK,EAAQ,EAAAY,YAAY,EAAAM,UACpBqJ,EAAa,EAAA3J,YAAY,EAAAS,WAEzBmJ,EAAkBjK,EAAMmC,aAAahD,GAAWS,EAAS,EAAAZ,UAAUkL,SAAS/K,EAAQ,OAAO,CAACS,IAC5FuK,EAAgBnK,EAAMmC,aAAa9C,GAASO,EAAS,EAAAR,QAAQC,KAAQ,CAACO,IACtEwK,EAAiBpK,EAAMmC,aAAa1C,GAAUG,EAAS,EAAAyK,YAAY5K,KAAS,CAACG,IAEnF,OACE,sCAAM0K,SAAUvB,GAAkBJ,GAChC,gBAACJ,EAAM,CAACE,KAAK,cAAc3E,MAAM,cAAcyD,MAAOyC,EAAYxB,SAAUyB,IAC5E,gBAAC1B,EAAM,CAACE,KAAK,OAAO3E,MAAM,YAAYyD,MAAOlI,EAAMmJ,SAAU2B,EAAezB,QAASc,IACrF,gBAACjB,EAAM,CAACE,KAAK,QAAQ3E,MAAM,QAAQyD,MAAO9H,EAAO+I,SAAU4B,EAAgB1B,QAASgB,IACpF,0BAAQrK,KAAK,UAAQ,YAOlB,EAAAuK,UAFTA,EAAQL,YAAc,kBAGtB,UAAevJ,EAAMC,KAAK2J,I,kGC7G1B,eACA,SACA,SACA,SACA,SACA,SAEA,SACA,SAEMW,EAID,EAAGtG,QAAO1D,aAAY,EAAOE,UAAU+J,QAC1C,MAAM5K,EAAW,EAAAO,cACXsK,EAAczK,EAAM0K,WAAW,EAAAtF,SAE/BuF,EAAc,EAAA3J,SAClB,IAAMyJ,GAAe,EAAAG,uBAAuBH,EAAYrD,QAASnD,EAAO,CAAE1D,YAAWE,aACrF,CAACgK,EAAaxG,EAAO1D,EAAWE,IAG5BiH,EAAgB1H,EAAMmC,aAC1B,CAACmE,EAAiBV,KAChB,GAAmB,MAAf6E,GAAsC,MAAfE,EAAqB,OAChD,MAAME,EAAO5G,EAAM6G,YAAc,EAAAC,eAAeC,WAAa,IAAM,IAC7DC,EAAQhH,EAAMgH,MAAMC,OAAOP,EAAYQ,KACvChH,EAAQiH,KAAKC,IAAIJ,EAAMhC,OAAS,EAAGmC,KAAKE,OAAO1F,EAAMiF,GAAQF,EAAYY,IAAIV,IAASF,EAAYa,QACpGvH,EAAM5E,OAAS,EAAA+E,UAAUC,OAASF,IAAU8G,EAAMhC,OAAS,GAC7DrJ,EAAS,EAAA6L,gBAAgB,CAAExH,QAAOyH,UAAWT,EAAM9G,QAEvD,CAACvE,EAAU6K,EAAaE,EAAa1G,IAGjCP,EAAU1D,EAAMmC,aACpB,CAACmE,EAAiBV,KAChB,GAAmB,MAAf6E,GAAsC,MAAfE,EAAqB,OAChD,MAAME,EAAO5G,EAAM6G,YAAc,EAAAC,eAAeC,WAAa,IAAM,IAC7DC,EAAQhH,EAAMgH,MAAMC,OAAOP,EAAYQ,KACvChH,EAAQiH,KAAKC,IAAIJ,EAAMhC,OAAS,EAAGmC,KAAKE,OAAO1F,EAAMiF,GAAQF,EAAYY,IAAIV,IAASF,EAAYa,QACpGvH,EAAM5E,OAAS,EAAA+E,UAAUC,OAASF,IAAU8G,EAAMhC,OAAS,GAC7DrJ,EAAS,EAAA+L,UAAU,CAAE1H,QAAOyH,UAAWT,EAAM9G,QAEjD,CAACvE,EAAU6K,EAAaE,EAAa1G,IAKvC,OAFA,EAAA2H,YAAYxE,GAAY,EAAAyE,UAAUzE,EAASuD,IAAc,CAAEjH,UAASgE,kBAE7D,MAGA,EAAA6C,eACT,UAAevK,EAAMC,KAAKsK,I,mMCrD1B,eAEA,SACA,SAEA,SAiCA,IAAKuB,EArBQ,EAAAC,WAAa,EAAGlG,IAAGE,IAAGe,QAAOC,UAAeiF,EAAS,GAAIC,EAAU,KAC9E,MAAM9F,EAAO,IAAI+F,OAEXC,EAAKtG,EAAIoG,EACTG,EAAKrG,EAAIkG,EACTI,EAAKvF,EAAkB,EAAVmF,EACbK,EAAKvF,EAAmB,EAAVkF,EAYpB,OAVA9F,EAAKoG,OAAOJ,EAAKH,EAAQI,GACzBjG,EAAKqG,OAAOL,EAAKE,EAAKL,EAAQI,GAC9BjG,EAAKsG,iBAAiBN,EAAKE,EAAID,EAAID,EAAKE,EAAID,EAAKJ,GACjD7F,EAAKqG,OAAOL,EAAKE,EAAID,EAAKE,EAAKN,GAC/B7F,EAAKsG,iBAAiBN,EAAKE,EAAID,EAAKE,EAAIH,EAAKE,EAAKL,EAAQI,EAAKE,GAC/DnG,EAAKqG,OAAOL,EAAKH,EAAQI,EAAKE,GAC9BnG,EAAKsG,iBAAiBN,EAAIC,EAAKE,EAAIH,EAAIC,EAAKE,EAAKN,GACjD7F,EAAKqG,OAAOL,EAAIC,EAAKJ,GACrB7F,EAAKsG,iBAAiBN,EAAIC,EAAID,EAAKH,EAAQI,GAC3CjG,EAAKuG,YACEvG,GAGT,SAAK2F,GACH,yBACA,uBAFF,CAAKA,MAAY,KAKJ,EAAAa,kBAAoB,CAACvF,GAA2BwF,OAAMC,aACjE,GAAIA,EAAQ,MAAO,GAEnB,MAAM,IAAE5G,GAAQmB,GACRN,MAAOgG,EAAW/F,OAAQgG,GAAe,EAAAC,kBAAkB5F,GAC7D6F,EAAe,EAAAC,sBAAsB9F,GACrC+F,EAAc,EAAAC,wBAAwBhG,GAEtCiG,EAAcjC,KAAKE,MAAkB,GAAZwB,GACzBQ,EAAqBjO,GACzB,EAAAkO,OACEtH,GACA,CAACa,EAAeC,IACd1H,IAASyM,EAAa0B,OAClB1G,EAAQuG,EACR,EAAAI,MAAMb,GACN9F,EAAQgG,EAAwC,EAA5B1B,KAAKE,MAAMwB,EAAY,GAC3ChG,EAAQsE,KAAKE,MAAMwB,EAAY,IAAM/F,EAASqE,KAAKE,MAAMyB,EAAa,KAC5E1N,IAASyM,EAAa0B,OAAS,KAAO,KAGpCE,EAA+C,CACnD,CAAC5B,EAAa0B,QAASF,EAAkBxB,EAAa0B,QACtD,CAAC1B,EAAa6B,SAAUL,EAAkBxB,EAAa6B,UAOnDC,EAAeT,EAAc,EAC7BU,EAAeZ,EAAe,EAC9Ba,EAAcX,EAAc,EAC5BY,EAAcZ,EAAc,EALb,EAAAa,cAAc/H,EAAKyH,EAAU5B,EAAa0B,UAOzD,KAAES,EAAI,MAAE1G,GAAUqF,EAGlBsB,EAAY,CAChB,CAAErI,EAAG+H,EAAc7H,EAAG8H,EAAcM,MAAO5G,GAC3C,CAAE1B,EAAGiI,EAAa/H,EAAGgI,EAAaI,MAAOF,IACzCG,QAAgB,CAACnO,EAAMkO,KACvBlO,EAAKoO,KAAK,OAAD,wBAEFF,GAAK,CACRG,SAAS,EACTC,UAAW,OACXC,aAAc,MACdC,KAAMf,EAAU5B,EAAa0B,UAAO,+BAGjCW,GAAK,CACRG,SAAS,EACTC,UAAW,OACXC,aAAc,MACdC,KAAMf,EAAU5B,EAAa0B,WAG1BvN,IACN,IAMGyO,EAA8B,GAGlC,CACE,EAAAC,UAAUC,IACV,EAAAD,UAAUE,MACV,EAAAF,UAAUG,KACV,EAAAH,UAAUI,KACV,EAAAJ,UAAUK,KACV,EAAAL,UAAUM,MACV,EAAAN,UAAUO,MACVC,SAAS5H,IAEXmH,EAAIL,KAAK,CAAExI,EAAG,EAAGE,EAAG,IAGlB,CAAC,EAAA4I,UAAUS,IAAK,EAAAT,UAAUE,OAAOM,SAAS5H,IAC5CmH,EAAIL,KAAK,CAAExI,EAAG,EAAGE,EAAG,GAAK,CAAEF,EAAG,EAAGE,EAAG,IAIpC,CACE,EAAA4I,UAAUU,KACV,EAAAV,UAAUG,KACV,EAAAH,UAAUW,IACV,EAAAX,UAAUY,MACV,EAAAZ,UAAUa,MACV,EAAAb,UAAUI,KACV,EAAAJ,UAAUc,KACVN,SAAS5H,IAEXmH,EAAIL,KAAK,CAAExI,EAAG,EAAGE,EAAG,GAAK,CAAEF,EAAG,EAAGE,EAAG,GAAK,CAAEF,EAAG,EAAGE,EAAG,GAAK,CAAEF,EAAG,EAAGE,EAAG,IAGlE,CAAC,EAAA4I,UAAUW,IAAK,EAAAX,UAAUY,MAAO,EAAAZ,UAAUa,OAAOL,SAAS5H,IAC7DmH,EAAIL,KAAK,CAAExI,EAAG,EAAGE,EAAG,GAAK,CAAEF,EAAG,EAAGE,EAAG,IAGlC,CAAC,EAAA4I,UAAUY,MAAO,EAAAZ,UAAUc,IAAK,EAAAd,UAAUa,OAAOL,SAAS5H,IAC7DmH,EAAIL,KAAK,CAAExI,EAAG,EAAGE,EAAG,IAGlB,CAAC,EAAA4I,UAAUI,KAAM,EAAAJ,UAAUc,KAAKN,SAAS5H,IAC3CmH,EAAIL,KAAK,CAAExI,EAAG,EAAGE,EAAG,GAAK,CAAEF,EAAG,EAAGE,EAAG,GAAK,CAAEF,EAAG,EAAGE,EAAG,GAAK,CAAEF,EAAG,EAAGE,EAAG,IAGlE,CAAC,EAAA4I,UAAUc,IAAK,EAAAd,UAAUa,OAAOL,SAAS5H,IAC5CmH,EAAIL,KAAK,CAAExI,EAAG,EAAGE,EAAG,IAGtB,MAAM2J,EAAU3J,IACd,OAAQA,GACN,KAAK,EACL,KAAK,EACH,MAAoB,GAAbgH,EACT,KAAK,EACL,KAAK,EACH,MAAoB,GAAbA,EACT,KAAK,EACL,KAAK,EACH,MAAoB,GAAbA,EACT,KAAK,EACH,MAAoB,GAAbA,IAIP4C,EAAW9J,IACf,OAAQA,GACN,KAAK,EACH,MAAmB,IAAZiH,EACT,KAAK,EACH,MAAmB,GAAZA,EACT,KAAK,EACH,MAAmB,IAAZA,IAIP8C,EAAgB/J,IACpB,OAAQA,GACN,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,UAgBb,OAZA6I,EAAI7E,SAAQ,EAAGhE,IAAGE,QAChBmI,EAAUG,KAAK,CACbxI,EAAG8J,EAAQ9J,GACXE,EAAG2J,EAAO3J,GACVoI,MAAOF,EACPM,UAAWqB,EAAa/J,GACxB2I,aAAc,SACdF,QAASvI,EAAI,EACb0I,KAAMf,EAAU5B,EAAa6B,cAI1BO,GAGI,EAAA2B,kBAAqBzI,IAChC,MAAM,IAAEnB,EAAG,YAAEkB,GAAgBC,GACvB,MAAEN,EAAK,OAAEC,GAAW,EAAAiG,kBAAkB5F,GACtCmE,EAAM,CAAE1F,EAAG,EAAGE,EAAG,EAAGe,QAAOC,UAOjC,OANAd,EAAI6J,UAAU,EAAG,EAAGhJ,EAAOC,GAC3Bd,EAAI8J,UAAY5I,EAAY9F,WAC5B4E,EAAI+J,SAASzE,EAAI1F,EAAG0F,EAAIxF,EAAGwF,EAAIzE,MAAOyE,EAAIxE,QAC1Cd,EAAIgK,UAAY,GAChBhK,EAAIiK,YAAc/I,EAAYzF,WAC9BuE,EAAIkK,WAAW5E,EAAI1F,EAAG0F,EAAIxF,EAAGwF,EAAIzE,MAAOyE,EAAIxE,QACrCd,EAAImK,aAAa7E,EAAI1F,EAAG0F,EAAIxF,EAAGwF,EAAIzE,MAAOyE,EAAIxE,SAG1C,EAAAsJ,mBAAsBjJ,IACjC,MAAM,IAAEnB,EAAG,YAAEkB,GAAgBC,GACvB,MAAEN,EAAK,OAAEC,GAAW,EAAAiG,kBAAkB5F,GACtCmE,EAAM,CAAE1F,EAAG,EAAGE,EAAG,EAAGe,QAAOC,UAE3BuJ,EAAOnN,SAASoN,cAAc,UAEpCD,EAAKxJ,MAAQwJ,EAAKvJ,OADA,GAElB,MAAMyJ,EAAUF,EAAKpK,WAAW,MAC1BuK,EAAWD,EAAQE,qBAAqB,EAAG,EAAGJ,EAAKxJ,MAAOwJ,EAAKvJ,QA2BrE,OAzBA0J,EAASE,aAAa,EAAGxJ,EAAY5F,cACrCkP,EAASE,aAAa,IAAMxJ,EAAY5F,cAExCkP,EAASE,aAAa,IAAMxJ,EAAY3F,cACxCiP,EAASE,aAAa,GAAKxJ,EAAY3F,cAEvCiP,EAASE,aAAa,GAAKxJ,EAAY5F,cACvCkP,EAASE,aAAa,IAAMxJ,EAAY5F,cAExCkP,EAASE,aAAa,IAAMxJ,EAAY3F,cACxCiP,EAASE,aAAa,EAAGxJ,EAAY3F,cAErCgP,EAAQT,UAAYU,EACpBD,EAAQR,SAAS,EAAG,EAlBF,OAoBlB/J,EAAI6J,UAAUvE,EAAI1F,EAAG0F,EAAIxF,EAAGwF,EAAIzE,MAAOyE,EAAIxE,QAC3Cd,EAAIiK,YAAc/I,EAAYzF,WAC9BuE,EAAIgK,UAAY,EAChBhK,EAAI2K,OAAO,EAAA7E,WAAWR,IACtBtF,EAAI4K,OACJ5K,EAAI6K,KAAK,EAAA/E,WAAWR,EAAK,KACzBtF,EAAI8J,UAAY9J,EAAI8K,cAAcT,EAAM,UACxCrK,EAAI+J,SAASzE,EAAI1F,EAAI,EAAG0F,EAAIxF,EAAI,EAAGwF,EAAIzE,MAAQ,EAAGyE,EAAIxE,OAAS,GAC/Dd,EAAI+K,UAEG/K,EAAImK,aAAa7E,EAAI1F,EAAG0F,EAAIxF,EAAGwF,EAAIzE,MAAOyE,EAAIxE,SAG1C,EAAAkK,iBAAmB,CAAC7J,EAAyBwF,KACxD,MAAM,IAAE3G,EAAG,YAAEkB,GAAgBC,GACvB,MAAEN,EAAK,OAAEC,GAAW,EAAAiG,kBAAkB5F,GACtCmE,EAAM,CAAE1F,EAAG,EAAGE,EAAG,EAAGe,QAAOC,UAEjCd,EAAI6J,UAAUvE,EAAI1F,EAAG0F,EAAIxF,EAAGwF,EAAIzE,MAAOyE,EAAIxE,QAC3Cd,EAAIiK,YAAc/I,EAAYzF,WAC9BuE,EAAIgK,UAAY,EAChBhK,EAAI2K,OAAO,EAAA7E,WAAWR,EAAK,KAE3BtF,EAAI8J,UAAYnD,EAAK/K,SAAWsF,EAAYtF,SAAWsF,EAAY7F,OACnE2E,EAAIiL,KAAK,EAAAnF,WAAWR,EAAK,GAAI,KAE7B,IAAK,MAAM4C,KAAS,EAAAxB,kBAAkBvF,EAASwF,GAC7C3G,EAAI8J,UAAY,EAAAoB,MAAMvE,EAAKA,MAAQzF,EAAYvF,IAAMuF,EAAYxF,MACjEsE,EAAIsI,UAAYJ,EAAMI,UACtBtI,EAAIuI,aAAeL,EAAMK,aACzBvI,EAAIwI,KAAON,EAAMM,KACbN,EAAMG,UACRrI,EAAI4K,OACJ5K,EAAImL,UAAUtK,EAAOC,GACrBd,EAAIoL,OAAOjG,KAAKkG,KAElBrL,EAAIsL,SAASpD,EAAMA,MAAOA,EAAMtI,EAAI0F,EAAI1F,GAAKsI,EAAMG,SAAW,EAAI,GAAIH,EAAMpI,EAAIwF,EAAIxF,GAAKoI,EAAMG,SAAW,EAAI,IAC1GH,EAAMG,SAASrI,EAAI+K,UAEzB,OAAO/K,EAAImK,aAAa7E,EAAI1F,EAAG0F,EAAIxF,EAAGwF,EAAIzE,MAAOyE,EAAIxE,SAG1C,EAAAyK,kBAAqBpK,IAChC,MAAM,IAAEnB,EAAG,YAAEkB,GAAgBC,GACvB,MAAEN,EAAK,OAAEC,GAAW,EAAAiG,kBAAkB5F,GACtCmE,EAAM,CAAE1F,EAAG,EAAGE,EAAG,EAAGe,QAAOC,UASjC,OARAd,EAAI6J,UAAUvE,EAAI1F,EAAG0F,EAAIxF,EAAGwF,EAAIzE,MAAOyE,EAAIxE,QAC3Cd,EAAI8J,UAAY5I,EAAY9F,WAC5B4E,EAAIiL,KAAK,EAAAnF,WAAWR,IACpBtF,EAAIwI,KAAO,kBACXxI,EAAIsI,UAAY,SAChBtI,EAAIuI,aAAe,SACnBvI,EAAI8J,UAAY5I,EAAYrF,WAC5BmE,EAAIsL,SAAS,IAAKhG,EAAIzE,MAAQ,EAAGyE,EAAIxE,OAAS,GACvCd,EAAImK,aAAa7E,EAAI1F,EAAG0F,EAAIxF,EAAGwF,EAAIzE,MAAOyE,EAAIxE,U,yBC9RvD,IAAYrH,E,yFAAZ,SAAYA,GACV,cACA,gBAFF,CAAYA,EAAA,EAAAA,kBAAA,EAAAA,gBAAe,KAoBd,EAAAwB,aAA0D,CACrE,CAACxB,EAAgBC,MAAO,CACtBwB,WAAY,OACZC,MAAO,OACPC,WAAY,UACZC,OAAQ,OACRC,aAAc,UACdC,aAAc,UACdC,aAAc,OACdC,WAAY,OACZC,MAAO,UACPC,IAAK,UACLC,SAAU,UACVC,WAAY,QAEd,CAACpC,EAAgBiK,OAAQ,CACvBxI,WAAY,UACZC,MAAO,OACPC,WAAY,UACZC,OAAQ,OACRC,aAAc,UACdC,aAAc,UACdC,aAAc,OACdC,WAAY,OACZC,MAAO,UACPC,IAAK,UACLC,SAAU,UACVC,WAAY,S,yICjEhB,eAEA,QACA,SA6CA,IAAI2P,EALS,EAAAC,OAAS,EAAG9E,MAAQqB,OAAM1G,SAAS1F,cAC9C,GAAGoM,KAAQ1G,MAAU1F,IAAY,GAAOwH,aAE7B,EAAAsI,UAAoC,IAAIhL,IAIxC,EAAAW,WAAcF,IACzB,MAAM,MAAEN,EAAK,OAAEC,GAAW,EAAAiG,kBAAkB5F,GAC5C,EAAAuK,UAAUlK,IAAI,SAAU,EAAA4I,mBAAmBjJ,IAC3C,EAAAuK,UAAUlK,IAAI,QAAS,EAAAoI,kBAAkBzI,IACzC,EAAAuK,UAAUlK,IAAI,QAAS,EAAA+J,kBAAkBpK,IACzC,EAAAwK,MAAM/H,SAAS+C,IACb,EAAA+E,UACGlK,IAAI,EAAAiK,OAAO,CAAE9E,OAAM/K,UAAU,IAAS,EAAAoP,iBAAiB7J,EAAS,CAAEwF,OAAM/K,UAAU,KAClF4F,IAAI,EAAAiK,OAAO,CAAE9E,OAAM/K,UAAU,IAAU,EAAAoP,iBAAiB7J,EAAS,CAAEwF,OAAM/K,UAAU,QAGxF4P,EAAKtO,SAASoN,cAAc,UAC5BkB,EAAG3K,MAAQA,EACX2K,EAAG1K,OAASA,EACZK,EAAQnB,IAAI6J,UAAU,EAAG,EAAGhJ,EAAQ,EAAGC,EAAS,IAKrC,EAAA8K,kBAAoB,CAACzK,EAAyB0K,EAAiBjM,EAAWE,KACrF,MAAMgM,EAAON,EAAGvL,WAAW,MAC3B6L,WAAMC,aAAaF,EAAM,EAAG,GAC5B1K,EAAQnB,IAAIgM,UAAUR,EAAI5L,EAAGE,K,yHCxE/B,MAAMmM,EAAeC,MAAMC,KAAqB,CAAEnJ,OAAQ,MAAO,CAACoJ,EAAGC,IAAMA,IAM9D,EAAAC,aAAe,CAACtM,EAA+BwI,EAAc+D,KACxEvM,EAAIwI,KAAOA,EACJxI,EAAIwM,YAAYD,GAAM1L,OAGlB,EAAAkH,cAAgB,CAAC/H,EAA+BwI,KAC3DxI,EAAIwI,KAAOA,EACJxI,EAAIwM,YAAY,KAAK3L,OAG9B,MAAM4L,EAAiB,CACrBzM,EACA0M,EACAH,EACAnH,EACAF,KAEA,MAAMhH,EAAQiH,KAAKE,OAAOH,EAAME,GAAO,GACjCoD,EAAO,GAAGyD,EAAa/N,kBACvB2C,EAAQ,EAAAyL,aAAatM,EAAKwI,EAAM+D,GAChCzL,EAAS,EAAAiH,cAAc/H,EAAKwI,GAClC,OAAIpD,EAAMF,EAAYsD,EAClBkE,EAAY7L,EAAOC,GAAgB2L,EAAezM,EAAK0M,EAAaH,EAAMnH,EAAKlH,EAAQ,GACpFuO,EAAezM,EAAK0M,EAAaH,EAAMrO,EAAQ,EAAGgH,IAG9C,EAAAoC,OAAS,CAACtH,EAA+B0M,EAA0BH,IAC9EE,EAAezM,EAAK0M,EAAaH,EAAM,EAAGN,EAAajJ,OAAS,I,2OChClE,eAEa,EAAA2J,wBAA2B3M,GAAwBmF,KAAKE,MAAmB,IAAbrF,EAAIc,QAElE,EAAA8L,yBAA4B5M,GAAwBmF,KAAKE,MAAmB,IAAbrF,EAAIc,QAEnE,EAAAmG,sBAAyBjH,GAAwBmF,KAAKE,MAAmB,IAAbrF,EAAIc,QAEhE,EAAAqG,wBAA2BnH,GAAwBmF,KAAKE,MAAkB,IAAZrF,EAAIa,OAElE,EAAAgM,aAAe,KAAW,CAAGjN,EAAG,EAAGE,EAAG,EAAGe,MAAO,EAAGC,OAAQ,KAQ3D,EAAAiG,kBAAqB/G,IAChC,MAAM8M,EAAmB,EAAA3F,wBAAwBnH,GAC3C+M,EAAiB,EAAA9F,sBAAsBjH,GACvCgN,EAAY,EAAAH,eACZI,EAAwB,EAAAL,yBAAyB5M,GAEjDkN,EAAoBF,EAAUlM,OAA0B,EAAjBiM,EAA6C,GAAxBE,EAC5DE,EAAyC,EAAnBL,EAEtBM,EAAWjI,KAAKE,OAAOrF,EAAIa,MAAQsM,GAAuB,GAC1DE,EAAYlI,KAAKE,OAAOrF,EAAIc,OAASoM,GAAqB,KAE1DI,EAAgB,MAChBzM,EAAQuM,EAAWE,EAAgBD,EAAYD,EAAWC,EAAYC,EACtExM,EAASsM,EAAWE,EAAgBD,EAAYD,EAAWE,EAAgBD,EAEjF,MAAO,CACLxM,MAAOsE,KAAKE,MAAMxE,GAClBC,OAAQqE,KAAKE,MAAMvE,KAIV,EAAAyM,YAAc,CAACvN,EAAqBhC,EAAckH,KAC7D,MAAM6H,EAAiB,EAAA9F,sBAAsBjH,GACvC8M,EAAmB,EAAA3F,wBAAwBnH,GAC3CrC,EAAS,EAAAkP,gBACT,MAAEhM,EAAK,OAAEC,GAAW,EAAAiG,kBAAkB/G,GACtCwN,EAAarI,KAAKC,IAAIpH,EAAMgH,MAAMhC,OAAQkC,GAM1CuI,EAA+B,EAAnBX,EAA+B,EAARjM,EACnC6M,EAAQD,EAAYzN,EAAIa,OAASb,EAAIa,MAAQ4M,GAAa,EAAI,EAE9DE,EACJ3P,EAAM6G,YAAc,EAAAC,eAAeC,WAChB,IAAfyI,EACE1M,EACA,EAAA6L,wBAAwB3M,IAAQwN,EAAa,GAAK3M,EACpDA,EAEA+M,EACJ5P,EAAM6G,YAAc,EAAAC,eAAe+I,SAChB,IAAfL,EACE1M,EACA,EAAA8L,yBAAyB5M,IAAQwN,EAAa,GAAK1M,EACrDA,EAEN,OAAQ9C,EAAM5E,MACZ,KAAK,EAAA+E,UAAUE,MACb,MAAO,CACLyB,EAAGnC,EAAOmD,OAASiM,EACnBnN,EAAG8N,EACH7M,MAAO8M,EACP7M,OAAQ8M,GAEZ,KAAK,EAAAzP,UAAUC,MACb,MAAO,CACL0B,EAAGnC,EAAOmD,OAASiM,EACnBnN,EAAG8N,EAAQZ,EAAmBjM,EAC9BA,MAAO8M,EACP7M,OAAQ8M,GAEZ,KAAK,EAAAzP,UAAU2P,WACb,MAAO,CACLhO,EAAGnC,EAAOmD,OAASiM,EACnBnN,EAAG8N,EAAQ,EAAIZ,EAAmB,EAAIjM,EAAQ7C,EAAME,OAAS4O,EAAmBjM,GAChFA,MAAO8M,EACP7M,OAAQ8M,GAEZ,KAAK,EAAAzP,UAAU4P,QACb,MAAO,CACLjO,EAAGnC,EAAOmD,OAA0B,EAAjBiM,EAAqBjM,EACxClB,EAAG8N,EAAQ1P,EAAME,OAAS4O,EAAmBjM,GAC7CA,MAAO8M,EACP7M,OAAQ8M,M,wHChGhB,eACA,SACA,SAca,EAAAjJ,uBAAyB,CACpCxD,EACAnD,EACAgQ,KAEA,MAAM9I,EACJlH,EAAM5E,OAAS,EAAA+E,UAAUE,OAASL,EAAM5E,OAAS,EAAA+E,UAAU2P,WACvD,EACA9P,EAAM5E,OAAS,EAAA+E,UAAUC,MACzB4P,EAAKxT,SAAW,EAChBwD,EAAMgH,MAAMhC,OAEZsC,EAAM,EAAAiI,YAAYpM,EAASnD,EAAOkH,GAElCK,EACJvH,EAAM6G,YAAc,EAAAC,eAAeC,WAAa,EAAA4H,wBAAwBxL,GAAW,EAAAyL,yBAAyBzL,GAE9G,MAAO,CACLnD,QACA1D,UAAW0T,EAAK1T,UAChBE,QAASwT,EAAKxT,QACd+K,QACAD,MACAJ,QAIS,EAAAU,UAAY,CAACzE,EAAyBuD,KACjD,GAAmB,MAAfA,EAAqB,OAAO,KAChC,MAAM,MAAE1G,EAAK,UAAE1D,EAAS,IAAE4K,EAAG,MAAEK,EAAK,IAAED,GAAQZ,EACxCM,EAAQhH,EAAMgH,MAAMC,OAAOC,GAE3BhF,EAAO,IAAI+F,OACjB/F,EAAK+N,KAAK3I,EAAI1F,EAAG0F,EAAIxF,EAAGwF,EAAIzE,MAAOyE,EAAIxE,QACvCZ,EAAKuG,YAEL,MAAMyH,EAAyB,IAAjBlJ,EAAMhC,OACdmL,EAAQnQ,EAAM5E,OAAS,EAAA+E,UAAUE,OAAS6P,GAAS5T,EACnD8T,EAAW,GAEbD,EAAOC,EAAShG,KAAK,CAAEyD,KAAM,EAAAH,UAAUpL,IAAI,SAAUV,EAAG0F,EAAI1F,EAAGE,EAAGwF,EAAIxF,IACjEoO,EAAOE,EAAShG,KAAK,CAAEyD,KAAM,EAAAH,UAAUpL,IAAI,SAAUV,EAAG0F,EAAI1F,EAAGE,EAAGwF,EAAIxF,IAE7EkF,EAAMpB,SAAQ,CAAC+C,EAAM0H,KACnB,MAAMC,EAAU3H,EAAKC,OAAS,EAAA8E,UAAUpL,IAAI,UAAY,EAAAoL,UAAUpL,IAAI,EAAAmL,OAAO9E,IAC7E,GAAI2H,EAAS,CACX,MAAM1O,EAAI5B,EAAM6G,YAAc,EAAAC,eAAeC,WAAasJ,EAAI9I,EAAQ,EAChEzF,EAAI9B,EAAM6G,YAAc,EAAAC,eAAeC,WAAa,EAAIsJ,EAAI9I,EAClE6I,EAAShG,KAAK,CAAEyD,KAAMyC,EAAS1O,EAAG0F,EAAI1F,EAAIA,EAAGE,EAAGwF,EAAIxF,EAAIA,QAI9D,IAAK,MAAM,KAAE+L,EAAI,EAAEjM,EAAC,EAAEE,KAAOsO,EAAUvC,GAAQ,EAAAD,kBAAkBzK,EAAS0K,EAAMjM,EAAGE,GACnF,MAAO,CAAEI,OAAMoF,S,mGCrEjB,eAUa,EAAAtE,cAAgB,KAC3B,MAAOvB,EAAQ8O,GAAaxU,EAAMiC,SAAmC,MAC/D+E,EAAkBhH,EAAMmC,aAAauD,GAA8BA,GAAU8O,EAAU9O,IAAS,IAEhG+O,EAAU,KAAM,CAAG3N,MAAOmB,OAAOC,WAAYnB,OAAQkB,OAAOE,eAE3DuM,EAAMC,GAAW3U,EAAMiC,WAE9BjC,EAAMsC,WAAU,KACd,IAAIsS,EACJ,MAAMC,EAAa,KACbD,GAAKE,aAAaF,GACtBA,EAAM3M,OAAO8M,YAAW,IAAMJ,EAAQF,MAAY,MAGpD,OADAxM,OAAO7E,iBAAiB,SAAUyR,GAC3B,KACL5M,OAAO5E,oBAAoB,SAAUwR,OAezC,OAXe7U,EAAMgB,SACnB,IAAO,OAAD,QACJgG,mBACItB,GAAU,OAAJ,QACRO,IAAKP,EAAOQ,WAAW,OACnBwO,UAAQD,OAGhB,CAACC,EAAM1N,EAAiBtB,M,gGCtC5B,eACA,SAOa,EAAAkG,WAAa,CAACoJ,EAAcxN,EAAoB,M,QAC3D,MAAMiD,EAAczK,EAAM0K,WAAW,EAAAtF,SAC/B6P,EAAiBjV,EAAMwE,QAAO,GAC9B0Q,EAAYlV,EAAMwE,OAAiC,QAA1B,EAAAiG,aAAW,EAAXA,EAAarD,QAAQN,aAAK,QAAI,GACvDqO,EAAanV,EAAMwE,OAAkC,QAA3B,EAAAiG,aAAW,EAAXA,EAAarD,QAAQL,cAAM,QAAI,GAM/D/G,EAAMqH,iBAAgB,KACfoD,IACLwK,EAAepQ,WACZsQ,EAAWtQ,UAAY4F,EAAYrD,QAAQL,QAAUmO,EAAUrQ,UAAY4F,EAAYrD,QAAQN,QAChGqO,EAAWtQ,QAAU,GACrBqQ,EAAUrQ,QAAU,GAEtBsQ,EAAWtQ,QAAU4F,EAAYrD,QAAQL,OACzCmO,EAAUrQ,QAAU4F,EAAYrD,QAAQN,SACvC,CAAC2D,IAEJzK,EAAMsC,WAAU,KACd,GAAmB,MAAfmI,EAAqB,OACzB,MAAM,IAAEzB,EAAG,OAAEoM,EAAM,QAAEhO,GAAYqD,GAC3B,IAAExE,GAAQmB,EAEVd,EAAQ0O,EAAK5N,GACnB,OAAa,MAATd,GACJ0C,EAAI1C,EAAOkB,GAEJ,KACL4N,EAAO9O,EAAMH,MACT8O,EAAepQ,SACjBoB,EAAI6J,UAAUxJ,EAAMiF,IAAI1F,EAAGS,EAAMiF,IAAIxF,EAAGO,EAAMiF,IAAIzE,MAAOR,EAAMiF,IAAIxE,QAErEkO,EAAepQ,SAAU,SAR3B,O,0BCnCJ,eACA,SACA,SAEA,SAIEwQ,EAAQC,QAAQ,CACd,gBACED,EAAQE,eAEV,YACEtN,OAAOuN,SAASC,YAKtBC,EAASC,OAAO,gBAAC,UAAG,MAAKxS,SAASyS,eAAe,U,yBClBjD,IAAYjH,EAgBAkH,E,oHAhBZ,SAAYlH,GACV,UACA,UACA,YACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,WACA,YACA,WAbF,CAAYA,EAAA,EAAAA,YAAA,EAAAA,UAAS,KAgBrB,SAAYkH,GACV,YACA,cACA,YACA,WAJF,CAAYA,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAkBpB,SAAY9K,GACV,0BACA,sBAFF,CAAY,EAAAA,iBAAA,EAAAA,eAAc,KAe1B,SAAY3G,GACV,oBACA,0BACA,gBACA,gBAJF,CAAY,EAAAA,YAAA,EAAAA,UAAS,KAerB,MAAMwN,EAAgB,GAUb,EAAAA,QART,IAAK,MAAMrK,KAASuO,OAAOC,OAAOpH,GAChC,IAAK,MAAMV,KAAQ6H,OAAOC,OAAOF,GAC/BjE,EAAMvD,KAAK,CAAEJ,OAAM1G,UAIvBuO,OAAOE,OAAOpE,I,wHCxEd,SAAY1S,GACV,mBACA,gBACA,gBACA,uBAJF,CAAY,EAAAA,kBAAA,EAAAA,gBAAe,KAOd,EAAA+W,QAAwD,CAACxN,EAAMnC,KAC1E,IACE4P,aAAaC,QAAQ1N,EAAM2N,KAAKC,UAAU/P,IAC1C,MAAOgQ,MAKE,EAAArX,SAAW,CAAIwJ,EAAuB8N,KACjD,IACE,MAAMjQ,EAAQ4P,aAAaM,QAAQ/N,IAAS,GAC5C,OAAO2N,KAAKK,MAAMnQ,GAClB,MAAOgQ,GACP,OAAOC,K,uBCpBX,IAAYjX,EAKAoX,E,mGALZ,SAAYpX,GACV,gBACA,oBAFF,CAAYA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KAKvB,SAAYoX,GACV,kCACA,wCACA,4CACA,0BACA,4CALF,CAAYA,EAAA,EAAAA,YAAA,EAAAA,UAAS,KAQR,EAAAC,eAAiB,CAACC,EAA0BC,KACvD,IAAIjW,EAAQ,EAeZ,OAdIgW,IAAgBtX,EAAYC,SAAWsX,IAAcH,EAAUI,oBACjElW,EAAQ,GAERiW,IAAcH,EAAUK,mBACvBH,IAAgBtX,EAAYmK,OAASoN,IAAcH,EAAUI,qBAC7DF,IAAgBtX,EAAYC,SAAWsX,IAAcH,EAAUM,YAC/DJ,IAAgBtX,EAAYC,SAAWsX,IAAcH,EAAUO,eAEhErW,EAAQ,EACCgW,IAAgBtX,EAAYC,SAAWmX,EAAUQ,oBAC1DtW,GAAS,GACAgW,IAAgBtX,EAAYmK,OAASoN,IAAcH,EAAUQ,sBACtEtW,GAAS,GAEJA,I,iQC7BT,eAGa,EAAAuW,IAAOC,IAClB,MAAMD,EAAM,KAAQ,WAAK,IAAK,GAAMC,EAAIhM,KAAKiM,KAAK,MAAOD,KAAO,WAAK,IAErE,OADAD,IACO,CAAC9L,EAAaF,IAAgBC,KAAKE,MAAM6L,IAAQhM,GAAOE,GAGpD,EAAAiM,eAAkBhD,GAAeA,GAAKA,EAAI,GAAM,EAEhD,EAAAiD,WAActT,GAAmCA,EAAMgH,MAAMhH,EAAMgH,MAAMhC,OAAS,IAAM,KAExF,EAAAuO,OAAS,CAACnM,EAAaF,IAAwBC,KAAKE,MAAMF,KAAKoM,SAAWrM,GAAOE,EAOjF,EAAAoM,UAAY,CAACC,EAAeC,IAAkBD,EAAOrY,OAASsY,EAAOtY,MAAQqY,EAAOvT,QAAUwT,EAAOxT,MAErG,EAAAyT,SAAW,CAACC,EAAuBC,IAC9CD,EAAWjL,KAAKrF,QAAUuQ,EAAWlL,KAAKrF,OAASsQ,EAAWjL,KAAKqB,OAAS6J,EAAWlL,KAAKqB,KAEjF,EAAA8J,kBAAoB,CAACC,EAAyBtM,IACzDsM,EAAWC,MAAMC,GAAoB,EAAAN,SAASM,EAAMxM,KAEzC,EAAAyM,aAAe,CAACvL,EAAYwL,IAAgBC,EAAWD,EAAM7Q,OAAS,IAAM8Q,EAAWzL,EAAKrF,OAE5F,EAAA4J,MAASvE,GAAe,CAAC,EAAAiJ,SAASyC,QAAS,EAAAzC,SAAS0C,OAAOpJ,SAASvC,EAAKqB,MAEzE,EAAAuK,QAAW5L,GAAe,CAAC,EAAAiJ,SAAS4C,KAAM,EAAA5C,SAAS6C,OAAOvJ,SAASvC,EAAKqB,MAExE,EAAAR,MAASb,GACpB,CAAC,EAAA+B,UAAUC,IAAK,EAAAD,UAAUK,KAAM,EAAAL,UAAUM,MAAO,EAAAN,UAAUO,MAAMC,SAASvC,EAAKrF,OAEpE,EAAAoR,sBAAwB,CAACjN,EAAsBkN,IAC3C,MAAfA,EACIlN,EAAUkB,KAAKrF,QAAU,EAAAoH,UAAUC,IACnCgK,EAAYhM,KAAKqB,OAASvC,EAAUkB,KAAKqB,MAAQ,EAAAkK,aAAazM,EAAUkB,KAAMgM,EAAYhM,MAEnF,EAAAiM,mBAAqB,CAACnN,EAAsBoN,IACjC,MAAfA,EACHpN,EAAUkB,KAAKrF,QAAU,EAAAoH,UAAUO,KACnC,EAAAiJ,aAAaW,EAAYlM,KAAMlB,EAAUkB,QACrC,EAAAuE,MAAMzF,EAAUkB,OAAS,EAAA4L,QAAQM,EAAYlM,OAAW,EAAA4L,QAAQ9M,EAAUkB,OAAS,EAAAuE,MAAM2H,EAAYlM,OAG/G,MAAMyL,EAAc9Q,GACdA,IAAU,EAAAoH,UAAUC,IAAY,EAChCrH,IAAU,EAAAoH,UAAUK,KAAa,GACjCzH,IAAU,EAAAoH,UAAUM,MAAc,GAClC1H,IAAU,EAAAoH,UAAUO,KAAa,GAC9BhF,SAAS3C,EAAO,K,yICtDzB,eACA,SACA,SACA,OACA,SACA,SACA,SACA,SAEMwR,EAAiB,EAAAC,YAAY,CACjCvQ,KAAM,aACNwQ,aAAc,CACZC,MAAO,EACP/Z,OAAQ,EACRyB,MAAO,EACPgW,YAAa,EAAAtX,YAAYC,QACzBkB,QAAS,EACThB,MAAO,EAAAC,gBAAgBC,MAEzBwZ,SAAU,CACR,eAAeC,GACbA,EAAMF,MAAQE,EAAMF,MAAQ,GAE9B,eAAeE,GAAO,QAAEC,IACtBD,EAAMxY,MAAQwY,EAAMxY,MAAQ,EAAA+V,eAAeyC,EAAMxC,YAAayC,IAEhE,YAAYD,GAAO,QAAEC,IACnBD,EAAM3Z,MAAQ4Z,IAGlBC,cAAgBC,GACdA,EACGC,QAAQ,EAAAlS,YAAY,CAAC8R,GAASC,cAC7BD,EAAMF,MAAQ,EACdE,EAAMja,OAASka,EAAQla,OACvBia,EAAMxY,MAAQyY,EAAQzC,cAAgB,EAAAtX,YAAYmK,MAAQ,EAAAxK,SAAS,EAAAC,gBAAgB0B,MAAO,GAAK,GAAK,EACpGwY,EAAMxC,YAAcyC,EAAQzC,YAC5BwC,EAAM3Y,QAAU,EAChB2Y,EAAM3Z,MAAQ4Z,EAAQ5Z,SAEvBga,YACEC,GACC,EAAAC,WAAWC,MAAMF,KAChBA,EAAOL,QAAQQ,GAAGxa,OAAS,EAAA+E,UAAUC,OACnCqV,EAAOL,QAAQjH,MAAQsH,EAAOL,QAAQjH,KAAK/S,OAAS,EAAA+E,UAAUC,SACnE,CAAC+U,GAASC,SAAWQ,KAAI5O,aACvBmO,EAAM3Y,QACJoZ,EAAGxa,OAAS,EAAA+E,UAAUC,MAAQ+G,KAAKC,IAAIwO,EAAG5O,MAAMhC,OAASgC,EAAMhC,OAAQ,GAAKmC,KAAKD,IAAI,EAAGiO,EAAM3Y,QAAU,QAKvG,EAAkDsY,EAAee,QAA/D,EAAAC,eAAc,iBAAE,EAAAC,eAAc,iBAAE,EAAA3P,YAAW,cAE1D,UAAe,EAAA4P,SAASlB,EAAemB,U,4ECtDvC,eAEA,GADA,OACA,QAEA,SACA,SACA,SACA,SAEA,OAEMC,EAAa,EAAAC,qBAAqB,CAAEC,gBAAgB,EAAOC,mBAAmB,IAapF,MAAMJ,EAAU,EAAAK,gBAAgB,CAAEna,OAAA,UAAQoa,UAAA,YACpCza,EAAQ,EAAA0a,eAAe,CAAEP,UAASC,eAExC,UAAUpa,EAAO,EAAA2a,cAAc,EAAG9D,cAAahW,YACzCgW,IAAgB,EAAAtX,YAAYmK,OAAO,EAAAwM,QAAQ,EAAA/W,gBAAgB0B,MAAOA,MAExE,UAAUb,EAAO,EAAAgK,SAAU6M,GAAgB,EAAAX,QAAQ,EAAA/W,gBAAgBG,KAAMuX,KACzE,UAAU7W,EAAO,EAAAY,UAAWnB,GAAa,EAAAyW,QAAQ,EAAA/W,gBAAgBO,MAAOD,KACxE,UAAUO,EAAO,EAAAe,WAAY3B,GAAW,EAAA8W,QAAQ,EAAA/W,gBAAgBC,OAAQA,KASxE,UAAeY,G,gGCzCf,eAQa,EAAAuH,WAAa,EAAAqT,aAKvB,e,mVCbH,eACA,SACA,SACA,OAGa,EAAAra,UAAY,EAAAsa,gBACtBxB,GAAsBA,EAAMhZ,OAAOya,QAAQza,SAC3CA,GAAWA,IAGd,MAAM0a,EAAgB,EAAAF,eAAe,EAAAta,WAAYF,GAC/CA,EAAO2a,QAAQ9W,GAAUA,EAAM5E,OAAS,EAAA+E,UAAU2P,eAGvC,EAAAiH,WAAa,EAAAJ,eAAe,EAAAta,WAAYF,GACnDA,EAAO2a,QAAQ9W,GAAUA,EAAM5E,OAAS,EAAA+E,UAAU4P,YAGvC,EAAArP,WAAa,EAAAiW,eAAeE,GAAgB/G,GACvDA,EAAWkH,OAAOhX,GAAiC,KAAvBA,EAAMgH,MAAMhC,WAG7B,EAAAiS,cAAgB,EAAAN,eAAe,EAAAI,YAAa5a,GACvDA,EAAOgO,QAA6B,CAAC+M,EAAKlX,KACxC,GAAIkX,EAAK,OAAOA,EAChB,MAAMC,EAAU,EAAA7D,WAAWtT,GAC3B,OAAImX,GAAWA,EAAQvO,OAAe,CAAE5I,QAAOyH,UAAW0P,GACnD,OACN,QAGQ,EAAAC,uBAAyB,EAAAT,eAAe,CAAC,EAAAta,UAAWwa,IAAgB,CAAC1a,EAAQ2T,IACxF3T,EACG2a,QAAQ9W,GAAUA,EAAM5E,OAAS,EAAA+E,UAAU2P,aAC3C3F,QAA6B,CAAC+M,EAAKlX,KAClC,GAAIkX,EAAK,OAAOA,EAChB,MAAMC,EAAU,EAAA7D,WAAWtT,GAC3B,OAAe,MAAXmX,GAAmBA,EAAQvO,OAAesO,EAC1CpH,EAAWkE,MAAMqD,GAAM,EAAA3C,sBAAsByC,EAAS,EAAA7D,WAAW+D,MAAa,CAAErX,QAAOyH,UAAW0P,GAC/F,OACN,QAGM,EAAAG,SAAW,EAAAX,eACtB,EAAAta,WACCF,GAAWA,EAAO2a,QAAQ9W,GAAUA,EAAM5E,OAAS,EAAA+E,UAAUE,QAAO,KAG1D,EAAAkX,SAAW,EAAAZ,eACtB,EAAAta,WACCF,GAAWA,EAAO2a,QAAQ9W,GAAUA,EAAM5E,OAAS,EAAA+E,UAAUC,QAAO,KAG1D,EAAAoX,mBAAqB,EAAAb,eAChCE,GACA,CAACY,EAAYhQ,IAAyBA,IACtC,CAACqI,EAAYrI,IAAcqI,EAAW4H,MAAM1X,GAAU,EAAA0U,sBAAsBjN,EAAW,EAAA6L,WAAWtT,QAGvF,EAAAyW,aAAe,EAAAE,gBACzBxB,GAAsBA,EAAMoB,UAAUK,UACtCja,GAAUA,IAGA,EAAAD,SAAW,EAAAia,eAAe,EAAAF,cAAeF,GAAcA,EAAU/a,QAEjE,EAAAoB,SAAW,EAAA+Z,eAAe,EAAAF,cAAeF,GAAcA,EAAU5Z,QAEjE,EAAAmJ,QAAU,EAAA6Q,eAAe,EAAAF,cAAeF,GAAcA,EAAU5D,cAEhE,EAAAgF,SAAW,EAAAhB,eAAe,EAAAF,cAAeF,GAAcA,EAAUtB,QAGjE,EAAA1Y,aAAe,EAAAoa,eAC1B,CAAC,EAAAgB,SAAU,EAAA7R,UACX,CAACmP,EAAOtC,IAAgBA,IAAgB,EAAAtX,YAAYmK,OAASyP,EAAQ,EAH9C,IAMZ,EAAAxY,WAAa,EAAAka,eAAe,EAAAF,cAAc,EAAGja,aAAcA,IAE3D,EAAAK,UAAY,EAAA8Z,eAAe,EAAAF,cAAc,EAAGvb,YAAaA,IAEzD,EAAA0c,aAAe,EAAAjB,eAAe,EAAAta,WAAYF,IACrD,MAAM6D,EAAQ7D,EAAOub,MAAM1X,GAA6B,MAAnBA,EAAM4D,YAC3C,OAAI5D,EAAc,CAAEyH,UAAWzH,EAAM4D,UAAW5D,MAAOA,GAChD,QAGI,EAAA6X,mBAAqB,EAAAlB,eAChC,CAAC,EAAAW,SAAU,EAAA/a,eACX,CAAC8D,EAAO/D,IAAqC,IAAvB+D,EAAM2G,MAAMhC,QAAgB1I,K,0LC3FpD,eAEA,SACA,SACA,SACA,SAIMwb,EAAc,EAAA/C,YAAY,CAC9BvQ,KAAM,SACNwQ,aAAc,CACZ7Y,OAAQ,CACN,CACEf,KAAM,EAAA+E,UAAUE,MAChBwG,UAAW,KACXG,MAAO,GACP9G,MAAO,EACP0D,UAAW,MAEb,CACExI,KAAM,EAAA+E,UAAUC,MAChByG,UAAW,EAAAC,eAAeC,WAC1BC,MAAO,GACP9G,MAAO,EACP0D,UAAW,SAEVsK,MAAMC,KAAoB,CAAEnJ,OAAQ,IAAK,CAACyS,EAAGvX,KAAU,CACxD9E,KAAM,EAAA+E,UAAU4P,QAChBlJ,UAAW,EAAAC,eAAe+I,SAC1B7I,MAAO,GACP9G,QACA0D,UAAW,YAEVsK,MAAMC,KAAoB,CAAEnJ,OAAQ,IAAK,CAACyS,EAAGvX,KAAU,CACxD9E,KAAM,EAAA+E,UAAU2P,WAChBjJ,UAAW,KACXG,MAAO,GACP9G,QACA0D,UAAW,WAIjBsR,SAAU,CACRQ,WAAY,CAACP,GAASC,SAAWjH,OAAMyH,KAAI5O,QAAO4B,cAChD,MAAMmP,EAAU5C,EAAMhZ,OAAOub,MAAM1X,GAAU,EAAAwT,UAAUoC,EAAI5V,KACrDgY,EAAY7C,EAAMhZ,OAAOub,MAAM1X,GAAU,EAAAwT,UAAUrF,EAAMnO,KAC3D+X,GAASA,EAAQ/Q,MAAMoD,QAAQpD,EAAMjH,KAAK4I,GAAU,OAAD,wBAAMA,GAAI,CAAE/K,UAAU,EAAOgL,cAChFoP,IAAWA,EAAUhR,MAAQgR,EAAUhR,MAAM8P,QAAQrP,IAAe,EAAAqM,kBAAkB9M,EAAOS,OAEnGwQ,UAAW,CAAC9C,GAASC,cACnB,MAAM8C,EAAY/C,EAAMhZ,OAAOub,MAAM1X,GAAU,EAAAwT,UAAUxT,EAAOoV,KAChE,GAAI8C,EAAW,CACb,MAAMf,EAAUe,EAAUlR,MAAMkR,EAAUlR,MAAMhC,OAAS,GACrDmS,IAASA,EAAQvO,QAAS,KAGlCuP,WAAY,CAAChD,GAASC,cACpB,MAAM8C,EAAY/C,EAAMhZ,OAAOub,MAAM1X,GAAU,EAAAwT,UAAUxT,EAAOoV,EAAQpV,SACxE,GAAIkY,EAAW,CACbA,EAAUtU,UAAYwR,EAAQ3N,UAC9B,MAAM2Q,EAAWF,EAAUlR,MAAM0Q,MAAMjQ,GAAc,EAAAkM,SAASlM,EAAW2N,EAAQ3N,aAC7E2Q,IAAUA,EAASxa,UAAW,KAGtCya,aAAelD,IACb,MAAM+C,EAAY/C,EAAMhZ,OAAOub,MAAM1X,GAA6B,MAAnBA,EAAM4D,YACrD,GAAIsU,EAAW,CACbA,EAAUtU,UAAY,KACtB,MAAM0U,EAAeJ,EAAUlR,MAAM0Q,MAAMjQ,GAAcA,EAAU7J,WAC/D0a,IAAcA,EAAa1a,UAAW,MAIhDyX,cAAgBC,GACdA,EAAQC,QAAQ,EAAAlS,YAAY,CAAC8R,GAASC,cACpCD,EAAMhZ,OAASgZ,EAAMhZ,OAAO4D,KAAKC,IAC/B,OAAQA,EAAM5E,MACZ,KAAK,EAAA+E,UAAU2P,WACf,KAAK,EAAA3P,UAAUC,MACb,OAAO,OAAP,wBAAYJ,GAAK,CAAEgH,MAAO,KAC5B,KAAK,EAAA7G,UAAUE,MACb,OAAO,OAAP,wBAAYL,GAAK,CAAEgH,MAAOoO,EAAQpO,MAAMC,MAAM,EAAG,IAAIlH,KAAK4I,IAAS,CAAGA,OAAMC,QAAQ,QACtF,KAAK,EAAAzI,UAAU4P,QACb,OAAO,OAAP,wBACK/P,GAAK,CACRgH,MAAOoO,EAAQpO,MACZC,MAAM,GAAK,EAAAoM,eAAerT,EAAME,OAAQ,GAAK,EAAAmT,eAAerT,EAAME,OAASF,EAAME,MAAQ,GACzFH,KAAI,CAAC4I,EAAMzI,EAAOqY,KAAM,CAAG5P,OAAMC,OAAQ2P,EAAEvT,SAAW9E,EAAQ,iBAOlE,EAAsD4X,EAAYjC,QAAhE,EAAAsC,WAAU,aAAE,EAAAE,aAAY,eAAE,EAAAJ,UAAS,YAAE,EAAAvC,WAAU,aAEjD,EAAA8C,UAAY,CAACrK,EAAayH,EAAW6C,IAChD,EAAA/C,WAAW,CACTvH,OACAyH,KACA5O,MAAOmH,EAAKnH,MAAMC,MAAMkH,EAAKnH,MAAM0R,WAAW/P,GAAS8P,GAAa,EAAA9E,SAAShL,EAAM8P,MACnF7P,QAAQ,IAGC,EAAA+P,eAAiB,EAAGtY,QAAOD,WACtC,EAAAsV,WAAW,CAAEvH,KAAM9N,EAAOuV,GAAIxV,EAAO4G,MAAO3G,EAAM2G,MAAMC,OAAO,GAAG2R,UAAWhQ,QAAQ,IAE1E,EAAAiQ,aAAe,EAAGxY,QAAOD,WACpC,EAAAsV,WAAW,CAAEvH,KAAM/N,EAAOwV,GAAIvV,EAAO2G,MAAO5G,EAAM4G,MAAMC,MAAM,GAAG2R,UAAWhQ,QAAQ,IAEtF,UAAe,EAAAoN,SAAS8B,EAAY7B,U,uKC9GpC,eACA,SACA,OAGA,SACA,SACA,SAYA,SACA,SAEa,EAAA9a,QAAWA,GACtB,EAAAS,eAAe,CAAEb,UAAWoM,KAAKE,MAAsB,IAAhBF,KAAKoM,UAAkBpY,YAEnD,EAAAJ,UAAaA,GACxB,EAAAa,eAAe,CAAEb,UAAwB,MAAbA,EAAoBoM,KAAKE,MAAsB,IAAhBF,KAAKoM,UAAmBxY,IAIxE,EAAAa,eAAiB,EAAGT,UAASJ,YAAWQ,cAAsC,CAACI,EAAUmd,KACpG,MAAM5d,EAAsB,MAAbH,EAAoB,EAAA8B,UAAUic,KAAc/d,EACrD4X,EAAyB,MAAXxX,EAAkB,EAAA2K,QAAQgT,KAAc3d,EACtDK,EAAoB,MAAZD,EAAmB,EAAAmB,SAASoc,KAAcvd,EAElDwd,EAAiB7K,MAAMC,KAAK,EAAAR,OAC5B3G,EAAgB,GAEhBgS,EAAQ,EAAA9F,IAAIhY,GAElB,IAAK,IAAImV,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC9B,MAAMnQ,EAAQ8Y,EAAM,EAAGD,EAAe/T,SAC/B2D,GAAQoQ,EAAeE,OAAO/Y,EAAO,GAC5C8G,EAAMoD,KAAKzB,GAGbhN,EAAS,EAAA0H,WAAW,CAAEsP,cAAa3L,QAAO9L,SAAQM,YAGvC,EAAAkD,aAAe,IAAgB,CAAC/C,EAAUmd,K,QACrD,IAAII,EACJ,KAAQA,EAAU,EAAA9B,uBAAuB0B,MAAe,EAAA7B,cAAc6B,MACvC,QAAzB,EAAiB,QAAjB,EAAAI,EAAQzR,iBAAS,eAAEmB,cAAM,SAC3BjN,EAASwd,EAA0BD,IAEnCvd,EAASyd,EAA8BF,KAK7C,MAAMC,EAA6BvV,GAAwCjI,IACxD,MAAbiI,IACJjI,EAAS,EAAA0d,cACT1d,EAAS,EAAAoa,eAAe,EAAAtD,UAAUM,aAClCpX,EAAS,EAAAsc,UAAUrU,EAAU5D,UAGzBoZ,EAAiCxV,GAAuC,CAACjI,EAAUmd,KACvF,MAAMhJ,EAAalM,EAAU6D,WAAa,EAAA+P,mBAAmBsB,IAAYlV,EAAU6D,WAC/EqI,GAAclM,EAAU6D,YAC1B9L,EAAS,EAAA0c,gBACT1c,EAAS,EAAA0d,cACLzV,EAAU5D,MAAM5E,OAAS,EAAA+E,UAAUC,OAAOzE,EAAS,EAAAoa,eAAe,EAAAtD,UAAUK,oBAC5ElP,EAAU5D,MAAM5E,OAAS,EAAA+E,UAAU4P,SAASpU,EAAS,EAAAoa,eAAe,EAAAtD,UAAUI,sBAClFlX,EAAS,EAAA6c,UAAU5U,EAAU5D,MAAO8P,EAAYlM,EAAU6D,cAIjD,EAAAC,UAAa4R,GAA2C,CAAC3d,EAAUmd,KAC9E,MAAM,UAAErR,EAAS,MAAEzH,GAAUsZ,EAC7B,GAAiB,MAAb7R,GAAqBA,EAAU7J,SAAU,OAAOjC,EAAS,EAAA0c,gBAE7D,MAAMzU,EAAY,EAAAgU,aAAakB,KAC/B,GAAiB,MAAblV,GAAqB6D,IAAcA,EAAUmB,OAAQ,OAAOjN,EAAS,EAAAwc,WAAW,CAAEnY,QAAOyH,eAE7F,GAAIzH,EAAM5E,OAAS,EAAA+E,UAAU2P,YAAclM,EACzCjI,EAASyd,EAA8BxV,SAmBzC,GAfI5D,EAAM5E,OAAS,EAAA+E,UAAU4P,UACV,MAAbnM,GAAqB6D,GAAaA,EAAUmB,SAC9CjN,EAAS,EAAA0d,cACT1d,EAAS,EAAAoa,eAAe,EAAAtD,UAAUM,aAClCpX,EAAS,EAAAsc,UAAUjY,KAEjB4D,GAAaA,EAAU6D,WAAa,EAAAmN,mBAAmBhR,EAAU6D,UAAWA,KAC9E9L,EAAS,EAAA0c,gBACT1c,EAAS,EAAA0d,cACLzV,EAAU5D,MAAM5E,OAAS,EAAA+E,UAAUC,OAAOzE,EAAS,EAAAoa,eAAe,EAAAtD,UAAUO,iBAC5EpP,EAAU5D,MAAM5E,OAAS,EAAA+E,UAAU2P,YAAYnU,EAAS,EAAAoa,eAAe,EAAAtD,UAAUQ,sBACrFtX,EAAS,EAAA6c,UAAU5U,EAAU5D,MAAOA,EAAO4D,EAAU6D,cAIrDzH,EAAM5E,OAAS,EAAA+E,UAAUE,MAAO,CAClC,GAAI,EAAAwX,mBAAmBiB,KAAa,OAChClV,GAAWjI,EAAS,EAAA0c,gBACxB,MAAMjY,EAAQ,EAAAmX,SAASuB,KACjBzY,EAAQ,EAAAiX,SAASwB,KACvBnd,EAAS,EAAA0d,cACLhZ,EAAM2G,MAAMhC,OAAS,EACvBrJ,EAAS,EAAAgd,eAAe,CAAEtY,QAAOD,YAEjCzE,EAAS,EAAAkd,aAAa,CAAExY,QAAOD,WAC/BzE,EAAS,EAAAma,qBAKF,EAAAtO,gBAAmB8R,GAA4C3d,IAC1E,MAAM,MAAEqE,EAAK,UAAEyH,GAAc6R,EAE3BtZ,EAAM5E,OAAS,EAAA+E,UAAU2P,YACzB9P,EAAM5E,OAAS,EAAA+E,UAAUE,OACZ,MAAboH,GACkB,MAAlBA,EAAUkB,MAKZhN,EAASyd,EAA8B,CAAEpZ,QAAOyH,iB,mICpIlD,eASa,EAAAzG,QAAU,EAAA0V,aAAa,WACvB,EAAAzX,KAAO,EAAAyX,aAAa,QACpB,EAAA1X,KAAO,EAAA0X,aAAa,QACpB,EAAA2C,WAAa,EAAA3C,aAAa,cAE1B,EAAAV,SAAoCC,IAC/C,MAAMjB,EAA2B,CAC/BuE,KAAM,GACN3C,QAASX,OAAQ,EAAQ,IACzBuD,OAAQ,IAGV,MAAO,CAACrE,EAAQH,EAAcS,KAC5B,MAAM,KAAE8D,EAAI,QAAE3C,EAAO,OAAE4C,GAAWrE,EAElC,GAAI,EAAAlW,KAAK0W,MAAMF,GAAS,CACtB,MAAMgE,EAAWF,EAAKA,EAAKvU,OAAS,GACpC,IAAKyU,EACH,OAAOtE,EAIT,MAAO,CACLoE,KAFcA,EAAKtS,MAAM,EAAGsS,EAAKvU,OAAS,GAG1C4R,QAAS6C,EACTD,OAAQ,CAAC5C,KAAY4C,IAIzB,GAAI,EAAAxa,KAAK2W,MAAMF,GAAS,CACtB,MAAMiE,EAAOF,EAAO,GACpB,IAAKE,EACH,OAAOvE,EAGT,MAAMwE,EAAYH,EAAOvS,MAAM,GAC/B,MAAO,CACLsS,KAAM,IAAIA,EAAM3C,GAChBA,QAAS8C,EACTF,OAAQG,GAIZ,MAAMC,EAAa3D,EAAQW,EAASnB,GAEpC,OAAI,EAAAzU,QAAQ2U,MAAMF,GACT,CACL8D,KAAM,GACN3C,QAASgD,EACTJ,OAAQ,IAIR,EAAAH,WAAW1D,MAAMF,GACZ,CACL8D,KAAM,IAAIA,EAAM3C,GAChBA,QAASgD,EACTJ,OAAQ,IAIR5C,IAAYgD,EACPzE,EAGF,CACLoE,OACA3C,QAASgD,EACTJ,cC5EFK,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAanf,QAGrB,IAAID,EAASif,EAAyBE,GAAY,CAGjDlf,QAAS,IAOV,OAHAqf,EAAoBH,GAAUI,KAAKvf,EAAOC,QAASD,EAAQA,EAAOC,QAASif,GAGpElf,EAAOC,QAIfif,EAAoBM,EAAIF,E5BzBpBvf,EAAW,GACfmf,EAAoBO,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAenU,IACnB,IAAS8J,EAAI,EAAGA,EAAI1V,EAASqK,OAAQqL,IAAK,CAGzC,IAFA,IAAKkK,EAAUC,EAAIC,GAAY9f,EAAS0V,GACpCsK,GAAY,EACPC,EAAI,EAAGA,EAAIL,EAASvV,OAAQ4V,MACpB,EAAXH,GAAsBC,GAAgBD,IAAa5I,OAAO1P,KAAK2X,EAAoBO,GAAGrD,OAAO/W,GAAS6Z,EAAoBO,EAAEpa,GAAKsa,EAASK,MAC9IL,EAAStB,OAAO2B,IAAK,IAErBD,GAAY,EACTF,EAAWC,IAAcA,EAAeD,IAG1CE,IACFhgB,EAASse,OAAO5I,IAAK,GACrBiK,EAASE,KAGX,OAAOF,EAtBNG,EAAWA,GAAY,EACvB,IAAI,IAAIpK,EAAI1V,EAASqK,OAAQqL,EAAI,GAAK1V,EAAS0V,EAAI,GAAG,GAAKoK,EAAUpK,IAAK1V,EAAS0V,GAAK1V,EAAS0V,EAAI,GACrG1V,EAAS0V,GAAK,CAACkK,EAAUC,EAAIC,I6BJ/BX,EAAoBe,EAAKjgB,IACxB,IAAIkgB,EAASlgB,GAAUA,EAAOmgB,WAC7B,IAAOngB,EAAiB,QACxB,IAAM,EAEP,OADAkf,EAAoBkB,EAAEF,EAAQ,CAAEvC,EAAGuC,IAC5BA,GCLRhB,EAAoBkB,EAAI,CAACngB,EAASogB,KACjC,IAAI,IAAIhb,KAAOgb,EACXnB,EAAoBoB,EAAED,EAAYhb,KAAS6Z,EAAoBoB,EAAErgB,EAASoF,IAC5E4R,OAAOsJ,eAAetgB,EAASoF,EAAK,CAAEmb,YAAY,EAAM9Y,IAAK2Y,EAAWhb,MCJ3E6Z,EAAoBuB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOjd,GACR,GAAsB,iBAAXyF,OAAqB,OAAOA,QALjB,GCAxB8V,EAAoBoB,EAAI,CAACO,EAAK7U,IAAUiL,OAAO6J,UAAUC,eAAexB,KAAKsB,EAAK7U,GCClFkT,EAAoB8B,EAAK/gB,IACH,oBAAXghB,QAA0BA,OAAOC,aAC1CjK,OAAOsJ,eAAetgB,EAASghB,OAAOC,YAAa,CAAExY,MAAO,WAE7DuO,OAAOsJ,eAAetgB,EAAS,aAAc,CAAEyI,OAAO,K,MCAvD,IAAIyY,EAAkB,CACrBC,IAAK,GAaNlC,EAAoBO,EAAEO,EAAKqB,GAA0C,IAA7BF,EAAgBE,GAGxD,IAAIC,EAAuB,CAACC,EAA4BtO,KACvD,IAGIkM,EAAUkC,GAHT1B,EAAU6B,EAAaC,GAAWxO,EAGhBwC,EAAI,EAC3B,IAAI0J,KAAYqC,EACZtC,EAAoBoB,EAAEkB,EAAarC,KACrCD,EAAoBM,EAAEL,GAAYqC,EAAYrC,IAGhD,GAAGsC,EAAS,IAAI/B,EAAS+B,EAAQvC,GAEjC,IADGqC,GAA4BA,EAA2BtO,GACrDwC,EAAIkK,EAASvV,OAAQqL,IACzB4L,EAAU1B,EAASlK,GAChByJ,EAAoBoB,EAAEa,EAAiBE,IAAYF,EAAgBE,IACrEF,EAAgBE,GAAS,KAE1BF,EAAgBxB,EAASlK,IAAM,EAEhC,OAAOyJ,EAAoBO,EAAEC,IAG1BgC,EAAqBC,KAA2B,qBAAIA,KAA2B,sBAAK,GACxFD,EAAmB1W,QAAQsW,EAAqBM,KAAK,KAAM,IAC3DF,EAAmBlS,KAAO8R,EAAqBM,KAAK,KAAMF,EAAmBlS,KAAKoS,KAAKF,K,GC3CvF,IAAIG,EAAsB3C,EAAoBO,OAAEJ,EAAW,CAAC,MAAM,IAAOH,EAAoB,MAC7F2C,EAAsB3C,EAAoBO,EAAEoC,I","file":"klondike.80b6f199d176e83fd659.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"XwVLUrO3NoD_AUivFS56j\",\"fireworks\":\"_3nvOdthckw9G8z05Xiav92\",\"game\":\"_1VoMUOf1IbpEJjbCNdZsU9\",\"button\":\"OktEGbV1DqgG2_sQ16MRl\",\"label\":\"_1HEad0y2SdUmqeXvzo2hG6\",\"optionsMask\":\"_27aor1u7u5hz8M4_9poVe8\",\"optionsModal\":\"_3gKGSm81FK9xUP7Tx5P_-n\"};","import * as React from 'react'\n\nimport { Provider } from 'react-redux'\n\nimport Container from './Container'\nimport { retrieve, PersistanceType } from '../lib/Persist'\nimport { ScoringType } from '../lib/Scoring'\nimport { ColorSchemeType } from '../drawing/ColorScheme'\nimport store from '../redux'\nimport { initializeGame } from '../redux/thunks'\n\nconst App: React.FC = () => {\n  const newNumber = retrieve(PersistanceType.number, 0)\n  const newType = retrieve<ScoringType>(PersistanceType.type, ScoringType.regular)\n  const newTheme = retrieve<ColorSchemeType>(PersistanceType.theme, ColorSchemeType.dark)\n\n  store.dispatch(initializeGame({ newType, newNumber, newTheme }))\n\n  return (\n    <Provider store={store}>\n      <Container />\n    </Provider>\n  )\n}\n\nexport { App }\n\nexport default React.memo(App)\n","import * as React from 'react'\nimport { hot } from 'react-hot-loader/root'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { StackType } from '../lib/Card'\nimport { colorSchemes } from '../drawing/ColorScheme'\nimport { label, topBar, game, optionsMask, optionsModal, button } from '../css/index.css'\n\nimport FireworksComponent from './Fireworks'\nimport GameCanvas from './GameCanvas'\nimport StackElement from './StackElement'\nimport Options from './Options'\n\nimport { performMoves, newNumber } from '../redux/thunks'\nimport { undo, redo } from '../redux/undoable'\nimport { getOverDrawn, getShowing, getStacks, getTheme, getScore, getNumber } from '../redux/selectors'\n\nconst Container: React.FC = () => {\n  const dispatch = useDispatch()\n  const stacks = useSelector(getStacks)\n  const overDrawn = useSelector(getOverDrawn)\n  const showing = useSelector(getShowing)\n  const theme = useSelector(getTheme)\n  const score = useSelector(getScore)\n  const number = useSelector(getNumber)\n\n  const cssVars = React.useMemo(() => {\n    const colors = colorSchemes[theme]\n    return {\n      '--background': colors.background,\n      '--color': colors.color,\n      '--emptyColor': colors.emptyColor,\n      '--faceUp': colors.faceUp,\n      '--hiddenColor1': colors.hiddenColor1,\n      '--hiddenColor2': colors.hiddenColor2,\n      '--buttonBorder': colors.buttonBorder,\n      '--cardBorder': colors.cardBorder,\n      '--black': colors.black,\n      '--red': colors.red,\n      '--selected': colors.selected,\n      '--errorColor': colors.errorColor,\n    }\n  }, [theme])\n\n  const [showOptions, setShowOptions] = React.useState(false)\n\n  const handleCloseOptions = React.useCallback(() => setShowOptions(false), [])\n  const handleShowOptions = React.useCallback(() => setShowOptions(true), [])\n  const handleNewGame = React.useCallback(() => dispatch(newNumber()), [dispatch])\n\n  React.useEffect(() => {\n    const handleMouseDown = (e: MouseEvent) => {\n      if (e.button !== 1) return\n      e.preventDefault()\n      dispatch(performMoves())\n    }\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.keyCode === 113) dispatch(newNumber())\n      if (e.keyCode === 27) setShowOptions((prev) => !prev)\n      if (e.keyCode === 90) {\n        if (e.ctrlKey && e.shiftKey) {\n          dispatch(redo())\n        } else if (e.ctrlKey) {\n          dispatch(undo())\n        }\n      }\n    }\n    document.addEventListener('mousedown', handleMouseDown)\n    document.addEventListener('keydown', handleKeyDown)\n    return () => {\n      document.removeEventListener('mousedown', handleMouseDown)\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [dispatch])\n\n  return (\n    <div style={cssVars}>\n      <FireworksComponent />\n      {showOptions && (\n        <>\n          <Options onClose={handleCloseOptions} className={optionsModal} />\n          <div onClick={handleCloseOptions} className={optionsMask} />\n        </>\n      )}\n      <div className={topBar}>\n        <div>\n          <button tabIndex={1} onClick={handleNewGame} className={button}>\n            🔄︎\n          </button>\n          <span className={label}>{number}</span>\n        </div>\n        <div>\n          <span className={label}>{score}</span>\n          <button tabIndex={1} onClick={handleShowOptions} className={button}>\n            ☰︎\n          </button>\n        </div>\n      </div>\n      <GameCanvas className={game}>\n        {stacks.map((stack) => (\n          <StackElement\n            key={`${stack.type}-${stack.index}`}\n            stack={stack}\n            {...(stack.type === StackType.waste && { showing })}\n            {...(stack.type === StackType.stock && { overDrawn })}\n          />\n        ))}\n      </GameCanvas>\n    </div>\n  )\n}\n\nexport default hot(React.memo(Container))\n","import * as React from 'react'\nimport { useSelector } from 'react-redux'\nimport * as FireworksCanvas from 'fireworks-canvas'\nimport { getGameWon } from '../redux/selectors'\nimport { fireworks } from '../css/index.css'\n\nconst Fireworks: React.FC = () => {\n  const ref = React.useRef<HTMLDivElement>(null)\n  const fireworksObj = React.useRef<FireworksCanvas>()\n  const active = useSelector(getGameWon)\n  const display = active ? '' : 'none'\n\n  React.useEffect(() => {\n    if (ref.current == null) return\n    fireworksObj.current = new FireworksCanvas(ref.current)\n\n    const handleDocumentKeyDown = (ev: KeyboardEvent) => {\n      if (ev.keyCode === 27) fireworksObj.current?.stop()\n    }\n\n    document.addEventListener('keydown', handleDocumentKeyDown)\n\n    return () => {\n      fireworksObj.current?.destroy()\n    }\n  }, [ref, active])\n\n  React.useEffect(() => {\n    if (active) {\n      fireworksObj.current?.stop()\n    } else {\n      fireworksObj.current?.start()\n    }\n  }, [active])\n\n  return <div className={fireworks} style={{ display }} ref={ref} />\n}\n\nexport default React.memo(Fireworks)\n","import * as React from 'react'\nimport { Drawable, DrawingContext, Clickable, Handler } from '../drawing/Common'\nimport { colorSchemes } from '../drawing/ColorScheme'\nimport { initialize } from '../drawing/Common'\nimport { useCanvasSize } from '../hooks/useCanvasSize'\nimport { useSelector } from 'react-redux'\nimport { getTheme } from '../redux/selectors'\n\nexport type GameContext = {\n  context: DrawingContext\n  add: (thing: Drawable, events: Clickable) => void\n  remove: (path: Path2D) => void\n}\n\nexport const GameCtx = React.createContext<GameContext | null>(null)\n\nconst intersect = (evt: React.MouseEvent<HTMLCanvasElement>, pointsRef: Map<Path2D, Drawable>) => {\n  const { nativeEvent: e } = evt\n  const canvas = e.target as HTMLCanvasElement\n  const point = { x: e.offsetX, y: e.offsetY }\n  const ctx = canvas.getContext('2d')\n  for (const path of pointsRef.keys())\n    if (ctx?.isPointInPath(path, point.x, point.y)) {\n      const thing = pointsRef.get(path)\n      if (thing == null) return\n      return { thing, point }\n    }\n}\n\nconst GameCanvas: React.FC<React.HTMLAttributes<HTMLCanvasElement>> = ({ children, ...rest }) => {\n  const pointsRef = React.useRef<Map<Path2D, Drawable>>(new Map())\n  const clickHandlers = React.useRef<Map<Path2D, Handler>>(new Map())\n  const doubleClickHandlers = React.useRef<Map<Path2D, Handler>>(new Map())\n\n  const { ctx, width, height, handleCanvasRef } = useCanvasSize()\n  const colorSchemeType = useSelector(getTheme)\n  const colorScheme = colorSchemes[colorSchemeType]\n\n  const context = React.useMemo<DrawingContext | null>(() => {\n    if (!width || !height || !ctx) return null\n    return { ctx, width, height, colorSchemeType, colorScheme }\n  }, [ctx, width, height, colorSchemeType, colorScheme])\n\n  React.useLayoutEffect(() => (context && initialize(context)) || void 0, [context])\n\n  const value = React.useMemo<GameContext | null>(\n    () =>\n      context && {\n        context,\n        add(thing, events) {\n          pointsRef.current.set(thing.path, thing)\n          if (events.onClick) clickHandlers.current.set(thing.path, events.onClick)\n          if (events.onDoubleClick) doubleClickHandlers.current.set(thing.path, events.onDoubleClick)\n        },\n        remove(path: Path2D) {\n          pointsRef.current.delete(path)\n          clickHandlers.current.delete(path)\n          doubleClickHandlers.current.delete(path)\n        },\n      },\n    [context],\n  )\n\n  const handleCanvasDoubleClick = React.useCallback((evt: React.MouseEvent<HTMLCanvasElement>) => {\n    const selection = intersect(evt, pointsRef.current)\n    if (selection) {\n      const { thing, point } = selection\n      const event = doubleClickHandlers.current.get(thing.path)\n      if (event) event(thing, point)\n    }\n  }, [])\n\n  const handleCanvasClick = React.useCallback((evt: React.MouseEvent<HTMLCanvasElement>) => {\n    const selection = intersect(evt, pointsRef.current)\n    if (selection) {\n      const { thing, point } = selection\n      const event = clickHandlers.current.get(thing.path)\n      if (event) event(thing, point)\n    }\n  }, [])\n\n  return (\n    <>\n      <canvas\n        id=\"canvas\"\n        ref={handleCanvasRef}\n        width={window.innerWidth}\n        height={window.innerHeight}\n        onClick={handleCanvasClick}\n        onDoubleClick={handleCanvasDoubleClick}\n        {...rest}\n      />\n      <GameCtx.Provider value={value}>{children}</GameCtx.Provider>\n    </>\n  )\n}\n\nexport { GameCanvas }\nexport default React.memo(GameCanvas)\n","import * as React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ScoringType } from '../lib/Scoring'\nimport { ColorSchemeType } from '../drawing/ColorScheme'\nimport { getType, getTheme, getNumber } from '../redux/selectors'\nimport { changeTheme } from '../redux/game-state'\nimport { newNumber, newType } from '../redux/thunks'\n\nconst submitCallbacks: Set<() => void> = new Set()\nexport const OptionCtx = React.createContext(submitCallbacks)\n\ntype OptionType = React.HTMLAttributes<HTMLFieldSetElement> & {\n  name: string\n  label: string\n  value: unknown\n  onChange: (arg0: unknown) => void\n  options?: [string, unknown][]\n}\n\nconst Option: React.FC<OptionType> = React.memo(({ value, onChange, name, options = [], label, ...props }) => {\n  const [newValue, setValue] = React.useState(value)\n\n  const handleChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value), [])\n\n  const handleSubmit = React.useCallback(() => {\n    if (newValue !== value) onChange(newValue)\n  }, [value, newValue, onChange])\n\n  React.useEffect(() => {\n    submitCallbacks.add(handleSubmit)\n    return () => {\n      submitCallbacks.delete(handleSubmit)\n    }\n  })\n\n  return (\n    <fieldset {...props}>\n      <legend>{label}</legend>\n      {options.length === 0 ? (\n        <div>\n          <label htmlFor={`option-${name}`} style={{ display: 'none' }}>\n            {label}\n          </label>\n          <input type=\"text\" id={`option-${name}`} value={String(newValue)} onChange={handleChange} />\n        </div>\n      ) : (\n        options.map(([label, option]) => (\n          <div key={label.toString()}>\n            <input\n              type=\"radio\"\n              id={`${name}-${label}`}\n              checked={newValue === option}\n              value={String(option)}\n              onChange={handleChange}\n            />\n            <label htmlFor={`${name}-${label}`}>{label}</label>\n          </div>\n        ))\n      )}\n    </fieldset>\n  )\n})\n\nOption.displayName = 'Option'\n\nconst typeOptions: [string, ScoringType][] = [\n  ['Regular', ScoringType.regular],\n  ['Vegas', ScoringType.vegas],\n]\n\nconst colorSchemeOptions: [string, ColorSchemeType][] = [\n  ['Dark', ColorSchemeType.dark],\n  ['Light', ColorSchemeType.light],\n]\n\ntype OptionContainerProps = { onClose(): void } & React.HTMLAttributes<HTMLFormElement>\n\nconst Options: React.FC<OptionContainerProps> = React.memo(({ onClose, ...props }) => {\n  const handleSubmit = React.useCallback(\n    (e: React.FormEvent) => {\n      e.preventDefault()\n      submitCallbacks.forEach((cb) => cb())\n      onClose()\n    },\n    [onClose],\n  )\n\n  const dispatch = useDispatch()\n  const type = useSelector(getType)\n  const theme = useSelector(getTheme)\n  const gameNumber = useSelector(getNumber)\n\n  const handleNewNumber = React.useCallback((number) => dispatch(newNumber(parseInt(number, 10))), [dispatch])\n  const handleNewType = React.useCallback((type) => dispatch(newType(type)), [dispatch])\n  const handleNewTheme = React.useCallback((theme) => dispatch(changeTheme(theme)), [dispatch])\n\n  return (\n    <form onSubmit={handleSubmit} {...props}>\n      <Option name=\"game-number\" label=\"Game Number\" value={gameNumber} onChange={handleNewNumber} />\n      <Option name=\"type\" label=\"Game Type\" value={type} onChange={handleNewType} options={typeOptions} />\n      <Option name=\"theme\" label=\"Theme\" value={theme} onChange={handleNewTheme} options={colorSchemeOptions} />\n      <button type=\"submit\">Save</button>\n    </form>\n  )\n})\n\nOptions.displayName = 'OptionContainer'\n\nexport { Options }\nexport default React.memo(Options)\n","import * as React from 'react'\nimport { GameCtx } from './GameCanvas'\nimport { drawStack, StackDrawingContext, getStackDrawingContext } from '../drawing/Stack'\nimport { Stack, StackDirection, StackType } from '../lib/Card'\nimport { useDispatch } from 'react-redux'\nimport { clickCard, doubleClickCard } from '../redux/thunks'\nimport { Point, Drawable } from '../drawing/Common'\nimport { useDrawing } from '../hooks/useDrawing'\nimport { useMemo } from 'react'\n\nconst StackElement: React.FC<{\n  stack: Stack\n  overDrawn?: boolean\n  showing?: number\n}> = ({ stack, overDrawn = false, showing = Infinity }) => {\n  const dispatch = useDispatch()\n  const gameContext = React.useContext(GameCtx)\n\n  const drawingOpts = useMemo<StackDrawingContext | null>(\n    () => gameContext && getStackDrawingContext(gameContext.context, stack, { overDrawn, showing }),\n    [gameContext, stack, overDrawn, showing],\n  )\n\n  const onDoubleClick = React.useCallback(\n    (thing: Drawable, point: Point) => {\n      if (gameContext == null || drawingOpts == null) return\n      const prop = stack.direction === StackDirection.horizontal ? 'x' : 'y'\n      const cards = stack.cards.slice(-drawingOpts.max)\n      const index = Math.min(cards.length - 1, Math.floor((point[prop] - drawingOpts.box[prop]) / drawingOpts.space))\n      if (stack.type !== StackType.waste || index === cards.length - 1)\n        dispatch(doubleClickCard({ stack, stackCard: cards[index] }))\n    },\n    [dispatch, gameContext, drawingOpts, stack],\n  )\n\n  const onClick = React.useCallback(\n    (thing: Drawable, point: Point) => {\n      if (gameContext == null || drawingOpts == null) return\n      const prop = stack.direction === StackDirection.horizontal ? 'x' : 'y'\n      const cards = stack.cards.slice(-drawingOpts.max)\n      const index = Math.min(cards.length - 1, Math.floor((point[prop] - drawingOpts.box[prop]) / drawingOpts.space))\n      if (stack.type !== StackType.waste || index === cards.length - 1)\n        dispatch(clickCard({ stack, stackCard: cards[index] }))\n    },\n    [dispatch, gameContext, drawingOpts, stack],\n  )\n\n  useDrawing((context) => drawStack(context, drawingOpts), { onClick, onDoubleClick })\n\n  return null\n}\n\nexport { StackElement }\nexport default React.memo(StackElement)\n","import { ValueType, SuitType, StackCard } from '../lib/Card'\nimport { Box, DrawingContext } from './Common'\nimport { isBig, isRed } from '../lib/util'\nimport { search, measureHeight } from './FontSize'\n\nimport { getCardDimensions, getVerticalMarginSize, getHorizontalMarginSize } from './Layout'\n\ntype Glyph = {\n  glyph: ValueType | SuitType\n  x: number\n  y: number\n  rotated: boolean\n  textAlign: CanvasTextAlign\n  textBaseline: CanvasTextBaseline\n  font: string\n}\n\nexport const getBoxPath = ({ x, y, width, height }: Box, radius = 10, smaller = 0) => {\n  const path = new Path2D()\n\n  const dx = x + smaller\n  const dy = y + smaller\n  const dw = width - smaller * 2\n  const dh = height - smaller * 2\n\n  path.moveTo(dx + radius, dy)\n  path.lineTo(dx + dw - radius, dy)\n  path.quadraticCurveTo(dx + dw, dy, dx + dw, dy + radius)\n  path.lineTo(dx + dw, dy + dh - radius)\n  path.quadraticCurveTo(dx + dw, dy + dh, dx + dw - radius, dy + dh)\n  path.lineTo(dx + radius, dy + dh)\n  path.quadraticCurveTo(dx, dy + dh, dx, dy + dh - radius)\n  path.lineTo(dx, dy + radius)\n  path.quadraticCurveTo(dx, dy, dx + radius, dy)\n  path.closePath()\n  return path\n}\n\nenum FontSizeType {\n  Regular,\n  Corner,\n}\n\nexport const getGlyphLocations = (context: DrawingContext, { card, hidden }: StackCard): Glyph[] => {\n  if (hidden) return []\n\n  const { ctx } = context\n  const { width: cardWidth, height: cardHeight } = getCardDimensions(context)\n  const gutterHeight = getVerticalMarginSize(context)\n  const gutterWidth = getHorizontalMarginSize(context)\n\n  const cornerWidth = Math.floor(cardWidth * 0.2)\n  const figureOutFontSize = (type: FontSizeType) =>\n    search(\n      ctx,\n      (width: number, height: number) =>\n        type === FontSizeType.Corner\n          ? width > cornerWidth\n          : isBig(card)\n          ? width > cardWidth - Math.floor(cardWidth / 5) * 2\n          : width > Math.floor(cardWidth / 5) && height > Math.floor(cardHeight / 20),\n      type === FontSizeType.Corner ? '10' : '\\u2665',\n    )\n\n  const fontSizes: { [key in FontSizeType]: string } = {\n    [FontSizeType.Corner]: figureOutFontSize(FontSizeType.Corner),\n    [FontSizeType.Regular]: figureOutFontSize(FontSizeType.Regular),\n  }\n\n  // 20% of width is reserved for corner pieces\n  // y of suit is margin + height of value + margin\n  const cornerHeight = measureHeight(ctx, fontSizes[FontSizeType.Corner])\n\n  const cornerValueX = gutterWidth / 2\n  const cornerValueY = gutterHeight / 2\n  const cornerSuitX = gutterWidth / 2\n  const cornerSuitY = gutterWidth / 2 + cornerHeight\n\n  const { suit, value } = card\n\n  // top-left, bottom-right glyphs\n  const positions = [\n    { x: cornerValueX, y: cornerValueY, glyph: value },\n    { x: cornerSuitX, y: cornerSuitY, glyph: suit },\n  ].reduce<Glyph[]>((memo, glyph) => {\n    memo.push(\n      {\n        ...glyph,\n        rotated: false,\n        textAlign: 'left',\n        textBaseline: 'top',\n        font: fontSizes[FontSizeType.Corner],\n      },\n      {\n        ...glyph,\n        rotated: true,\n        textAlign: 'left',\n        textBaseline: 'top',\n        font: fontSizes[FontSizeType.Corner],\n      },\n    )\n    return memo\n  }, [])\n\n  type ypos = 0 | 1 | 2 | 3 | 4 | 5 | 6\n\n  type xpos = 0 | 1 | 2\n\n  const pos: { x: xpos; y: ypos }[] = []\n\n  if (\n    [\n      ValueType.ace,\n      ValueType.three,\n      ValueType.five,\n      ValueType.nine,\n      ValueType.jack,\n      ValueType.queen,\n      ValueType.king,\n    ].includes(value)\n  ) {\n    pos.push({ x: 1, y: 3 })\n  }\n\n  if ([ValueType.two, ValueType.three].includes(value)) {\n    pos.push({ x: 1, y: 0 }, { x: 1, y: 6 })\n  }\n\n  if (\n    [\n      ValueType.four,\n      ValueType.five,\n      ValueType.six,\n      ValueType.seven,\n      ValueType.eight,\n      ValueType.nine,\n      ValueType.ten,\n    ].includes(value)\n  ) {\n    pos.push({ x: 0, y: 0 }, { x: 2, y: 0 }, { x: 0, y: 6 }, { x: 2, y: 6 })\n  }\n\n  if ([ValueType.six, ValueType.seven, ValueType.eight].includes(value)) {\n    pos.push({ x: 0, y: 3 }, { x: 2, y: 3 })\n  }\n\n  if ([ValueType.seven, ValueType.ten, ValueType.eight].includes(value)) {\n    pos.push({ x: 1, y: 1 })\n  }\n\n  if ([ValueType.nine, ValueType.ten].includes(value)) {\n    pos.push({ x: 0, y: 2 }, { x: 2, y: 2 }, { x: 0, y: 4 }, { x: 2, y: 4 })\n  }\n\n  if ([ValueType.ten, ValueType.eight].includes(value)) {\n    pos.push({ x: 1, y: 5 })\n  }\n\n  const getTop = (y: ypos) => {\n    switch (y) {\n      case 0:\n      case 6:\n        return cardHeight * 0.2\n      case 1:\n      case 5:\n        return cardHeight * 0.3\n      case 2:\n      case 4:\n        return cardHeight * 0.4\n      case 3:\n        return cardHeight * 0.5\n    }\n  }\n\n  const getLeft = (x: xpos) => {\n    switch (x) {\n      case 0:\n        return cardWidth * 0.25\n      case 1:\n        return cardWidth * 0.5\n      case 2:\n        return cardWidth * 0.75\n    }\n  }\n\n  const getTextAlign = (x: xpos): CanvasTextAlign => {\n    switch (x) {\n      case 0:\n        return 'left'\n      case 1:\n        return 'center'\n      case 2:\n        return 'right'\n    }\n  }\n\n  pos.forEach(({ x, y }) => {\n    positions.push({\n      x: getLeft(x),\n      y: getTop(y),\n      glyph: suit,\n      textAlign: getTextAlign(x),\n      textBaseline: 'middle',\n      rotated: y > 3,\n      font: fontSizes[FontSizeType.Regular],\n    })\n  })\n\n  return positions\n}\n\nexport const getEmptyImageData = (context: DrawingContext) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardDimensions(context)\n  const box = { x: 0, y: 0, width, height }\n  ctx.clearRect(0, 0, width, height)\n  ctx.fillStyle = colorScheme.emptyColor\n  ctx.fillRect(box.x, box.y, box.width, box.height)\n  ctx.lineWidth = 0.5\n  ctx.strokeStyle = colorScheme.cardBorder\n  ctx.strokeRect(box.x, box.y, box.width, box.height)\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n\nexport const getHiddenImageData = (context: DrawingContext) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardDimensions(context)\n  const box = { x: 0, y: 0, width, height }\n\n  const tile = document.createElement('canvas')\n  const thickness = 25\n  tile.width = tile.height = thickness\n  const tileCtx = tile.getContext('2d') as CanvasRenderingContext2D\n  const gradient = tileCtx.createLinearGradient(0, 0, tile.width, tile.height)\n\n  gradient.addColorStop(0, colorScheme.hiddenColor1)\n  gradient.addColorStop(0.25, colorScheme.hiddenColor1)\n\n  gradient.addColorStop(0.25, colorScheme.hiddenColor2)\n  gradient.addColorStop(0.5, colorScheme.hiddenColor2)\n\n  gradient.addColorStop(0.5, colorScheme.hiddenColor1)\n  gradient.addColorStop(0.75, colorScheme.hiddenColor1)\n\n  gradient.addColorStop(0.75, colorScheme.hiddenColor2)\n  gradient.addColorStop(1, colorScheme.hiddenColor2)\n\n  tileCtx.fillStyle = gradient\n  tileCtx.fillRect(0, 0, thickness, thickness)\n\n  ctx.clearRect(box.x, box.y, box.width, box.height)\n  ctx.strokeStyle = colorScheme.cardBorder\n  ctx.lineWidth = 3\n  ctx.stroke(getBoxPath(box))\n  ctx.save()\n  ctx.clip(getBoxPath(box, 10))\n  ctx.fillStyle = ctx.createPattern(tile, 'repeat') as CanvasPattern\n  ctx.fillRect(box.x + 1, box.y + 1, box.width - 2, box.height - 2)\n  ctx.restore()\n\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n\nexport const getCardImageData = (context: DrawingContext, card: StackCard) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardDimensions(context)\n  const box = { x: 0, y: 0, width, height }\n\n  ctx.clearRect(box.x, box.y, box.width, box.height)\n  ctx.strokeStyle = colorScheme.cardBorder\n  ctx.lineWidth = 2\n  ctx.stroke(getBoxPath(box, 10))\n\n  ctx.fillStyle = card.selected ? colorScheme.selected : colorScheme.faceUp\n  ctx.fill(getBoxPath(box, 10, 0.5))\n\n  for (const glyph of getGlyphLocations(context, card)) {\n    ctx.fillStyle = isRed(card.card) ? colorScheme.red : colorScheme.black\n    ctx.textAlign = glyph.textAlign\n    ctx.textBaseline = glyph.textBaseline\n    ctx.font = glyph.font\n    if (glyph.rotated) {\n      ctx.save()\n      ctx.translate(width, height)\n      ctx.rotate(Math.PI)\n    }\n    ctx.fillText(glyph.glyph, glyph.x + box.x * (glyph.rotated ? -1 : 1), glyph.y + box.y * (glyph.rotated ? -1 : 1))\n    if (glyph.rotated) ctx.restore()\n  }\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n\nexport const getErrorImageData = (context: DrawingContext) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardDimensions(context)\n  const box = { x: 0, y: 0, width, height }\n  ctx.clearRect(box.x, box.y, box.width, box.height)\n  ctx.fillStyle = colorScheme.emptyColor\n  ctx.fill(getBoxPath(box))\n  ctx.font = '48px sans-serif'\n  ctx.textAlign = 'center'\n  ctx.textBaseline = 'middle'\n  ctx.fillStyle = colorScheme.errorColor\n  ctx.fillText('X', box.width / 2, box.height / 2)\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n","// add variables to `style` declaration\ndeclare module 'csstype' {\n  interface Properties {\n    '--background'?: string\n    '--emptyColor'?: string\n    '--faceUp'?: string\n    '--hiddenColor1'?: string\n    '--hiddenColor2'?: string\n    '--buttonBorder'?: string\n    '--cardBorder'?: string\n    '--black'?: string\n    '--red'?: string\n    '--selected'?: string\n    '--errorColor'?: string\n    '--labelColor'?: string\n  }\n}\n\nexport enum ColorSchemeType {\n  dark = 'dark',\n  light = 'light',\n}\n\nexport type ColorScheme = {\n  background: string\n  hiddenColor1: string\n  hiddenColor2: string\n  buttonBorder: string\n  cardBorder: string\n  faceUp: string\n  selected: string\n  red: string\n  black: string\n  emptyColor: string\n  errorColor: string\n  color: string\n}\n\nexport const colorSchemes: { [key in ColorSchemeType]: ColorScheme } = {\n  [ColorSchemeType.dark]: {\n    background: '#000',\n    color: '#fff',\n    emptyColor: '#060606',\n    faceUp: '#ddd',\n    hiddenColor1: '#404dac',\n    hiddenColor2: '#263278',\n    buttonBorder: '#ddd',\n    cardBorder: '#000',\n    black: '#505050',\n    red: '#f03a17',\n    selected: '#fff000',\n    errorColor: '#900',\n  },\n  [ColorSchemeType.light]: {\n    background: '#ffffff',\n    color: '#000',\n    emptyColor: '#f5f5f5',\n    faceUp: '#ddd',\n    hiddenColor1: '#606dbc',\n    hiddenColor2: '#465298',\n    buttonBorder: '#000',\n    cardBorder: '#000',\n    black: '#505050',\n    red: '#f03a17',\n    selected: '#fff000',\n    errorColor: 'red',\n  },\n}\n","import { Cards, StackCard } from '../lib/Card'\nimport { ColorScheme, ColorSchemeType } from './ColorScheme'\nimport { getErrorImageData, getEmptyImageData, getHiddenImageData, getCardImageData } from './Card'\nimport { getCardDimensions } from './Layout'\n\n// this is passed to all drawing routines. it includes :\n// the color they should draw,\n// the ctx to draw it on, and\n// the width/height of the canvas.\n\nexport type DrawingContext = {\n  ctx: CanvasRenderingContext2D\n  colorScheme: ColorScheme\n  colorSchemeType: ColorSchemeType\n} & Dimensions\n\nexport type Dimensions = { width: number; height: number }\n\nexport type Point = { x: number; y: number }\n\nexport type Box = Dimensions & Point\n\n// something that is drawable includes an x/y coords and a height/width\n// once removed, clearRect is with these values to clean it from the canvas\n// also, the click/double click handlers will inspect if point is in their path.\n\nexport type Drawable = { path: Path2D; box: Box }\n\nexport interface Handler {\n  (arg0: Drawable, arg1: Point): void\n}\n\nexport type Clickable = { onClick?: Handler; onDoubleClick?: Handler }\n\n// a cache of cards is kept and re-initialized when color scheme / window dimensions change\n// this is a map of a key identifying the stack card, and the raw pixel data to draw it.\n// the idea is this is all cached one time at the beginning and re-used\n\n// this uses a string with keys because it's actually a \"StackCard\" we're interested in\n// this includes the selected flag - the highlighted / non-highlighted state need to both be kept\n// while `Cards` is immutable singleton of all available cads, StackCards is not and\n// using a non-string key, we'll wind up with missing references not hitting the cache.\n\nexport const getKey = ({ card: { suit, value }, selected }: StackCard) =>\n  `${suit}_${value}_${(selected || false).toString()}`\n\nexport const cardCache: Map<string, ImageData> = new Map()\n\nlet c2: HTMLCanvasElement\n\nexport const initialize = (context: DrawingContext) => {\n  const { width, height } = getCardDimensions(context)\n  cardCache.set('hidden', getHiddenImageData(context))\n  cardCache.set('empty', getEmptyImageData(context))\n  cardCache.set('error', getErrorImageData(context))\n  Cards.forEach((card) => {\n    cardCache\n      .set(getKey({ card, selected: true }), getCardImageData(context, { card, selected: true }))\n      .set(getKey({ card, selected: false }), getCardImageData(context, { card, selected: false }))\n  })\n\n  c2 = document.createElement('canvas')\n  c2.width = width\n  c2.height = height\n  context.ctx.clearRect(0, 0, width + 2, height + 2)\n}\n\n// to get transarency working, (maybe other composition?) need an intermediary canvas to proxy the drawing.\n\nexport const writeDataToCanvas = (context: DrawingContext, data: ImageData, x: number, y: number) => {\n  const ctx2 = c2.getContext('2d')\n  ctx2?.putImageData(data, 0, 0)\n  context.ctx.drawImage(c2, x, y)\n}\n","const allFontSizes = Array.from<number, number>({ length: 200 }, (v, k) => k)\n\ninterface isBigEnough {\n  (width: number, height: number): boolean\n}\n\nexport const measureWidth = (ctx: CanvasRenderingContext2D, font: string, text: string) => {\n  ctx.font = font\n  return ctx.measureText(text).width\n}\n\nexport const measureHeight = (ctx: CanvasRenderingContext2D, font: string) => {\n  ctx.font = font\n  return ctx.measureText('M').width // close enough\n}\n\nconst searchFontSize = (\n  ctx: CanvasRenderingContext2D,\n  isBigEnough: isBigEnough,\n  text: string,\n  min: number,\n  max: number,\n): string => {\n  const index = Math.floor((max + min) / 2)\n  const font = `${allFontSizes[index]}px sans-serif`\n  const width = measureWidth(ctx, font, text)\n  const height = measureHeight(ctx, font)\n  if (min > max) return font\n  if (isBigEnough(width, height)) return searchFontSize(ctx, isBigEnough, text, min, index - 1)\n  return searchFontSize(ctx, isBigEnough, text, index + 1, max)\n}\n\nexport const search = (ctx: CanvasRenderingContext2D, isBigEnough: isBigEnough, text: string) =>\n  searchFontSize(ctx, isBigEnough, text, 0, allFontSizes.length - 1)\n","import { DrawingContext, Box, Dimensions } from './Common'\nimport { Stack, StackDirection, StackType } from '../lib/Card'\n\nexport const getStackCardOffsetWidth = (ctx: DrawingContext) => Math.floor(ctx.height * 0.03)\n\nexport const getStackCardOffsetHeight = (ctx: DrawingContext) => Math.floor(ctx.height * 0.03)\n\nexport const getVerticalMarginSize = (ctx: DrawingContext) => Math.floor(ctx.height * 0.01)\n\nexport const getHorizontalMarginSize = (ctx: DrawingContext) => Math.floor(ctx.width * 0.01)\n\nexport const getTopbarBox = (): Box => ({ x: 0, y: 0, width: 0, height: 30 })\n\n// the goal is to find the highest possible card width/height satisfying the desired ratio\n// assuming a fixed top-bar height with no margin, ( it will account for its own padding )\n// and 1 vertical separator + 6 horizontal separators\n// also, need room to stack 13 stack + 6 hidden => 19 cards.\n// without exceeding the size of the window.\n\nexport const getCardDimensions = (ctx: DrawingContext): Dimensions => {\n  const horizontalMargin = getHorizontalMarginSize(ctx)\n  const verticalMargin = getVerticalMarginSize(ctx)\n  const topBarBox = getTopbarBox()\n  const stackCardOffsetHeight = getStackCardOffsetHeight(ctx)\n\n  const usedVerticalSpace = topBarBox.height + verticalMargin * 2 + stackCardOffsetHeight * 19\n  const usedHorizontalSpace = horizontalMargin * 6\n\n  const maxWidth = Math.floor((ctx.width - usedHorizontalSpace) / 7)\n  const maxHeight = Math.floor((ctx.height - usedVerticalSpace) / 1.5)\n\n  const DESIRED_RATIO = 1.618 // try to get golden ratio size cards\n  const width = maxWidth * DESIRED_RATIO < maxHeight ? maxWidth : maxHeight / DESIRED_RATIO\n  const height = maxWidth * DESIRED_RATIO < maxHeight ? maxWidth * DESIRED_RATIO : maxHeight\n\n  return {\n    width: Math.floor(width),\n    height: Math.floor(height),\n  }\n}\n\nexport const getStackBox = (ctx: DrawingContext, stack: Stack, max: number): Box => {\n  const verticalMargin = getVerticalMarginSize(ctx)\n  const horizontalMargin = getHorizontalMarginSize(ctx)\n  const topBar = getTopbarBox()\n  const { width, height } = getCardDimensions(ctx)\n  const cardLength = Math.min(stack.cards.length, max)\n\n  // we know horizontal space used\n  // it might be less than available width\n  // base x width is half that available space (for centering)\n\n  const usedWidth = horizontalMargin * 6 + width * 7\n  const baseX = usedWidth < ctx.width ? (ctx.width - usedWidth) / 2 : 0\n\n  const stackWidth =\n    stack.direction === StackDirection.horizontal\n      ? cardLength === 0\n        ? height\n        : getStackCardOffsetWidth(ctx) * (cardLength - 1) + width\n      : width\n\n  const stackHeight =\n    stack.direction === StackDirection.vertical\n      ? cardLength === 0\n        ? height\n        : getStackCardOffsetHeight(ctx) * (cardLength - 1) + height\n      : height\n\n  switch (stack.type) {\n    case StackType.stock:\n      return {\n        y: topBar.height + verticalMargin,\n        x: baseX,\n        width: stackWidth,\n        height: stackHeight,\n      }\n    case StackType.waste:\n      return {\n        y: topBar.height + verticalMargin,\n        x: baseX + horizontalMargin + width,\n        width: stackWidth,\n        height: stackHeight,\n      }\n    case StackType.foundation:\n      return {\n        y: topBar.height + verticalMargin,\n        x: baseX + 3 * horizontalMargin + 3 * width + stack.index * (horizontalMargin + width),\n        width: stackWidth,\n        height: stackHeight,\n      }\n    case StackType.tableau:\n      return {\n        y: topBar.height + verticalMargin * 3 + height,\n        x: baseX + stack.index * (horizontalMargin + width),\n        width: stackWidth,\n        height: stackHeight,\n      }\n  }\n}\n","import { Stack, StackDirection, StackType } from '../lib/Card'\nimport { writeDataToCanvas, cardCache, getKey, DrawingContext, Box } from './Common'\nimport { getStackCardOffsetWidth, getStackCardOffsetHeight, getStackBox } from './Layout'\n\nexport type StackDrawingOptions = {\n  overDrawn: boolean\n  showing: number\n}\n\nexport type StackDrawingContext = StackDrawingOptions & {\n  stack: Stack\n  space: number\n  max: number\n  box: Box\n}\n\nexport const getStackDrawingContext = (\n  context: DrawingContext,\n  stack: Stack,\n  opts: StackDrawingOptions,\n): StackDrawingContext => {\n  const max =\n    stack.type === StackType.stock || stack.type === StackType.foundation\n      ? 1\n      : stack.type === StackType.waste\n      ? opts.showing || 0\n      : stack.cards.length\n\n  const box = getStackBox(context, stack, max)\n\n  const space =\n    stack.direction === StackDirection.horizontal ? getStackCardOffsetWidth(context) : getStackCardOffsetHeight(context)\n\n  return {\n    stack,\n    overDrawn: opts.overDrawn,\n    showing: opts.showing,\n    space,\n    box,\n    max,\n  }\n}\n\nexport const drawStack = (context: DrawingContext, drawingOpts: StackDrawingContext | null) => {\n  if (drawingOpts == null) return null\n  const { stack, overDrawn, max, space, box } = drawingOpts\n  const cards = stack.cards.slice(-max)\n\n  const path = new Path2D()\n  path.rect(box.x, box.y, box.width, box.height)\n  path.closePath()\n\n  const empty = cards.length === 0\n  const error = stack.type === StackType.stock && empty && overDrawn\n  const elements = []\n\n  if (error) elements.push({ data: cardCache.get('error'), x: box.x, y: box.y })\n  else if (empty) elements.push({ data: cardCache.get('empty'), x: box.x, y: box.y })\n  else\n    cards.forEach((card, i) => {\n      const drawing = card.hidden ? cardCache.get('hidden') : cardCache.get(getKey(card))\n      if (drawing) {\n        const x = stack.direction === StackDirection.horizontal ? i * space : 0\n        const y = stack.direction === StackDirection.horizontal ? 0 : i * space\n        elements.push({ data: drawing, x: box.x + x, y: box.y + y })\n      }\n    })\n\n  for (const { data, x, y } of elements) data && writeDataToCanvas(context, data, x, y)\n  return { path, box }\n}\n","import * as React from 'react'\nimport { Dimensions } from '../drawing/Common'\n\ntype CanvasSizeReturn = {\n  ctx?: CanvasRenderingContext2D\n  width?: number\n  height?: number\n  handleCanvasRef: (canvas: HTMLCanvasElement) => void\n}\n\nexport const useCanvasSize = (): CanvasSizeReturn => {\n  const [canvas, setCanvas] = React.useState<HTMLCanvasElement | null>(null)\n  const handleCanvasRef = React.useCallback((canvas: HTMLCanvasElement) => canvas && setCanvas(canvas), [])\n\n  const getSize = () => ({ width: window.innerWidth, height: window.innerHeight })\n\n  const [size, setSize] = React.useState<Dimensions>()\n\n  React.useEffect(() => {\n    let tid: number\n    const handleSize = () => {\n      if (tid) clearTimeout(tid)\n      tid = window.setTimeout(() => setSize(getSize()), 300)\n    }\n    window.addEventListener('resize', handleSize)\n    return () => {\n      window.removeEventListener('resize', handleSize)\n    }\n  })\n\n  const retVal = React.useMemo(\n    () => ({\n      handleCanvasRef,\n      ...(canvas && {\n        ctx: canvas.getContext('2d') as CanvasRenderingContext2D,\n        ...(size ?? getSize()),\n      }),\n    }),\n    [size, handleCanvasRef, canvas],\n  )\n\n  return retVal\n}\n","import * as React from 'react'\nimport { GameCtx } from '../components/GameCanvas'\nimport { Clickable, DrawingContext, Drawable } from '../drawing/Common'\n\nexport interface Drawer {\n  (context: DrawingContext): Drawable | null\n}\n\nexport const useDrawing = (draw: Drawer, events: Clickable = {}) => {\n  const gameContext = React.useContext(GameCtx)\n  const performCleanup = React.useRef(true)\n  const lastWidth = React.useRef(gameContext?.context.width ?? 0)\n  const lastHeight = React.useRef(gameContext?.context.height ?? 0)\n\n  // should only clear the rects if we haven't just resized the screen\n  // a screen resize will already clear the entire canvas\n  // if this isn't tracked, we end up drawing a new game and clear out the old sizes, leaving blank holes.\n\n  React.useLayoutEffect(() => {\n    if (!gameContext) return\n    performCleanup.current = !(\n      (lastHeight.current !== gameContext.context.height || lastWidth.current !== gameContext.context.width) &&\n      lastHeight.current > 0 &&\n      lastWidth.current > 0\n    )\n    lastHeight.current = gameContext.context.height\n    lastWidth.current = gameContext.context.width\n  }, [gameContext])\n\n  React.useEffect(() => {\n    if (gameContext == null) return\n    const { add, remove, context } = gameContext\n    const { ctx } = context\n\n    const thing = draw(context)\n    if (thing == null) return\n    add(thing, events)\n\n    return () => {\n      remove(thing.path)\n      if (performCleanup.current) {\n        ctx.clearRect(thing.box.x, thing.box.y, thing.box.width, thing.box.height)\n      }\n      performCleanup.current = true\n    }\n  })\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport * as offline from '@lcdp/offline-plugin/runtime'\n\nimport App from './components/App'\n\nconst NODE_ENV = process.env.NODE_ENV\nif (NODE_ENV === 'production') {\n  offline.install({\n    onUpdateReady() {\n      offline.applyUpdate()\n    },\n    onUpdated() {\n      window.location.reload()\n    },\n  })\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n","export enum ValueType {\n  ace = 'A',\n  two = '2',\n  three = '3',\n  four = '4',\n  five = '5',\n  six = '6',\n  seven = '7',\n  eight = '8',\n  nine = '9',\n  ten = '10',\n  jack = 'J',\n  queen = 'Q',\n  king = 'K',\n}\n\nexport enum SuitType {\n  heart = '\\u2665',\n  diamond = '\\u2666',\n  spade = '\\u2660',\n  club = '\\u2663',\n}\n\nexport type Card = {\n  suit: SuitType\n  value: ValueType\n}\n\nexport type StackCard = {\n  card: Card\n  hidden?: boolean\n  selected?: boolean\n}\n\nexport enum StackDirection {\n  horizontal = 'horizontal',\n  vertical = 'vertical',\n}\n\n//\n//  1 2   3 3 3 3\n//  4 4 4 4 4 4 4\n//\n// 1 - stock\n// 2 - waste\n// 3 - foundation\n// 4 - tableau\n//\n\nexport enum StackType {\n  tableau = 'tableau',\n  foundation = 'foundation',\n  stock = 'stock',\n  waste = 'waste',\n}\n\nexport type Stack = {\n  cards: StackCard[]\n  selection: StackCard | null\n  type: StackType\n  direction: StackDirection | null\n  index: number\n}\n\nconst Cards: Card[] = []\n\nfor (const value of Object.values(ValueType)) {\n  for (const suit of Object.values(SuitType)) {\n    Cards.push({ suit, value })\n  }\n}\n\nObject.freeze(Cards)\n\nexport { Cards }\n","export enum PersistanceType {\n  type = 'game-mode',\n  theme = 'theme',\n  score = 'score',\n  number = 'game-number',\n}\n\nexport const persist: <T>(name: PersistanceType, thing: T) => void = (name, thing) => {\n  try {\n    localStorage.setItem(name, JSON.stringify(thing))\n  } catch (err) {\n    // that sucks\n  }\n}\n\nexport const retrieve = <T>(name: PersistanceType, init: T) => {\n  try {\n    const thing = localStorage.getItem(name) || ''\n    return JSON.parse(thing) as T\n  } catch (err) {\n    return init\n  }\n}\n","export enum ScoringType {\n  vegas = 'vegas',\n  regular = 'regular',\n}\n\nexport enum ScoreType {\n  wasteToTableau = 'wasteToTableau',\n  wasteToFoundation = 'wasteToFoundation',\n  tableauToFoundation = 'tableauToFoundation',\n  revealCard = 'revealCard',\n  foundationToTableau = 'foundationToTableau',\n}\n\nexport const getScoreChange = (scoringType: ScoringType, scoreType: ScoreType) => {\n  let score = 0\n  if (scoringType === ScoringType.regular && scoreType === ScoreType.tableauToFoundation) {\n    score = 10\n  } else if (\n    scoreType === ScoreType.wasteToFoundation ||\n    (scoringType === ScoringType.vegas && scoreType === ScoreType.tableauToFoundation) ||\n    (scoringType === ScoringType.regular && scoreType === ScoreType.revealCard) ||\n    (scoringType === ScoringType.regular && scoreType === ScoreType.wasteToTableau)\n  ) {\n    score = 5\n  } else if (scoringType === ScoringType.regular && ScoreType.foundationToTableau) {\n    score = -10\n  } else if (scoringType === ScoringType.vegas && scoreType === ScoreType.foundationToTableau) {\n    score = -5\n  }\n  return score\n}\n","import { Card, ValueType, SuitType, Stack, StackCard } from './Card'\n\n// minstd_rand\nexport const rnd = (s: number) => {\n  const rnd = () => ((2 ** 31 - 1) & (s = Math.imul(48271, s))) / 2 ** 31\n  rnd() // first call is always junk\n  return (min: number, max: number) => Math.floor(rnd() * max) + min\n}\n\nexport const sumConsecutive = (i: number) => (i * (i + 1)) / 2\n\nexport const getTopCard = (stack: Stack): StackCard | null => stack.cards[stack.cards.length - 1] || null\n\nexport const random = (min: number, max: number): number => Math.floor(Math.random() * max) + min\n\n// for simplicity, these routines would just use strict object comparison\n// however, if doing that, any changes to the store in a thunk would invalidate variable reference\n// this is useful for comparing a selected, or checking if stacks are the same before modifying them\n// so, we compare both value/suit when doing card comparisons, and type/index for stack comparisons\n\nexport const sameStack = (stack1: Stack, stack2: Stack) => stack1.type === stack2.type && stack1.index === stack2.index\n\nexport const sameCard = (stackCard1: StackCard, stackCard2: StackCard) =>\n  stackCard1.card.value === stackCard2.card.value && stackCard1.card.suit === stackCard2.card.suit\n\nexport const stackContainsCard = (stackCards: StackCard[], stackCard: StackCard) =>\n  stackCards.some((item: StackCard) => sameCard(item, stackCard))\n\nexport const isSequential = (card: Card, card1: Card) => valueToInt(card1.value) + 1 === valueToInt(card.value)\n\nexport const isRed = (card: Card) => [SuitType.diamond, SuitType.heart].includes(card.suit)\n\nexport const isBlack = (card: Card) => [SuitType.club, SuitType.spade].includes(card.suit)\n\nexport const isBig = (card: Card) =>\n  [ValueType.ace, ValueType.jack, ValueType.queen, ValueType.king].includes(card.value)\n\nexport const isValidFoundationMove = (stackCard: StackCard, desintation: StackCard | null) =>\n  desintation == null\n    ? stackCard.card.value === ValueType.ace\n    : desintation.card.suit === stackCard.card.suit && isSequential(stackCard.card, desintation.card)\n\nexport const isValidTableauMove = (stackCard: StackCard, destination: StackCard | null) => {\n  return destination == null\n    ? stackCard.card.value === ValueType.king\n    : isSequential(destination.card, stackCard.card) &&\n        ((isRed(stackCard.card) && isBlack(destination.card)) || (isBlack(stackCard.card) && isRed(destination.card)))\n}\n\nconst valueToInt = (value: ValueType): number => {\n  if (value === ValueType.ace) return 1\n  if (value === ValueType.jack) return 11\n  if (value === ValueType.queen) return 12\n  if (value === ValueType.king) return 13\n  return parseInt(value, 10)\n}\n","import { createSlice, PayloadAction, AnyAction } from '@reduxjs/toolkit'\nimport { StackType } from '../lib/Card'\nimport { retrieve, PersistanceType } from '../lib/Persist'\nimport { ScoringType, getScoreChange, ScoreType } from '../lib/Scoring'\nimport { ColorSchemeType } from '../drawing/ColorScheme'\nimport { initialize } from './init'\nimport { undoable } from './undoable'\nimport { MoveCardPayload, shiftCards } from './stacks'\n\nconst gameStateSlice = createSlice({\n  name: 'game-state',\n  initialState: {\n    draws: 0,\n    number: 0,\n    score: 0,\n    scoringType: ScoringType.regular,\n    showing: 0,\n    theme: ColorSchemeType.dark,\n  },\n  reducers: {\n    incrementDraws(state) {\n      state.draws = state.draws + 1\n    },\n    incrementScore(state, { payload }: PayloadAction<ScoreType>) {\n      state.score = state.score + getScoreChange(state.scoringType, payload)\n    },\n    changeTheme(state, { payload }: PayloadAction<ColorSchemeType>) {\n      state.theme = payload\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(initialize, (state, { payload }) => {\n        state.draws = 0\n        state.number = payload.number\n        state.score = payload.scoringType === ScoringType.vegas ? retrieve(PersistanceType.score, 0) - 52 : 0\n        state.scoringType = payload.scoringType\n        state.showing = 3\n        state.theme = payload.theme\n      })\n      .addMatcher(\n        (action: AnyAction): action is PayloadAction<MoveCardPayload> =>\n          shiftCards.match(action) &&\n          (action.payload.to.type === StackType.waste ||\n            (action.payload.from && action.payload.from.type === StackType.waste)),\n        (state, { payload: { to, cards } }) => {\n          state.showing =\n            to.type === StackType.waste ? Math.min(to.cards.length + cards.length, 3) : Math.max(1, state.showing - 1)\n        },\n      ),\n})\n\nexport const { incrementDraws, incrementScore, changeTheme } = gameStateSlice.actions\n\nexport default undoable(gameStateSlice.reducer)\n","import { configureStore, combineReducers, ThunkAction, Action, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { createLogger } from 'redux-logger'\nimport subscribe from 'redux-subscribe-reselect'\n\nimport { getType, getGameState, getTheme, getNumber } from './selectors'\nimport stacks from './stacks'\nimport gameState from './game-state'\nimport { persist, PersistanceType } from '../lib/Persist'\nimport { StackCard, Stack } from '../lib/Card'\nimport { ScoringType } from '../lib/Scoring'\n\nconst middleware = getDefaultMiddleware({ immutableCheck: false, serializableCheck: false })\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(\n    createLogger({\n      stateTransformer: (state: StoreState) => ({\n        gameState: state.gameState.present,\n        stacks: state.stacks.present,\n      }),\n    }),\n  )\n}\n\nconst reducer = combineReducers({ stacks, gameState })\nconst store = configureStore({ reducer, middleware })\n\nsubscribe(store, getGameState, ({ scoringType, score }) => {\n  if (scoringType === ScoringType.vegas) persist(PersistanceType.score, score)\n})\nsubscribe(store, getType, (scoringType) => persist(PersistanceType.type, scoringType))\nsubscribe(store, getTheme, (newTheme) => persist(PersistanceType.theme, newTheme))\nsubscribe(store, getNumber, (number) => persist(PersistanceType.number, number))\n\nexport type StoreState = ReturnType<typeof reducer>\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk<T = void> = ThunkAction<T, StoreState, unknown, Action>\n\nexport type CardSelection = { stackCard: StackCard | null; stack: Stack }\n\nexport default store\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { Card } from '../lib/Card'\nimport { ScoringType } from '../lib/Scoring'\nimport { ColorSchemeType } from '../drawing/ColorScheme'\n\n// this is in it's own file because circular dependencies are jerks.\n\nexport const initialize = createAction<{\n  scoringType: ScoringType\n  cards: Card[]\n  number: number\n  theme: ColorSchemeType\n}>('initialize')\n","import { createSelector } from 'reselect'\nimport { StackType, StackCard } from '../lib/Card'\nimport { getTopCard, isValidFoundationMove } from '../lib/util'\nimport { ScoringType } from '../lib/Scoring'\nimport { StoreState, CardSelection } from './index'\n\nexport const getStacks = createSelector(\n  (state: StoreState) => state.stacks.present.stacks,\n  (stacks) => stacks,\n)\n\nconst getFoundation = createSelector(getStacks, (stacks) =>\n  stacks.filter((stack) => stack.type === StackType.foundation),\n)\n\nexport const getTableau = createSelector(getStacks, (stacks) =>\n  stacks.filter((stack) => stack.type === StackType.tableau),\n)\n\nexport const getGameWon = createSelector(getFoundation, (foundation) =>\n  foundation.every((stack) => stack.cards.length === 13),\n)\n\nexport const getHiddenCard = createSelector(getTableau, (stacks) =>\n  stacks.reduce<CardSelection | null>((acc, stack) => {\n    if (acc) return acc\n    const topCard = getTopCard(stack)\n    if (topCard && topCard.hidden) return { stack, stackCard: topCard }\n    return null\n  }, null),\n)\n\nexport const getMovableToFoundation = createSelector([getStacks, getFoundation], (stacks, foundation) =>\n  stacks\n    .filter((stack) => stack.type !== StackType.foundation)\n    .reduce<CardSelection | null>((acc, stack) => {\n      if (acc) return acc\n      const topCard = getTopCard(stack)\n      if (topCard == null || topCard.hidden) return acc\n      if (foundation.some((f) => isValidFoundationMove(topCard, getTopCard(f)))) return { stack, stackCard: topCard }\n      return null\n    }, null),\n)\n\nexport const getStock = createSelector(\n  getStacks,\n  (stacks) => stacks.filter((stack) => stack.type === StackType.stock)[0],\n)\n\nexport const getWaste = createSelector(\n  getStacks,\n  (stacks) => stacks.filter((stack) => stack.type === StackType.waste)[0],\n)\n\nexport const getFoundationStack = createSelector(\n  getFoundation,\n  (_: unknown, stackCard: StackCard) => stackCard,\n  (foundation, stackCard) => foundation.find((stack) => isValidFoundationMove(stackCard, getTopCard(stack))),\n)\n\nexport const getGameState = createSelector(\n  (state: StoreState) => state.gameState.present,\n  (score) => score,\n)\n\nexport const getTheme = createSelector(getGameState, (gameState) => gameState.theme)\n\nexport const getScore = createSelector(getGameState, (gameState) => gameState.score)\n\nexport const getType = createSelector(getGameState, (gameState) => gameState.scoringType)\n\nexport const getDraws = createSelector(getGameState, (gameState) => gameState.draws)\n\nconst VEGAS_DRAW_LIMIT = 3\nexport const getOverDrawn = createSelector(\n  [getDraws, getType],\n  (draws, scoringType) => scoringType === ScoringType.vegas && draws + 1 > VEGAS_DRAW_LIMIT,\n)\n\nexport const getShowing = createSelector(getGameState, ({ showing }) => showing)\n\nexport const getNumber = createSelector(getGameState, ({ number }) => number)\n\nexport const getSelection = createSelector(getStacks, (stacks) => {\n  const stack = stacks.find((stack) => stack.selection != null)\n  if (stack) return { stackCard: stack.selection, stack: stack }\n  return null\n})\n\nexport const disallowClickStock = createSelector(\n  [getStock, getOverDrawn],\n  (stock, overDrawn) => stock.cards.length === 0 && overDrawn,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { Stack, StackCard, StackType, StackDirection } from '../lib/Card'\nimport { stackContainsCard, sumConsecutive, sameStack, sameCard } from '../lib/util'\nimport { undoable } from './undoable'\nimport { initialize } from './init'\n\nexport type MoveCardPayload = { from: Stack; to: Stack; cards: StackCard[]; hidden: boolean }\n\nconst stacksSlice = createSlice({\n  name: 'stacks',\n  initialState: {\n    stacks: [\n      {\n        type: StackType.stock,\n        direction: null,\n        cards: [],\n        index: 0,\n        selection: null,\n      },\n      {\n        type: StackType.waste,\n        direction: StackDirection.horizontal,\n        cards: [],\n        index: 0,\n        selection: null,\n      },\n      ...Array.from<number, Stack>({ length: 7 }, (_, index) => ({\n        type: StackType.tableau,\n        direction: StackDirection.vertical,\n        cards: [],\n        index,\n        selection: null,\n      })),\n      ...Array.from<number, Stack>({ length: 4 }, (_, index) => ({\n        type: StackType.foundation,\n        direction: null,\n        cards: [],\n        index,\n        selection: null,\n      })),\n    ],\n  },\n  reducers: {\n    shiftCards: (state, { payload: { from, to, cards, hidden } }: PayloadAction<MoveCardPayload>) => {\n      const toStack = state.stacks.find((stack) => sameStack(to, stack))\n      const fromStack = state.stacks.find((stack) => sameStack(from, stack))\n      if (toStack) toStack.cards.push(...cards.map((card) => ({ ...card, selected: false, hidden })))\n      if (fromStack) fromStack.cards = fromStack.cards.filter((stackCard) => !stackContainsCard(cards, stackCard))\n    },\n    revealTop: (state, { payload }: PayloadAction<Stack>) => {\n      const thisStack = state.stacks.find((stack) => sameStack(stack, payload))\n      if (thisStack) {\n        const topCard = thisStack.cards[thisStack.cards.length - 1]\n        if (topCard) topCard.hidden = false\n      }\n    },\n    selectCard: (state, { payload }: PayloadAction<{ stack: Stack; stackCard: StackCard }>) => {\n      const thisStack = state.stacks.find((stack) => sameStack(stack, payload.stack))\n      if (thisStack) {\n        thisStack.selection = payload.stackCard\n        const thisCard = thisStack.cards.find((stackCard) => sameCard(stackCard, payload.stackCard))\n        if (thisCard) thisCard.selected = true\n      }\n    },\n    deselectCard: (state) => {\n      const thisStack = state.stacks.find((stack) => stack.selection != null)\n      if (thisStack) {\n        thisStack.selection = null\n        const selectedCard = thisStack.cards.find((stackCard) => stackCard.selected)\n        if (selectedCard) selectedCard.selected = false\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder.addCase(initialize, (state, { payload }) => {\n      state.stacks = state.stacks.map((stack) => {\n        switch (stack.type) {\n          case StackType.foundation:\n          case StackType.waste:\n            return { ...stack, cards: [] }\n          case StackType.stock:\n            return { ...stack, cards: payload.cards.slice(0, 24).map((card) => ({ card, hidden: true })) }\n          case StackType.tableau:\n            return {\n              ...stack,\n              cards: payload.cards\n                .slice(24 + sumConsecutive(stack.index), 24 + sumConsecutive(stack.index) + stack.index + 1)\n                .map((card, index, a) => ({ card, hidden: a.length !== index + 1 })),\n            }\n        }\n      })\n    }),\n})\n\nexport const { selectCard, deselectCard, revealTop, shiftCards } = stacksSlice.actions\n\nexport const moveCards = (from: Stack, to: Stack, from_card: StackCard | null) =>\n  shiftCards({\n    from,\n    to,\n    cards: from.cards.slice(from.cards.findIndex((card) => from_card && sameCard(card, from_card))),\n    hidden: false,\n  })\n\nexport const drawStockCards = ({ stock, waste }: { stock: Stack; waste: Stack }) =>\n  shiftCards({ from: stock, to: waste, cards: stock.cards.slice(-3).reverse(), hidden: false })\n\nexport const recycleWaste = ({ stock, waste }: { stock: Stack; waste: Stack }) =>\n  shiftCards({ from: waste, to: stock, cards: waste.cards.slice(0).reverse(), hidden: true })\n\nexport default undoable(stacksSlice.reducer)\n","import { AppThunk, CardSelection } from '.'\nimport { isValidTableauMove, rnd } from '../lib/util'\nimport { StackType, Card, Cards } from '../lib/Card'\nimport { ScoringType, ScoreType } from '../lib/Scoring'\nimport { ColorSchemeType } from '../drawing/ColorScheme'\n\nimport { initialize } from './init'\nimport { moveCards, deselectCard, selectCard, revealTop, drawStockCards, recycleWaste } from './stacks'\nimport {\n  getSelection,\n  getFoundationStack,\n  disallowClickStock,\n  getWaste,\n  getStock,\n  getType,\n  getMovableToFoundation,\n  getHiddenCard,\n  getNumber,\n  getTheme,\n} from './selectors'\nimport { checkpoint } from './undoable'\nimport { incrementScore, incrementDraws } from './game-state'\n\nexport const newType = (newType?: ScoringType) =>\n  initializeGame({ newNumber: Math.floor(Math.random() * 1000), newType })\n\nexport const newNumber = (newNumber?: number) =>\n  initializeGame({ newNumber: newNumber == null ? Math.floor(Math.random() * 1000) : newNumber })\n\ntype InitOptions = { newType?: ScoringType; newNumber?: number; newTheme?: ColorSchemeType }\n\nexport const initializeGame = ({ newType, newNumber, newTheme }: InitOptions): AppThunk => (dispatch, getState) => {\n  const number = newNumber == null ? getNumber(getState()) : newNumber\n  const scoringType = newType == null ? getType(getState()) : newType\n  const theme = newTheme == null ? getTheme(getState()) : newTheme\n\n  const availableCards = Array.from(Cards)\n  const cards: Card[] = []\n\n  const rando = rnd(number)\n\n  for (let i = 0; i < 52; i += 1) {\n    const index = rando(0, availableCards.length)\n    const [card] = availableCards.splice(index, 1)\n    cards.push(card)\n  }\n\n  dispatch(initialize({ scoringType, cards, number, theme }))\n}\n\nexport const performMoves = (): AppThunk => (dispatch, getState) => {\n  let movable: CardSelection | null\n  while ((movable = getMovableToFoundation(getState()) || getHiddenCard(getState()))) {\n    if (movable.stackCard?.hidden ?? false) {\n      dispatch(checkAndPerformCardReveal(movable))\n    } else {\n      dispatch(checkAndPerformFoundationMove(movable))\n    }\n  }\n}\n\nconst checkAndPerformCardReveal = (selection: CardSelection): AppThunk => (dispatch) => {\n  if (selection == null) return\n  dispatch(checkpoint())\n  dispatch(incrementScore(ScoreType.revealCard))\n  dispatch(revealTop(selection.stack))\n}\n\nconst checkAndPerformFoundationMove = (selection: CardSelection): AppThunk => (dispatch, getState) => {\n  const foundation = selection.stackCard && getFoundationStack(getState(), selection.stackCard)\n  if (foundation && selection.stackCard) {\n    dispatch(deselectCard())\n    dispatch(checkpoint())\n    if (selection.stack.type === StackType.waste) dispatch(incrementScore(ScoreType.wasteToFoundation))\n    if (selection.stack.type === StackType.tableau) dispatch(incrementScore(ScoreType.tableauToFoundation))\n    dispatch(moveCards(selection.stack, foundation, selection.stackCard))\n  }\n}\n\nexport const clickCard = (cardSelection: CardSelection): AppThunk => (dispatch, getState) => {\n  const { stackCard, stack } = cardSelection\n  if (stackCard != null && stackCard.selected) return dispatch(deselectCard())\n\n  const selection = getSelection(getState())\n  if (selection == null && stackCard && !stackCard.hidden) return dispatch(selectCard({ stack, stackCard }))\n\n  if (stack.type === StackType.foundation && selection) {\n    dispatch(checkAndPerformFoundationMove(selection))\n    return\n  }\n\n  if (stack.type === StackType.tableau) {\n    if (selection == null && stackCard && stackCard.hidden) {\n      dispatch(checkpoint())\n      dispatch(incrementScore(ScoreType.revealCard))\n      dispatch(revealTop(stack))\n    }\n    if (selection && selection.stackCard && isValidTableauMove(selection.stackCard, stackCard)) {\n      dispatch(deselectCard())\n      dispatch(checkpoint())\n      if (selection.stack.type === StackType.waste) dispatch(incrementScore(ScoreType.wasteToTableau))\n      if (selection.stack.type === StackType.foundation) dispatch(incrementScore(ScoreType.foundationToTableau))\n      dispatch(moveCards(selection.stack, stack, selection.stackCard))\n    }\n  }\n\n  if (stack.type === StackType.stock) {\n    if (disallowClickStock(getState())) return\n    if (selection) dispatch(deselectCard())\n    const waste = getWaste(getState())\n    const stock = getStock(getState())\n    dispatch(checkpoint())\n    if (stock.cards.length > 0) {\n      dispatch(drawStockCards({ stock, waste }))\n    } else {\n      dispatch(recycleWaste({ stock, waste }))\n      dispatch(incrementDraws())\n    }\n  }\n}\n\nexport const doubleClickCard = (cardSelection: CardSelection): AppThunk => (dispatch) => {\n  const { stack, stackCard } = cardSelection\n  if (\n    stack.type === StackType.foundation ||\n    stack.type === StackType.stock ||\n    stackCard == null ||\n    stackCard.card == null\n  ) {\n    return\n  }\n\n  dispatch(checkAndPerformFoundationMove({ stack, stackCard }))\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { Reducer, AnyAction } from 'redux'\n\ntype History<State> = {\n  past: State[]\n  present: State\n  future: State[]\n}\n\nexport const destroy = createAction('destroy')\nexport const undo = createAction('undo')\nexport const redo = createAction('redo')\nexport const checkpoint = createAction('checkpoint')\n\nexport const undoable = <S, A extends AnyAction>(reducer: Reducer<S, A>) => {\n  const initialState: History<S> = {\n    past: [],\n    present: reducer(void 0, {} as A),\n    future: [],\n  }\n\n  return (state = initialState, action: A) => {\n    const { past, present, future } = state\n\n    if (undo.match(action)) {\n      const previous = past[past.length - 1]\n      if (!previous) {\n        return state\n      }\n\n      const newPast = past.slice(0, past.length - 1)\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future],\n      }\n    }\n\n    if (redo.match(action)) {\n      const next = future[0]\n      if (!next) {\n        return state\n      }\n\n      const newFuture = future.slice(1)\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture,\n      }\n    }\n\n    const newPresent = reducer(present, action)\n\n    if (destroy.match(action)) {\n      return {\n        past: [],\n        present: newPresent,\n        future: [],\n      }\n    }\n\n    if (checkpoint.match(action)) {\n      return {\n        past: [...past, present],\n        present: newPresent,\n        future: [],\n      }\n    }\n\n    if (present === newPresent) {\n      return state\n    }\n\n    return {\n      past,\n      present: newPresent,\n      future,\n    }\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t604: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkklondike\"] = self[\"webpackChunkklondike\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [720], () => (__webpack_require__(70)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}