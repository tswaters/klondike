{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/lib/Card.ts","webpack:///./src/ts/redux/selectors.ts","webpack:///./src/ts/lib/util.ts","webpack:///./src/ts/redux/undoable.ts","webpack:///./src/ts/redux/game-state.ts","webpack:///./src/ts/components/GameCanvas.tsx","webpack:///./src/ts/drawing/Layout.ts","webpack:///./src/ts/redux/stacks.ts","webpack:///./src/ts/redux/init.ts","webpack:///./src/ts/redux/thunks.ts","webpack:///./src/ts/drawing/Common.ts","webpack:///./src/ts/drawing/FontSize.ts","webpack:///./src/ts/hooks/useDrawing.ts","webpack:///./src/ts/index.tsx","webpack:///./src/ts/components/App.tsx","webpack:///./src/ts/store.ts","webpack:///./src/ts/redux/index.ts","webpack:///./src/ts/components/Container.tsx","webpack:///./src/ts/components/Fireworks.tsx","webpack:///./src/ts/drawing/ColorScheme.ts","webpack:///./src/ts/drawing/Card.ts","webpack:///./src/ts/hooks/useCanvasSize.ts","webpack:///./src/ts/components/StackElement.tsx","webpack:///./src/ts/drawing/Stack.ts","webpack:///./src/ts/components/TopBar.tsx","webpack:///./src/ts/drawing/Label.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","ValueType","SuitType","StackDirection","StackType","Cards","values","suit","freeze","getAllStacks","createSelector","state","stacks","present","getFoundation","filter","stack","type","foundation","getTableau","tableau","getStock","stock","getWaste","waste","getFoundationStack","_","card","find","cards","last","ace","isSequential","getScoreStore","gameState","score","getScore","getScoringType","scoringType","getDraws","draws","getShowing","showing","getSelection","selection","disallowClickStock","rnd","Math","imul","min","max","floor","sumConsecutive","getTopCard","random","contains","some","item","card1","valueToInt","isRed","diamond","heart","includes","isBlack","club","spade","isBig","jack","queen","king","isValidMove","destination","parseInt","destroy","UNDO","undo","REDO","redo","checkpoint","undoable","reducer","initialState","past","undefined","future","action","previous","next","newFuture","newPresent","ScoringType","ScoreType","getSavedScore","localStorage","getItem","parsed","Number","isNaN","err","saveScore","vegas","setItem","toString","getScoreChange","scoreType","regular","tableauToFoundation","wasteToFoundation","revealCard","wasteToTableau","foundationToTableau","incrementScore","decrementDraws","Infinity","INITIALIZE","MOVE_CARDS","to","from","GameCtx","React","createContext","intersect","evt","pointsRef","nativeEvent","e","canvas","target","point","x","offsetX","y","offsetY","ctx","getContext","path","keys","isPointInPath","thing","GameCanvas","children","useRef","Map","clickHandlers","doubleClickHandlers","colorScheme","useState","colorSchemes","ColorSchemeType","dark","width","height","handleCanvasRef","useCanvasSize","context","useMemo","useLayoutEffect","initialize","events","current","set","onClick","onDoubleClick","delete","handleCanvasDoubleClick","useCallback","event","handleCanvasClick","id","style","backgroundColor","background","top","left","position","ref","innerWidth","innerHeight","Provider","memo","getStackCardOffsetWidth","getStackCardOffsetHeight","getVerticalMarginSize","getHorizontalMarginSize","getTopbarBox","getCardBox","horizontalMargin","verticalMargin","topBarBox","stackCardOffsetHeight","usedVerticalSpace","usedHorizontalSpace","maxWidth","maxHeight","getStackBox","topBar","cardBox","cardLength","usedWidth","baseX","direction","horizontal","vertical","index","SELECT","selectCard","DESELECT","deselectCard","REVEAL_TOP","reveal","APPEND","appendCards","throwStock","reverse","hidden","recycleWaste","moveCards","from_card","findIndex","reducers","map","a","stackCard","selected","Array","newScoringType","dispatch","getState","availableCards","clickCard","clickedStack","clickedCard","doubleClickCard","c2","getKey","cardCache","getHiddenImageData","getEmptyImageData","getErrorImageData","forEach","getCardImageData","document","createElement","clearRect","writeDataToCanvas","ctx2","putImageData","drawImage","allFontSizes","v","k","measureWidth","font","text","measureText","measureHeight","searchFontSize","isBigEnough","search","useDrawing","draw","gameContext","useContext","performCleanup","lastWidth","lastHeight","useEffect","add","remove","box","offline","install","applyUpdate","location","reload","ReactDOM","render","getElementById","App","store","middleware","createStore","applyMiddleware","combineReducers","hot","useDispatch","useSelector","handleKeyDown","keyCode","ctrlKey","shiftKey","addEventListener","removeEventListener","fireworksObj","active","every","display","FireworksCanvas","ev","stop","start","emptyColor","faceUp","faceDown","buttonBorder","cardBorder","black","red","errorColor","light","FontSizeType","getBoxPath","radius","smaller","Path2D","dx","dy","dw","dh","moveTo","lineTo","quadraticCurveTo","closePath","getGlyphLocations","cardWidth","cardHeight","gutterHeight","gutterWidth","cornerWidth","figureOutFontSize","Corner","fontSizes","Regular","cornerValueX","cornerValueY","cornerSuitX","cornerSuitY","positions","glyph","reduce","rotated","textAlign","textBaseline","pos","three","five","nine","two","four","six","seven","eight","ten","getTop","getLeft","getTextAlign","fillStyle","fillRect","lineWidth","strokeStyle","strokeRect","getImageData","stroke","fill","save","translate","rotate","PI","fillText","restore","setCanvas","getSize","size","setSize","tid","handleSize","clearTimeout","setTimeout","StackElement","drawingOpts","getStackDrawingContext","prop","space","drawStack","opts","rect","empty","error","elements","drawing","TopBar","currentScore","otherGameType","deets","newGame","getLabelDrawingContext","padding","label","border","switchGame","version","handleNewGame","handleSwitchGame","drawLabel","boxHeight","beginPath","clip"],"mappings":"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","file":"klondike.09f95e083a15646d2417.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([23,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export enum ValueType {\n  ace = 'A',\n  two = '2',\n  three = '3',\n  four = '4',\n  five = '5',\n  six = '6',\n  seven = '7',\n  eight = '8',\n  nine = '9',\n  ten = '10',\n  jack = 'J',\n  queen = 'Q',\n  king = 'K',\n}\n\nexport enum SuitType {\n  heart = '\\u2665',\n  diamond = '\\u2666',\n  spade = '\\u2660',\n  club = '\\u2663',\n}\n\nexport type Card = {\n  suit: SuitType\n  value: ValueType\n}\n\nexport type StackCard = {\n  card: Card\n  hidden?: boolean\n  selected?: boolean\n}\n\nexport enum StackDirection {\n  horizontal = 'horizontal',\n  vertical = 'vertical',\n}\n\n//\n//  1 2   3 3 3 3\n//  4 4 4 4 4 4 4\n//\n// 1 - stock\n// 2 - waste\n// 3 - foundation\n// 4 - tableau\n//\n\nexport enum StackType {\n  tableau = 'tableau',\n  foundation = 'foundation',\n  stock = 'stock',\n  waste = 'waste',\n}\n\nexport type Stack = {\n  cards: StackCard[]\n  selection: Card | null\n  type: StackType\n  direction: StackDirection | null\n  index: number\n}\n\nconst Cards: Card[] = []\n\nfor (const value of Object.values(ValueType)) {\n  for (const suit of Object.values(SuitType)) {\n    Cards.push({ suit, value })\n  }\n}\n\nObject.freeze(Cards)\n\nexport { Cards }\n","import { createSelector } from 'reselect'\nimport { StoreState } from './index'\nimport { Card, ValueType, Stack, StackType } from '../lib/Card'\nimport { isSequential } from '../lib/util'\n\nexport type Selection = { card: Card; stack: Stack } | null\n\nexport const getAllStacks = createSelector(\n  (state: StoreState) => state.stacks.present.stacks,\n  (stacks) => stacks,\n)\n\nexport const getFoundation = createSelector(getAllStacks, (stacks) =>\n  stacks.filter((stack) => stack.type === StackType.foundation),\n)\n\nexport const getTableau = createSelector(getAllStacks, (stacks) =>\n  stacks.filter((stack) => stack.type === StackType.tableau),\n)\n\nexport const getStock = createSelector(\n  getAllStacks,\n  (stacks) => stacks.filter((stack) => stack.type === StackType.stock)[0],\n)\n\nexport const getWaste = createSelector(\n  getAllStacks,\n  (stacks) => stacks.filter((stack) => stack.type === StackType.waste)[0],\n)\n\nexport const getFoundationStack = createSelector(\n  getFoundation,\n  (_: unknown, card: Card) => card,\n  (foundation, card) =>\n    foundation.find(({ cards }) => {\n      const last = cards[cards.length - 1]\n      return last == null ? card.value === ValueType.ace : last.card.suit === card.suit && isSequential(card, last.card)\n    }),\n)\n\nexport const getScoreStore = createSelector(\n  (state: StoreState) => state.gameState.present,\n  (score) => score,\n)\n\nexport const getScore = createSelector(getScoreStore, (score) => score.score)\n\nexport const getScoringType = createSelector(getScoreStore, (score) => score.scoringType)\n\nexport const getDraws = createSelector(\n  (state: StoreState) => state.gameState.present,\n  ({ draws }) => draws,\n)\n\nexport const getShowing = createSelector(\n  (state: StoreState) => state.gameState.present,\n  ({ showing }) => showing,\n)\n\nexport const getSelection = createSelector(getAllStacks, (stacks) => {\n  const stack = stacks.find((stack) => stack.selection != null)\n  if (stack) return { card: stack.selection, stack: stack } as Selection\n  return null\n})\n\nexport const disallowClickStock = createSelector(\n  [getStock, getDraws],\n  (stock, draws) => stock.cards.length === 0 && draws === 0,\n)\n","import { Card, ValueType, SuitType, Stack, StackCard } from './Card'\n\n// minstd_rand\nexport const rnd = (s: number) => {\n  const rnd = () => ((2 ** 31 - 1) & (s = Math.imul(48271, s))) / 2 ** 31\n  rnd() // first call is always junk\n  return (min: number, max: number) => Math.floor(rnd() * (max - min + 1)) + min\n}\n\nexport const sumConsecutive = (i: number) => (i * (i + 1)) / 2\n\nexport const getTopCard = (cards: StackCard[]): StackCard | null => cards[cards.length - 1]\n\nexport const random = (min: number, max: number): number => Math.floor(Math.random() * max) + min\n\nexport const contains = (stack: Stack, card: Card) => stack.cards.some((item: StackCard) => item.card === card)\n\nexport const isSequential = (card: Card, card1: Card) => valueToInt(card1.value) + 1 === valueToInt(card.value)\n\nexport const isRed = (card: Card) => [SuitType.diamond, SuitType.heart].includes(card.suit)\n\nexport const isBlack = (card: Card) => [SuitType.club, SuitType.spade].includes(card.suit)\n\nexport const isBig = (card: Card) =>\n  [ValueType.ace, ValueType.jack, ValueType.queen, ValueType.king].includes(card.value) ? true : false\n\nexport const isValidMove = (card: Card, destination?: StackCard) => {\n  return destination == null\n    ? card.value === ValueType.king\n    : isSequential(destination.card, card) &&\n        ((isRed(card) && isBlack(destination.card)) || (isBlack(card) && isRed(destination.card)))\n}\n\nconst valueToInt = (value: ValueType): number => {\n  if (value === ValueType.ace) return 1\n  if (value === ValueType.jack) return 11\n  if (value === ValueType.queen) return 12\n  if (value === ValueType.king) return 13\n  return parseInt(value, 10)\n}\n","import { Reducer, AnyAction } from 'redux'\n\nexport type History<State> = {\n  past: State[]\n  present: State\n  future: State[]\n}\n\nconst DESTROY = '@@undoable/destroy'\nexport type DestroyAction = { type: typeof DESTROY }\nexport const destroy = (): DestroyAction => ({ type: DESTROY })\n\nconst UNDO = '@@undoable/undo'\ntype UndoAction = { type: typeof UNDO }\nexport const undo = (): UndoAction => ({ type: UNDO })\n\nconst REDO = '@@undoable/redo'\ntype RedoAction = { type: typeof REDO }\nexport const redo = (): RedoAction => ({ type: REDO })\n\nconst CHECKPOINT = '@@undoable/checkpoint'\ntype CheckpointAction = { type: typeof CHECKPOINT }\nexport const checkpoint = (): CheckpointAction => ({ type: CHECKPOINT })\n\nexport type UndoableActions = DestroyAction | UndoAction | RedoAction | CheckpointAction\n\nexport const undoable = <S, A extends AnyAction = UndoableActions>(reducer: Reducer<S, A>) => {\n  const initialState: History<S> = {\n    past: [],\n    present: reducer(undefined, {} as A),\n    future: [],\n  }\n\n  return (state = initialState, action: A) => {\n    const { past, present, future } = state\n\n    if (action.type === UNDO) {\n      const previous = past[past.length - 1]\n      if (!previous) {\n        return state\n      }\n\n      const newPast = past.slice(0, past.length - 1)\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future],\n      }\n    }\n\n    if (action.type === REDO) {\n      const next = future[0]\n      if (!next) {\n        return state\n      }\n\n      const newFuture = future.slice(1)\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture,\n      }\n    }\n\n    const newPresent = reducer(present, action)\n\n    if (action.type === DESTROY) {\n      return {\n        past: [],\n        present: newPresent,\n        future: [],\n      }\n    }\n\n    if (action.type === CHECKPOINT) {\n      return {\n        past: [...past, present],\n        present: newPresent,\n        future: [],\n      }\n    }\n\n    if (present === newPresent) {\n      return state\n    }\n\n    return {\n      past,\n      present: newPresent,\n      future,\n    }\n  }\n}\n","import { MOVE_CARDS } from './stacks'\nimport { StackType } from '../lib/Card'\nimport { StoreActions } from '.'\nimport { undoable } from './undoable'\nimport { INITIALIZE, InitializeAction } from './init'\n\nexport enum ScoringType {\n  vegas,\n  regular,\n}\n\nexport enum ScoreType {\n  wasteToTableau = 'wasteToTableau',\n  wasteToFoundation = 'wasteToFoundation',\n  tableauToFoundation = 'tableauToFoundation',\n  revealCard = 'revealCard',\n  foundationToTableau = 'foundationToTableau',\n}\n\nexport type GameStateStore = {\n  score: number\n  showing: number\n  draws: number\n  scoringType: ScoringType\n}\n\nconst getSavedScore = (): number => {\n  try {\n    const score = localStorage.getItem('score')\n    if (score == null) return 0\n    const parsed = parseInt(score, 10)\n    if (Number.isNaN(parsed)) return 0\n    return parsed\n  } catch (err) {\n    return 0\n  }\n}\n\nexport const saveScore = (state: GameStateStore): void => {\n  try {\n    if (state.scoringType === ScoringType.vegas) {\n      localStorage.setItem('score', state.score.toString())\n    }\n  } catch (err) {\n    // ehh, that sucks\n  }\n}\n\nconst getScoreChange = (scoringType: ScoringType, scoreType: ScoreType) => {\n  let score = 0\n  if (scoringType === ScoringType.regular && scoreType === ScoreType.tableauToFoundation) {\n    score = 10\n  } else if (\n    scoreType === ScoreType.wasteToFoundation ||\n    (scoringType === ScoringType.vegas && scoreType === ScoreType.tableauToFoundation) ||\n    (scoringType === ScoringType.regular && scoreType === ScoreType.revealCard) ||\n    (scoringType === ScoringType.regular && scoreType === ScoreType.wasteToTableau)\n  ) {\n    score = 5\n  } else if (scoringType === ScoringType.regular && ScoreType.foundationToTableau) {\n    score = -10\n  } else if (scoringType === ScoringType.vegas && scoreType === ScoreType.foundationToTableau) {\n    score = -5\n  }\n  return score\n}\n\nconst INCREMENT_SCORE = '@@game-state/increment-score'\ntype IncrementScoreAction = { type: typeof INCREMENT_SCORE; scoreType: ScoreType }\nexport const incrementScore = (scoreType: ScoreType): IncrementScoreAction => ({ type: INCREMENT_SCORE, scoreType })\n\nconst DECREMENT_DRAWS = 'DECREMENT_DRAWS'\ntype DecrementDrawsAction = { type: typeof DECREMENT_DRAWS }\nexport const decrementDraws = (): DecrementDrawsAction => ({ type: DECREMENT_DRAWS })\n\nexport type GameStateActions = DecrementDrawsAction | IncrementScoreAction | InitializeAction\n\nconst initialState: GameStateStore = {\n  showing: 0,\n  score: 0,\n  draws: Infinity,\n  scoringType: ScoringType.regular,\n}\n\nconst reducer = (state: GameStateStore = initialState, action: StoreActions): GameStateStore => {\n  if (action.type === INITIALIZE) {\n    return {\n      ...state,\n      scoringType: action.scoringType,\n      score: action.scoringType === ScoringType.vegas ? getSavedScore() - 52 : 0,\n      draws: action.scoringType === ScoringType.vegas ? 2 : Infinity,\n    }\n  }\n\n  if (action.type === DECREMENT_DRAWS) {\n    return {\n      ...state,\n      draws: state.draws - 1,\n    }\n  }\n\n  if (action.type === MOVE_CARDS) {\n    return action.to.type === StackType.waste || (action.from && action.from.type === StackType.waste)\n      ? {\n          ...state,\n          showing:\n            action.to.type === StackType.waste\n              ? Math.min(action.to.cards.length + action.cards.length, 3)\n              : Math.max(1, state.showing - 1),\n        }\n      : state\n  }\n\n  if (action.type === INCREMENT_SCORE) {\n    return {\n      ...state,\n      score: state.score + getScoreChange(state.scoringType, action.scoreType),\n    }\n  }\n  return state\n}\n\nexport default undoable(reducer)\n","import * as React from 'react'\nimport { Drawable, DrawingContext, Clickable, Handler } from '../drawing/Common'\nimport { ColorSchemeType, ColorScheme, colorSchemes } from '../drawing/ColorScheme'\nimport { initialize } from '../drawing/Common'\nimport { useCanvasSize } from '../hooks/useCanvasSize'\n\nexport type GameContext = {\n  context: DrawingContext\n  add: (thing: Drawable, events: Clickable) => void\n  remove: (path: Path2D) => void\n}\n\nexport const GameCtx = React.createContext<GameContext | null>(null)\n\nconst intersect = (evt: React.MouseEvent<HTMLCanvasElement>, pointsRef: Map<Path2D, Drawable>) => {\n  const { nativeEvent: e } = evt\n  const canvas = e.target as HTMLCanvasElement\n  const point = { x: e.offsetX, y: e.offsetY }\n  const ctx = canvas.getContext('2d')\n  for (const path of pointsRef.keys())\n    if (ctx?.isPointInPath(path, point.x, point.y)) {\n      const thing = pointsRef.get(path)\n      if (thing == null) return\n      return { thing, point }\n    }\n}\n\nconst GameCanvas: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const pointsRef = React.useRef<Map<Path2D, Drawable>>(new Map())\n  const clickHandlers = React.useRef<Map<Path2D, Handler>>(new Map())\n  const doubleClickHandlers = React.useRef<Map<Path2D, Handler>>(new Map())\n\n  const [colorScheme] = React.useState<ColorScheme>(colorSchemes[ColorSchemeType.dark])\n  const { ctx, width, height, handleCanvasRef } = useCanvasSize()\n\n  const context = React.useMemo<DrawingContext | null>(() => {\n    if (!width || !height || !ctx) return null\n    return { ctx, width, height, colorScheme }\n  }, [ctx, width, height, colorScheme])\n\n  React.useLayoutEffect(() => (context && initialize(context)) || void 0, [context])\n\n  const value = React.useMemo<GameContext | null>(\n    () =>\n      context && {\n        context,\n        add(thing, events) {\n          pointsRef.current.set(thing.path, thing)\n          if (events.onClick) clickHandlers.current.set(thing.path, events.onClick)\n          if (events.onDoubleClick) doubleClickHandlers.current.set(thing.path, events.onDoubleClick)\n        },\n        remove(path: Path2D) {\n          pointsRef.current.delete(path)\n          clickHandlers.current.delete(path)\n          doubleClickHandlers.current.delete(path)\n        },\n      },\n    [context],\n  )\n\n  const handleCanvasDoubleClick = React.useCallback((evt: React.MouseEvent<HTMLCanvasElement>) => {\n    const selection = intersect(evt, pointsRef.current)\n    if (selection) {\n      const { thing, point } = selection\n      const event = doubleClickHandlers.current.get(thing.path)\n      if (event) event(thing, point)\n    }\n  }, [])\n\n  const handleCanvasClick = React.useCallback((evt: React.MouseEvent<HTMLCanvasElement>) => {\n    const selection = intersect(evt, pointsRef.current)\n    if (selection) {\n      const { thing, point } = selection\n      const event = clickHandlers.current.get(thing.path)\n      if (event) event(thing, point)\n    }\n  }, [])\n\n  return (\n    <>\n      <canvas\n        id=\"canvas\"\n        style={{\n          backgroundColor: colorScheme.background,\n          top: '0',\n          left: '0',\n          width: '100vw',\n          height: '100vh',\n          position: 'absolute',\n        }}\n        ref={handleCanvasRef}\n        width={window.innerWidth}\n        height={window.innerHeight}\n        onClick={handleCanvasClick}\n        onDoubleClick={handleCanvasDoubleClick}\n      />\n      <GameCtx.Provider value={value}>{children}</GameCtx.Provider>\n    </>\n  )\n}\n\nexport { GameCanvas }\nexport default React.memo(GameCanvas)\n","import { DrawingContext, Box } from './Common'\nimport { Stack, StackDirection, StackType } from '../lib/Card'\n\nexport const getStackCardOffsetWidth = (ctx: DrawingContext) => Math.floor(ctx.height * 0.03)\n\nexport const getStackCardOffsetHeight = (ctx: DrawingContext) => Math.floor(ctx.height * 0.03)\n\nexport const getVerticalMarginSize = (ctx: DrawingContext) => Math.floor(ctx.height * 0.01)\n\nexport const getHorizontalMarginSize = (ctx: DrawingContext) => Math.floor(ctx.width * 0.01)\n\nexport const getTopbarBox = (): Box => ({ x: 0, y: 0, width: 0, height: 30 })\n\n// the goal is to find the highest possible card width/height satisfying the desired ratio\n// assuming a fixed top-bar height with no margin, ( it will account for its own padding )\n// and 1 vertical separator + 6 horizontal separators\n// also, need room to stack 13 stack + 6 hidden => 19 cards.\n// without exceeding the size of the window.\n\nexport const getCardBox = (ctx: DrawingContext): Box => {\n  const horizontalMargin = getHorizontalMarginSize(ctx)\n  const verticalMargin = getVerticalMarginSize(ctx)\n  const topBarBox = getTopbarBox()\n  const stackCardOffsetHeight = getStackCardOffsetHeight(ctx)\n\n  const usedVerticalSpace = topBarBox.height + verticalMargin * 2 + stackCardOffsetHeight * 19\n  const usedHorizontalSpace = horizontalMargin * 6\n\n  const maxWidth = Math.floor((ctx.width - usedHorizontalSpace) / 7)\n  const maxHeight = Math.floor((ctx.height - usedVerticalSpace) / 1.5)\n\n  const DESIRED_RATIO = 1.618 // try to get golden ratio size cards\n  const width = maxWidth * DESIRED_RATIO < maxHeight ? maxWidth : maxHeight / DESIRED_RATIO\n  const height = maxWidth * DESIRED_RATIO < maxHeight ? maxWidth * DESIRED_RATIO : maxHeight\n\n  return {\n    x: 0,\n    y: 0,\n    width: Math.floor(width),\n    height: Math.floor(height),\n  }\n}\n\nexport const getStackBox = (ctx: DrawingContext, stack: Stack, max: number): Box => {\n  const verticalMargin = getVerticalMarginSize(ctx)\n  const horizontalMargin = getHorizontalMarginSize(ctx)\n  const topBar = getTopbarBox()\n  const cardBox = getCardBox(ctx)\n  const cardLength = Math.min(stack.cards.length, max)\n\n  // we know horizontal space used\n  // it might be less than available width\n  // base x width is half that available space (for centering)\n\n  const usedWidth = horizontalMargin * 6 + cardBox.width * 7\n  const baseX = usedWidth < ctx.width ? (ctx.width - usedWidth) / 2 : 0\n\n  const width =\n    stack.direction === StackDirection.horizontal\n      ? cardLength === 0\n        ? cardBox.height\n        : getStackCardOffsetWidth(ctx) * (cardLength - 1) + cardBox.width\n      : cardBox.width\n\n  const height =\n    stack.direction === StackDirection.vertical\n      ? cardLength === 0\n        ? cardBox.height\n        : getStackCardOffsetHeight(ctx) * (cardLength - 1) + cardBox.height\n      : cardBox.height\n\n  switch (stack.type) {\n    case StackType.stock:\n      return {\n        y: topBar.height + verticalMargin,\n        x: baseX,\n        width,\n        height,\n      }\n    case StackType.waste:\n      return {\n        y: topBar.height + verticalMargin,\n        x: baseX + horizontalMargin + cardBox.width,\n        width,\n        height,\n      }\n    case StackType.foundation:\n      return {\n        y: topBar.height + verticalMargin,\n        x: baseX + 3 * horizontalMargin + 3 * cardBox.width + stack.index * (horizontalMargin + cardBox.width),\n        width,\n        height,\n      }\n    case StackType.tableau:\n      return {\n        y: topBar.height + verticalMargin * 3 + cardBox.height,\n        x: baseX + stack.index * (horizontalMargin + cardBox.width),\n        width,\n        height,\n      }\n  }\n}\n","import { Stack, StackCard, StackType, Card, StackDirection } from '../lib/Card'\nimport { contains, sumConsecutive } from '../lib/util'\nimport { undoable } from './undoable'\nimport { INITIALIZE, InitializeAction } from './init'\n\nexport const SELECT = '@@global/select-card'\nexport type SelectAction = { type: typeof SELECT; stack: Stack; card: StackCard }\nexport const selectCard = (stack: Stack, card: StackCard): SelectAction => ({ type: SELECT, card, stack })\n\nexport const DESELECT = '@@global/deselect-card'\nexport type DeselectAction = { type: typeof DESELECT }\nexport const deselectCard = (): DeselectAction => ({ type: DESELECT })\n\nexport const REVEAL_TOP = '@@global/reveal-top'\nexport type RevealTopCardAction = { type: typeof REVEAL_TOP; stack: Stack }\nexport const reveal = (stack: Stack): RevealTopCardAction => ({ type: REVEAL_TOP, stack })\n\nexport const APPEND = '@@global/append-cards'\nexport type AppendCardAction = { type: typeof APPEND; stack: Stack; cards: StackCard[] }\nexport const appendCards = (stack: Stack, cards: StackCard[]): AppendCardAction => ({ type: APPEND, cards, stack })\n\nexport const MOVE_CARDS = '@@global/move-cards'\nexport type MoveCardAction = { type: typeof MOVE_CARDS; from?: Stack; to: Stack; cards: StackCard[]; hidden: boolean }\n\nexport const throwStock = (stock: Stack, waste: Stack): MoveCardAction => ({\n  type: MOVE_CARDS,\n  from: stock,\n  to: waste,\n  cards: stock.cards.slice(-3).reverse(),\n  hidden: false,\n})\n\nexport const recycleWaste = (waste: Stack, stock: Stack): MoveCardAction => ({\n  type: MOVE_CARDS,\n  from: waste,\n  to: stock,\n  cards: waste.cards.slice(0),\n  hidden: true,\n})\n\nexport const moveCards = (from: Stack, to: Stack, from_card: Card | null = null): MoveCardAction => ({\n  type: MOVE_CARDS,\n  from,\n  to,\n  cards: from.cards.slice(from.cards.findIndex((card) => card.card === from_card)),\n  hidden: false,\n})\n\nexport type CardActions = SelectAction | DeselectAction | RevealTopCardAction | AppendCardAction | MoveCardAction\n\nconst reducers: {\n  [key: string]: (state: StackStore, action: CardActions | InitializeAction) => StackStore\n} = {\n  [INITIALIZE]: (state, action: InitializeAction) => ({\n    ...state,\n    stacks: state.stacks.map((stack) => {\n      if (stack.type === StackType.foundation || stack.type === StackType.waste) {\n        return { ...stack, cards: [] }\n      }\n      if (stack.type === StackType.stock) {\n        return { ...stack, cards: action.cards.slice(0, 24).map((card) => ({ card, hidden: true })) }\n      }\n      if (stack.type === StackType.tableau) {\n        return {\n          ...stack,\n          cards: action.cards\n            .slice(24 + sumConsecutive(stack.index), 24 + sumConsecutive(stack.index) + stack.index + 1)\n            .map((card, index, a) => ({ card, hidden: a.length !== index + 1 })),\n        }\n      }\n      return stack\n    }),\n  }),\n  [SELECT]: (state, action: SelectAction) => ({\n    ...state,\n    stacks: state.stacks.map((stack) =>\n      stack === action.stack && contains(stack, action.card.card)\n        ? {\n            ...stack,\n            selection: action.card.card,\n            cards: stack.cards.map((stackCard) =>\n              !stackCard.card || stackCard.card !== action.card.card ? stackCard : { ...stackCard, selected: true },\n            ),\n          }\n        : stack,\n    ),\n  }),\n  [DESELECT]: (state) => ({\n    ...state,\n    stacks: state.stacks.map((stack) =>\n      stack.selection != null\n        ? {\n            ...stack,\n            selection: null,\n            cards: stack.cards.map((stackCard) =>\n              !stackCard.selected ? stackCard : { ...stackCard, selected: false },\n            ),\n          }\n        : stack,\n    ),\n  }),\n  [APPEND]: (state, action: AppendCardAction) => ({\n    ...state,\n    stacks: state.stacks.map((stack) =>\n      stack === action.stack\n        ? {\n            ...stack,\n            cards: [...stack.cards, ...action.cards],\n          }\n        : stack,\n    ),\n  }),\n  [MOVE_CARDS]: (state, action: MoveCardAction) =>\n    state.stacks.some((stack) => [action.from, action.to].includes(stack))\n      ? {\n          ...state,\n          stacks: state.stacks.map((stack) =>\n            stack === action.to\n              ? {\n                  ...stack,\n                  cards: [\n                    ...stack.cards,\n                    ...action.cards.map((card) => ({ ...card, selected: false, hidden: action.hidden })),\n                  ],\n                }\n              : stack === action.from\n              ? {\n                  ...stack,\n                  cards: stack.cards.filter((stackCard) => !action.cards.includes(stackCard)),\n                }\n              : stack,\n          ),\n        }\n      : state,\n  [REVEAL_TOP]: (state, action: RevealTopCardAction) => ({\n    ...state,\n    stacks: state.stacks.map((stack) =>\n      stack === action.stack\n        ? {\n            ...stack,\n            cards: stack.cards.map((card, index) =>\n              index < stack.cards.length - 1 ? card : { ...card, hidden: false },\n            ),\n          }\n        : stack,\n    ),\n  }),\n}\n\nexport type StackStore = {\n  readonly stacks: Stack[]\n}\n\nconst initialState: StackStore = {\n  stacks: [\n    {\n      type: StackType.stock,\n      direction: null,\n      cards: [],\n      index: 0,\n      selection: null,\n    },\n    {\n      type: StackType.waste,\n      direction: StackDirection.horizontal,\n      cards: [],\n      index: 0,\n      selection: null,\n    },\n    ...Array.from<number, Stack>({ length: 7 }, (_, index) => ({\n      index,\n      type: StackType.tableau,\n      direction: StackDirection.vertical,\n      cards: [],\n      selection: null,\n    })),\n    ...Array.from<number, Stack>({ length: 4 }, (_, index) => ({\n      index,\n      type: StackType.foundation,\n      direction: null,\n      cards: [],\n      selection: null,\n    })),\n  ],\n}\n\nconst reducer = (state: StackStore = initialState, action: CardActions): StackStore => {\n  const r = reducers[action.type]\n  if (r) return r(state, action)\n  return state\n}\n\nexport default undoable(reducer)\n","import { ScoringType } from './game-state'\nimport { Card } from '../lib/Card'\n\nexport const INITIALIZE = '@@game-state/initialize'\nexport type InitializeAction = { type: typeof INITIALIZE; scoringType: ScoringType; cards: Card[] }\nexport const initialize = (scoringType: ScoringType, cards: Card[]): InitializeAction => ({\n  type: INITIALIZE,\n  scoringType,\n  cards,\n})\n","import { ThunkAction, ThunkDispatch as ReduxThunkDispatch } from 'redux-thunk'\n\nimport { StoreState, StoreActions } from '.'\nimport { isValidMove, random } from '../lib/util'\nimport { Stack, StackCard, StackType, Card, Cards } from '../lib/Card'\n\nimport { moveCards, deselectCard, selectCard, reveal, throwStock, recycleWaste } from './stacks'\nimport { getSelection, getFoundationStack, disallowClickStock, getWaste, getStock, getScoringType } from './selectors'\nimport { checkpoint } from './undoable'\nimport { incrementScore, ScoreType, ScoringType, decrementDraws } from './game-state'\nimport { initialize as initializeGame } from './init'\n\nexport type ThunkResult<R, E = null> = ThunkAction<R, StoreState, E, StoreActions>\nexport type ThunkDispatch<E = null> = ReduxThunkDispatch<StoreState, E, StoreActions>\n\ninterface CardClickAction<T = void> {\n  (stack: Stack, stackCard?: StackCard): ThunkResult<T>\n}\n\nexport const initialize = (newScoringType?: ScoringType): ThunkResult<void> => (dispatch, getState) => {\n  const scoringType = newScoringType == null ? getScoringType(getState()) : newScoringType\n  const availableCards = Array.from(Cards)\n  const cards: Card[] = []\n\n  for (let i = 0; i < 52; i++) {\n    const index = random(0, availableCards.length)\n    cards.push(...availableCards.splice(index, 1))\n  }\n\n  dispatch(initializeGame(scoringType, cards))\n}\n\nexport const clickCard: CardClickAction = (clickedStack, clickedCard) => (dispatch, getState) => {\n  if (clickedCard != null && clickedCard.selected) return dispatch(deselectCard())\n\n  const selection = getSelection(getState())\n  if (selection == null && clickedCard && clickedCard.card && !clickedCard.hidden)\n    return dispatch(selectCard(clickedStack, clickedCard))\n\n  if (clickedStack.type === StackType.foundation) {\n    const foundation = (selection && getFoundationStack(getState(), selection.card)) || null\n    if (foundation && selection) {\n      if (selection.stack.type === StackType.waste) dispatch(incrementScore(ScoreType.wasteToFoundation))\n      if (selection.stack.type === StackType.tableau) dispatch(incrementScore(ScoreType.tableauToFoundation))\n      dispatch(moveCards(selection.stack, foundation, selection.card))\n      dispatch(deselectCard())\n    }\n    return\n  }\n\n  if (clickedStack.type === StackType.tableau) {\n    if (selection == null && clickedCard && clickedCard.hidden) {\n      dispatch(checkpoint())\n      dispatch(incrementScore(ScoreType.revealCard))\n      dispatch(reveal(clickedStack))\n    }\n    if (selection != null && isValidMove(selection.card, clickedCard)) {\n      dispatch(checkpoint())\n      if (selection.stack.type === StackType.waste) dispatch(incrementScore(ScoreType.wasteToTableau))\n      if (selection.stack.type === StackType.foundation) dispatch(incrementScore(ScoreType.foundationToTableau))\n      dispatch(moveCards(selection.stack, clickedStack, selection.card))\n      dispatch(deselectCard())\n    }\n  }\n\n  if (clickedStack.type === StackType.stock) {\n    if (disallowClickStock(getState())) return\n    const waste = getWaste(getState())\n    const stock = getStock(getState())\n    dispatch(checkpoint())\n    if (selection) dispatch(deselectCard())\n    if (stock.cards.length > 0) {\n      dispatch(throwStock(stock, waste))\n    } else {\n      dispatch(recycleWaste(waste, stock))\n      dispatch(decrementDraws())\n    }\n  }\n}\n\nexport const doubleClickCard: CardClickAction = (stack, stackCard) => (dispatch, getState) => {\n  if (\n    stack.type === StackType.foundation ||\n    stack.type === StackType.stock ||\n    stackCard == null ||\n    stackCard.card == null\n  ) {\n    return\n  }\n\n  const foundation = getFoundationStack(getState(), stackCard.card)\n  if (!foundation) return\n\n  dispatch(checkpoint())\n  if (stack.type === StackType.waste) dispatch(incrementScore(ScoreType.wasteToFoundation))\n  if (stack.type === StackType.tableau) dispatch(incrementScore(ScoreType.tableauToFoundation))\n  dispatch(moveCards(stack, foundation, stackCard.card))\n  dispatch(deselectCard())\n}\n","import { Cards, StackCard } from '../lib/Card'\nimport { ColorScheme } from './ColorScheme'\nimport { getErrorImageData, getEmptyImageData, getHiddenImageData, getCardImageData } from './Card'\nimport { getCardBox } from './Layout'\n\nexport type Box = {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\nexport type Point = {\n  x: number\n  y: number\n}\n\nexport type Drawable = {\n  path: Path2D\n  box: Box\n}\n\nexport interface Drawer {\n  (context: DrawingContext): Drawable\n}\n\nexport interface DrawRoutine<T, R = Drawable> {\n  (context: DrawingContext, arg1: T | null): R | null\n}\n\nexport interface Handler {\n  (arg0: Drawable, arg1: Point): void\n}\n\nexport type Clickable = {\n  onClick?: Handler\n  onDoubleClick?: Handler\n}\n\nexport type SizeDetails = {\n  width: number\n  height: number\n}\n\nexport type DrawingContext = { ctx: CanvasRenderingContext2D; colorScheme: ColorScheme } & SizeDetails\n\nexport const getKey = ({ card: { suit, value }, selected }: StackCard) =>\n  `${suit}_${value}_${(selected || false).toString()}`\n\nexport const cardCache: Map<string, ImageData> = new Map()\n\nlet c2: HTMLCanvasElement\n\nexport const initialize = (context: DrawingContext) => {\n  const { width, height } = getCardBox(context)\n  cardCache.set('hidden', getHiddenImageData(context))\n  cardCache.set('empty', getEmptyImageData(context))\n  cardCache.set('error', getErrorImageData(context))\n  Cards.forEach((card) => {\n    cardCache\n      .set(getKey({ card, selected: true }), getCardImageData(context, { card, selected: true }))\n      .set(getKey({ card, selected: false }), getCardImageData(context, { card, selected: false }))\n  })\n\n  c2 = document.createElement('canvas')\n  c2.width = width\n  c2.height = height\n  context.ctx.clearRect(0, 0, width + 2, height + 2)\n}\n\nexport const writeDataToCanvas = (context: DrawingContext, data: ImageData, x: number, y: number) => {\n  const ctx2 = c2.getContext('2d')\n  ctx2?.putImageData(data, 0, 0)\n  context.ctx.drawImage(c2, x, y)\n}\n","const allFontSizes = Array.from<number, number>({ length: 200 }, (v, k) => k)\n\ninterface isBigEnough {\n  (width: number, height: number): boolean\n}\n\nexport const measureWidth = (ctx: CanvasRenderingContext2D, font: string, text: string) => {\n  ctx.font = font\n  return ctx.measureText(text).width\n}\n\nexport const measureHeight = (ctx: CanvasRenderingContext2D, font: string) => {\n  ctx.font = font\n  return ctx.measureText('M').width // close enough\n}\n\nconst searchFontSize = (\n  ctx: CanvasRenderingContext2D,\n  isBigEnough: isBigEnough,\n  text: string,\n  min: number,\n  max: number,\n): string => {\n  const index = Math.floor((max + min) / 2)\n  const font = `${allFontSizes[index]}px sans-serif`\n  const width = measureWidth(ctx, font, text)\n  const height = measureHeight(ctx, font)\n  if (min > max) return font\n  if (isBigEnough(width, height)) return searchFontSize(ctx, isBigEnough, text, min, index - 1)\n  return searchFontSize(ctx, isBigEnough, text, index + 1, max)\n}\n\nexport const search = (ctx: CanvasRenderingContext2D, isBigEnough: isBigEnough, text: string) =>\n  searchFontSize(ctx, isBigEnough, text, 0, allFontSizes.length - 1)\n","import * as React from 'react'\nimport { GameCtx } from '../components/GameCanvas'\nimport { Clickable, DrawingContext, Drawable } from '../drawing/Common'\n\nexport interface Drawer {\n  (context: DrawingContext): Drawable | null\n}\n\nexport const useDrawing = (draw: Drawer, events: Clickable = {}) => {\n  const gameContext = React.useContext(GameCtx)\n  const performCleanup = React.useRef(true)\n  const lastWidth = React.useRef(gameContext?.context.width ?? 0)\n  const lastHeight = React.useRef(gameContext?.context.height ?? 0)\n\n  // should only clear the rects if we haven't just resized the screen\n  // a screen resize will already clear the entire canvas\n  // if this isn't tracked, we end up drawing a new game and clear out the old sizes, leaving blank holes.\n\n  React.useEffect(() => {\n    if (!gameContext) return\n    performCleanup.current = !(\n      (lastHeight.current !== gameContext.context.height || lastWidth.current !== gameContext.context.width) &&\n      lastHeight.current > 0 &&\n      lastWidth.current > 0\n    )\n  }, [gameContext])\n\n  React.useEffect(() => {\n    if (gameContext == null) return\n    const { add, remove, context } = gameContext\n    const { ctx } = context\n\n    const thing = draw(context)\n    if (thing == null) return\n    add(thing, events)\n\n    return () => {\n      remove(thing.path)\n      if (performCleanup.current) {\n        ctx.clearRect(thing.box.x, thing.box.y, thing.box.width, thing.box.height)\n      }\n      performCleanup.current = true\n    }\n  })\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport * as offline from 'offline-plugin/runtime'\n\nimport App from './components/App'\n\nconst NODE_ENV = process.env.NODE_ENV\nif (NODE_ENV === 'production') {\n  offline.install({\n    onUpdateReady() {\n      offline.applyUpdate()\n    },\n    onUpdated() {\n      window.location.reload()\n    },\n  })\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import * as React from 'react'\n\nimport { Provider } from 'react-redux'\n\nimport configStore from '../store'\nimport { ThunkDispatch, initialize } from '../redux/thunks'\nimport Container from './Container'\n\nconst App: React.FC = () => {\n  const store = configStore()\n  const dispatch = store.dispatch as ThunkDispatch\n\n  dispatch(initialize())\n\n  return (\n    <Provider store={store}>\n      <Container />\n    </Provider>\n  )\n}\n\nexport { App }\n\nexport default React.memo(App)\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer, { StoreState, StoreActions } from './redux'\nimport subscribe from 'redux-subscribe-reselect'\nimport { saveScore, GameStateStore } from './redux/game-state'\nimport { getScoreStore } from './redux/selectors'\n\nexport default () => {\n  const middleware = []\n\n  middleware.push(thunk as ThunkMiddleware<StoreState, StoreActions>)\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware.push(\n      createLogger({\n        stateTransformer: (state: StoreState) => ({\n          gameState: state.gameState.present,\n          stacks: state.stacks.present,\n        }),\n      }),\n    )\n  }\n\n  const store = createStore(reducer, void 0, applyMiddleware(...middleware))\n  subscribe(store, getScoreStore, (score: GameStateStore) => saveScore(score))\n  return store\n}\n","import { combineReducers } from 'redux'\nimport stacks, { CardActions, StackStore } from './stacks'\nimport gameState, { GameStateActions, GameStateStore } from './game-state'\nimport { History, UndoableActions } from './undoable'\n\nexport type StoreActions = GameStateActions | CardActions | UndoableActions\n\nexport type StoreState = {\n  stacks: History<StackStore>\n  gameState: History<GameStateStore>\n}\n\nexport default combineReducers<StoreState, StoreActions>({ stacks, gameState })\n","import * as React from 'react'\nimport { hot } from 'react-hot-loader/root'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FireworksComponent from './Fireworks'\nimport { undo, redo } from '../redux/undoable'\nimport GameCanvas from './GameCanvas'\nimport StackElement from './StackElement'\n\nimport { getDraws, getShowing, getAllStacks } from '../redux/selectors'\nimport TopBar from './TopBar'\n\nconst Container: React.FC = () => {\n  const dispatch = useDispatch()\n  const stacks = useSelector(getAllStacks)\n  const draws = useSelector(getDraws)\n  const showing = useSelector(getShowing)\n\n  const handleKeyDown = React.useCallback(\n    (e: KeyboardEvent) => {\n      if (e.keyCode !== 90) return\n      if (e.ctrlKey && e.shiftKey) {\n        dispatch(redo())\n      } else if (e.ctrlKey) {\n        dispatch(undo())\n      }\n    },\n    [dispatch],\n  )\n\n  React.useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [handleKeyDown])\n\n  return (\n    <div>\n      <FireworksComponent />\n      <GameCanvas>\n        <TopBar />\n        {stacks.map((stack) => (\n          <StackElement key={`${stack.type}-${stack.index}`} stack={stack} showing={showing} draws={draws} />\n        ))}\n      </GameCanvas>\n    </div>\n  )\n}\n\nexport default hot(React.memo(Container))\n","import * as React from 'react'\nimport { useSelector } from 'react-redux'\nimport * as FireworksCanvas from 'fireworks-canvas'\nimport { getFoundation } from '../redux/selectors'\n\nconst Fireworks: React.FC = () => {\n  const ref = React.useRef<HTMLDivElement>(null)\n  const fireworksObj = React.useRef<FireworksCanvas>()\n  const foundation = useSelector(getFoundation)\n  const active = foundation.every((stack) => stack.cards.length === 13)\n  const display = active ? '' : 'none'\n\n  React.useEffect(() => {\n    if (ref.current == null) return\n    fireworksObj.current = new FireworksCanvas(ref.current)\n\n    const handleDocumentKeyDown = (ev: KeyboardEvent) => {\n      if (ev.keyCode === 27) fireworksObj.current?.stop()\n    }\n\n    document.addEventListener('keydown', handleDocumentKeyDown)\n\n    return () => {\n      fireworksObj.current?.destroy()\n    }\n  }, [ref, active])\n\n  React.useEffect(() => {\n    if (active) {\n      fireworksObj.current?.stop()\n    } else {\n      fireworksObj.current?.start()\n    }\n  }, [active])\n\n  return (\n    <div\n      style={{\n        display,\n        top: '0',\n        left: '0',\n        width: '100vw',\n        height: '100vh',\n        position: 'absolute',\n      }}\n      ref={ref}\n    />\n  )\n}\n\nexport default React.memo(Fireworks)\n","export enum ColorSchemeType {\n  dark,\n  light,\n}\n\nexport type ColorScheme = {\n  background: string\n  faceDown: string\n  buttonBorder: string\n  cardBorder: string\n  faceUp: string\n  selected: string\n  red: string\n  black: string\n  emptyColor: string\n  errorColor: string\n}\n\nexport const colorSchemes: { [key in ColorSchemeType]: ColorScheme } = {\n  [ColorSchemeType.dark]: {\n    background: '#000',\n    emptyColor: '#060606',\n    faceUp: '#222',\n    faceDown: '#333',\n    buttonBorder: '#ddd',\n    cardBorder: '#000',\n    black: '#999',\n    red: '#900',\n    selected: '#660',\n    errorColor: '#900',\n  },\n  [ColorSchemeType.light]: {\n    background: '#fff',\n    emptyColor: '#eee',\n    faceUp: '#ddd',\n    faceDown: '#ccc',\n    buttonBorder: '#000',\n    cardBorder: '#333',\n    black: '#333',\n    red: 'crimson',\n    selected: 'yellow',\n    errorColor: 'red',\n  },\n}\n","import { ValueType, SuitType, StackCard } from '../lib/Card'\nimport { Box, DrawingContext } from './Common'\nimport { isBig, isRed } from '../lib/util'\nimport { search, measureHeight } from './FontSize'\n\nimport { getCardBox, getVerticalMarginSize, getHorizontalMarginSize } from './Layout'\n\ntype Glyph = {\n  glyph: ValueType | SuitType\n  x: number\n  y: number\n  rotated: boolean\n  textAlign: CanvasTextAlign\n  textBaseline: CanvasTextBaseline\n  font: string\n}\n\ninterface GetCard {\n  (context: DrawingContext, card?: StackCard): ImageData\n}\n\nexport const getBoxPath = ({ x, y, width, height }: Box, radius = 10, smaller = 0) => {\n  const path = new Path2D()\n\n  const dx = x + smaller\n  const dy = y + smaller\n  const dw = width - smaller * 2\n  const dh = height - smaller * 2\n\n  path.moveTo(dx + radius, dy)\n  path.lineTo(dx + dw - radius, dy)\n  path.quadraticCurveTo(dx + dw, dy, dx + dw, dy + radius)\n  path.lineTo(dx + dw, dy + dh - radius)\n  path.quadraticCurveTo(dx + dw, dy + dh, dx + dw - radius, dy + dh)\n  path.lineTo(dx + radius, dy + dh)\n  path.quadraticCurveTo(dx, dy + dh, dx, dy + dh - radius)\n  path.lineTo(dx, dy + radius)\n  path.quadraticCurveTo(dx, dy, dx + radius, dy)\n  path.closePath()\n  return path\n}\n\nenum FontSizeType {\n  Regular,\n  Corner,\n}\n\nexport const getGlyphLocations = (context: DrawingContext, stackCard: StackCard): Glyph[] => {\n  const { card, hidden } = stackCard\n  if (hidden) return []\n\n  const { ctx } = context\n  const { width: cardWidth, height: cardHeight } = getCardBox(context)\n  const gutterHeight = getVerticalMarginSize(context)\n  const gutterWidth = getHorizontalMarginSize(context)\n\n  const cornerWidth = Math.floor(cardWidth * 0.2)\n  const figureOutFontSize = (type: FontSizeType) =>\n    search(\n      ctx,\n      (width: number, height: number) =>\n        type === FontSizeType.Corner\n          ? width > cornerWidth\n          : isBig(stackCard.card)\n          ? width > cardWidth - Math.floor(cardWidth / 5) * 2\n          : width > Math.floor(cardWidth / 5) && height > Math.floor(cardHeight / 20),\n      type === FontSizeType.Corner ? '10' : '\\u2665',\n    )\n\n  const fontSizes: { [key in FontSizeType]: string } = {\n    [FontSizeType.Corner]: figureOutFontSize(FontSizeType.Corner),\n    [FontSizeType.Regular]: figureOutFontSize(FontSizeType.Regular),\n  }\n\n  // 20% of width is reserved for corner pieces\n  // y of suit is margin + height of value + margin\n  const cornerHeight = measureHeight(ctx, fontSizes[FontSizeType.Corner])\n\n  const cornerValueX = gutterWidth / 2\n  const cornerValueY = gutterHeight / 2\n  const cornerSuitX = gutterWidth / 2\n  const cornerSuitY = gutterWidth / 2 + cornerHeight\n\n  // ctx.strokeRect(cornerValueX, cornerValueY, cornerWidth, cornerHeight)\n  // ctx.strokeRect(cornerSuitX, cornerSuitY, cornerWidth, cornerHeight)\n\n  const { suit, value } = card\n\n  // top-left, bottom-right glyphs\n  const positions = [\n    { x: cornerValueX, y: cornerValueY, glyph: value },\n    { x: cornerSuitX, y: cornerSuitY, glyph: suit },\n  ].reduce((memo, glyph) => {\n    memo.push(\n      {\n        ...glyph,\n        rotated: false,\n        textAlign: 'left',\n        textBaseline: 'top',\n        font: fontSizes[FontSizeType.Corner],\n      },\n      {\n        ...glyph,\n        rotated: true,\n        textAlign: 'left',\n        textBaseline: 'top',\n        font: fontSizes[FontSizeType.Corner],\n      },\n    )\n    return memo\n  }, [] as Glyph[])\n\n  type ypos = 0 | 1 | 2 | 3 | 4 | 5 | 6\n\n  type xpos = 0 | 1 | 2\n\n  const pos: { x: xpos; y: ypos }[] = []\n\n  if (\n    [\n      ValueType.ace,\n      ValueType.three,\n      ValueType.five,\n      ValueType.nine,\n      ValueType.jack,\n      ValueType.queen,\n      ValueType.king,\n    ].includes(value)\n  ) {\n    pos.push({ x: 1, y: 3 })\n  }\n\n  if ([ValueType.two, ValueType.three].includes(value)) {\n    pos.push({ x: 1, y: 0 }, { x: 1, y: 6 })\n  }\n\n  if (\n    [\n      ValueType.four,\n      ValueType.five,\n      ValueType.six,\n      ValueType.seven,\n      ValueType.eight,\n      ValueType.nine,\n      ValueType.ten,\n    ].includes(value)\n  ) {\n    pos.push({ x: 0, y: 0 }, { x: 2, y: 0 }, { x: 0, y: 6 }, { x: 2, y: 6 })\n  }\n\n  if ([ValueType.six, ValueType.seven, ValueType.eight].includes(value)) {\n    pos.push({ x: 0, y: 3 }, { x: 2, y: 3 })\n  }\n\n  if ([ValueType.seven, ValueType.ten, ValueType.eight].includes(value)) {\n    pos.push({ x: 1, y: 1 })\n  }\n\n  if ([ValueType.nine, ValueType.ten].includes(value)) {\n    pos.push({ x: 0, y: 2 }, { x: 2, y: 2 }, { x: 0, y: 4 }, { x: 2, y: 4 })\n  }\n\n  if ([ValueType.ten, ValueType.eight].includes(value)) {\n    pos.push({ x: 1, y: 5 })\n  }\n\n  const getTop = (y: ypos) => {\n    switch (y) {\n      case 0:\n      case 6:\n        return cardHeight * 0.2\n      case 1:\n      case 5:\n        return cardHeight * 0.3\n      case 2:\n      case 4:\n        return cardHeight * 0.4\n      case 3:\n        return cardHeight * 0.5\n    }\n  }\n\n  const getLeft = (x: xpos) => {\n    switch (x) {\n      case 0:\n        return cardWidth * 0.25\n      case 1:\n        return cardWidth * 0.5\n      case 2:\n        return cardWidth * 0.75\n    }\n  }\n\n  const getTextAlign = (x: xpos): CanvasTextAlign => {\n    switch (x) {\n      case 0:\n        return 'left'\n      case 1:\n        return 'center'\n      case 2:\n        return 'right'\n    }\n  }\n\n  pos.forEach(({ x, y }) => {\n    positions.push({\n      x: getLeft(x),\n      y: getTop(y),\n      glyph: suit,\n      textAlign: getTextAlign(x),\n      textBaseline: 'middle',\n      rotated: y > 3,\n      font: fontSizes[FontSizeType.Regular],\n    })\n  })\n\n  return positions\n}\n\nexport const getEmptyImageData: GetCard = (context: DrawingContext) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardBox(context)\n  const box = { x: 0, y: 0, width, height }\n  ctx.clearRect(0, 0, width, height)\n  ctx.fillStyle = colorScheme.emptyColor\n  ctx.fillRect(box.x, box.y, box.width, box.height)\n  ctx.lineWidth = 0.5\n  ctx.strokeStyle = colorScheme.cardBorder\n  ctx.strokeRect(box.x, box.y, box.width, box.height)\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n\nexport const getHiddenImageData: GetCard = (context: DrawingContext) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardBox(context)\n  const box = { x: 0, y: 0, width, height }\n  ctx.clearRect(box.x, box.y, box.width, box.height)\n  ctx.strokeStyle = colorScheme.cardBorder\n  ctx.lineWidth = 2\n  ctx.stroke(getBoxPath(box, 10))\n  ctx.fillStyle = colorScheme.faceDown\n  ctx.fill(getBoxPath(box, 10, 0.5))\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n\nexport const getCardImageData: GetCard = (context: DrawingContext, card: StackCard) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardBox(context)\n  const box = { x: 0, y: 0, width, height }\n\n  ctx.clearRect(box.x, box.y, box.width, box.height)\n  ctx.strokeStyle = colorScheme.cardBorder\n  ctx.lineWidth = 2\n  ctx.stroke(getBoxPath(box, 10))\n\n  ctx.fillStyle = card.selected ? colorScheme.selected : colorScheme.faceUp\n  ctx.fill(getBoxPath(box, 10, 0.5))\n\n  for (const glyph of getGlyphLocations(context, card)) {\n    ctx.fillStyle = isRed(card.card) ? colorScheme.red : colorScheme.black\n    ctx.textAlign = glyph.textAlign\n    ctx.textBaseline = glyph.textBaseline\n    ctx.font = glyph.font\n    if (glyph.rotated) {\n      ctx.save()\n      ctx.translate(width, height)\n      ctx.rotate(Math.PI)\n    }\n    ctx.fillText(glyph.glyph, glyph.x + box.x * (glyph.rotated ? -1 : 1), glyph.y + box.y * (glyph.rotated ? -1 : 1))\n    if (glyph.rotated) ctx.restore()\n  }\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n\nexport const getErrorImageData: GetCard = (context: DrawingContext) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardBox(context)\n  const box = { x: 0, y: 0, width, height }\n  ctx.clearRect(box.x, box.y, box.width, box.height)\n  ctx.fillStyle = colorScheme.emptyColor\n  ctx.fill(getBoxPath(box))\n  ctx.font = '48px sans-serif'\n  ctx.textAlign = 'center'\n  ctx.textBaseline = 'middle'\n  ctx.fillStyle = colorScheme.errorColor\n  ctx.fillText('X', box.width / 2, box.height / 2)\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n","import * as React from 'react'\nimport { SizeDetails } from '../drawing/Common'\n\ntype CanvasSizeReturn = {\n  ctx?: CanvasRenderingContext2D\n  width?: number\n  height?: number\n  handleCanvasRef: (canvas: HTMLCanvasElement) => void\n}\n\nexport const useCanvasSize = (): CanvasSizeReturn => {\n  const [canvas, setCanvas] = React.useState<HTMLCanvasElement | null>(null)\n  const handleCanvasRef = React.useCallback((canvas: HTMLCanvasElement) => canvas && setCanvas(canvas), [])\n\n  const getSize = () => ({ width: window.innerWidth, height: window.innerHeight })\n\n  const [size, setSize] = React.useState<SizeDetails>()\n\n  React.useEffect(() => {\n    if (!canvas) return\n    const ctx = canvas.getContext('2d')\n    if (ctx == null) return\n    let tid: number\n    const handleSize = () => {\n      if (tid) clearTimeout(tid)\n      tid = window.setTimeout(() => setSize(getSize()), 300)\n    }\n    window.addEventListener('resize', handleSize)\n    return () => {\n      window.removeEventListener('resize', handleSize)\n    }\n  })\n\n  const retVal = React.useMemo(\n    () => ({\n      handleCanvasRef,\n      ...(canvas && {\n        ctx: canvas.getContext('2d') as CanvasRenderingContext2D,\n        ...(size ?? getSize()),\n      }),\n    }),\n    [size, handleCanvasRef, canvas],\n  )\n\n  return retVal\n}\n","import * as React from 'react'\nimport { GameCtx } from './GameCanvas'\nimport { drawStack, DrawableStack, StackDrawingContext, getStackDrawingContext } from '../drawing/Stack'\nimport { Stack, StackDirection, StackType } from '../lib/Card'\nimport { useDispatch } from 'react-redux'\nimport { clickCard, doubleClickCard } from '../redux/thunks'\nimport { Point } from '../drawing/Common'\nimport { useDrawing } from '../hooks/useDrawing'\nimport { useMemo } from 'react'\n\nconst StackElement: React.FC<{\n  stack: Stack\n  draws: number\n  showing: number\n}> = ({ stack, draws, showing }) => {\n  const dispatch = useDispatch()\n  const gameContext = React.useContext(GameCtx)\n\n  const drawingOpts = useMemo<StackDrawingContext | null>(\n    () => gameContext && getStackDrawingContext(gameContext.context, stack, { draws, showing }),\n    [gameContext, stack, draws, showing],\n  )\n\n  const onDoubleClick = React.useCallback(\n    (thing: DrawableStack, point: Point) => {\n      if (gameContext == null || drawingOpts == null) return\n      const prop = stack.direction === StackDirection.horizontal ? 'x' : 'y'\n      const cards = stack.cards.slice(-drawingOpts.max)\n      const index = Math.min(cards.length - 1, Math.floor((point[prop] - drawingOpts.box[prop]) / drawingOpts.space))\n      if (stack.type !== StackType.waste || index === cards.length - 1) dispatch(doubleClickCard(stack, cards[index]))\n    },\n    [dispatch, gameContext, drawingOpts, stack],\n  )\n\n  const onClick = React.useCallback(\n    (thing: DrawableStack, point: Point) => {\n      if (gameContext == null || drawingOpts == null) return\n      const prop = stack.direction === StackDirection.horizontal ? 'x' : 'y'\n      const cards = stack.cards.slice(-drawingOpts.max)\n      const index = Math.min(cards.length - 1, Math.floor((point[prop] - drawingOpts.box[prop]) / drawingOpts.space))\n      if (stack.type !== StackType.waste || index === cards.length - 1) dispatch(clickCard(stack, cards[index]))\n    },\n    [dispatch, gameContext, drawingOpts, stack],\n  )\n\n  useDrawing((context) => drawStack(context, drawingOpts), { onClick, onDoubleClick })\n\n  return null\n}\n\nexport { StackElement }\nexport default React.memo(StackElement)\n","import { Stack, StackDirection, StackType } from '../lib/Card'\nimport { writeDataToCanvas, cardCache, getKey, DrawingContext, Drawable, DrawRoutine, Box } from './Common'\nimport { getStackCardOffsetWidth, getStackCardOffsetHeight, getStackBox } from './Layout'\n\nexport type DrawableStack = Drawable\n\nexport type StackDrawingContext = StackDrawingOptions & {\n  stack: Stack\n  space: number\n  max: number\n  box: Box\n}\n\nexport type StackDrawingOptions = {\n  draws: number\n  showing: number\n}\n\nexport const getStackDrawingContext = (\n  context: DrawingContext,\n  stack: Stack,\n  opts: StackDrawingOptions,\n): StackDrawingContext => {\n  const gutterWidth = getStackCardOffsetWidth(context)\n  const gutterHeight = getStackCardOffsetHeight(context)\n\n  const max =\n    stack.type === StackType.stock || stack.type === StackType.foundation\n      ? 1\n      : stack.type === StackType.waste\n      ? opts.showing || 0\n      : stack.cards.length\n  const box = getStackBox(context, stack, max)\n\n  const space = stack.direction === StackDirection.horizontal ? gutterWidth : gutterHeight\n\n  return {\n    stack,\n    draws: opts.draws,\n    showing: opts.showing,\n    space,\n    box,\n    max,\n  }\n}\n\nexport const drawStack: DrawRoutine<StackDrawingContext> = (context, drawingOpts) => {\n  if (drawingOpts == null) return null\n  const { stack, draws, max, space, box } = drawingOpts\n  const cards = stack.cards.slice(-max)\n\n  const path = new Path2D()\n  path.rect(box.x, box.y, box.width, box.height)\n  path.closePath()\n\n  const empty = cards.length === 0\n  const error = stack.type === StackType.stock && empty && draws === 0\n  const elements = []\n\n  if (error) elements.push({ data: cardCache.get('error'), x: box.x, y: box.y })\n  else if (empty) elements.push({ data: cardCache.get('empty'), x: box.x, y: box.y })\n  else\n    cards.forEach((card, i) => {\n      const drawing = card.hidden ? cardCache.get('hidden') : cardCache.get(getKey(card))\n      if (drawing) {\n        const x = stack.direction === StackDirection.horizontal ? i * space : 0\n        const y = stack.direction === StackDirection.horizontal ? 0 : i * space\n        elements.push({ data: drawing, x: box.x + x, y: box.y + y })\n      }\n    })\n\n  for (const { data, x, y } of elements) data && writeDataToCanvas(context, data, x, y)\n  return { path, box }\n}\n","import * as React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getScoringType, getScore } from '../redux/selectors'\nimport { ScoringType } from '../redux/game-state'\nimport { initialize } from '../redux/thunks'\nimport { useDrawing } from '../hooks/useDrawing'\nimport { drawLabel, getLabelDrawingContext } from '../drawing/Label'\nimport { GameCtx } from './GameCanvas'\nimport { getHorizontalMarginSize, getVerticalMarginSize } from '../drawing/Layout'\n\nconst TopBar: React.FC = () => {\n  const dispatch = useDispatch()\n  const gameContext = React.useContext(GameCtx)\n  const scoringType = useSelector(getScoringType)\n  const currentScore = useSelector(getScore)\n\n  const otherGameType = React.useMemo(\n    () => (scoringType === ScoringType.vegas ? ScoringType.regular : ScoringType.vegas),\n    [scoringType],\n  )\n\n  const deets = React.useMemo(() => {\n    if (gameContext == null) return null\n\n    const newGame = getLabelDrawingContext(gameContext.context, {\n      x: 5,\n      y: 5,\n      height: 15,\n      padding: 5,\n      label: 'New Game',\n      border: true,\n    })\n\n    const switchGame = getLabelDrawingContext(gameContext.context, {\n      x: newGame.box.x + newGame.box.width + getHorizontalMarginSize(gameContext.context),\n      y: 5,\n      height: 15,\n      padding: 5,\n      label: `Switch to ${ScoringType[otherGameType]}`,\n      border: true,\n    })\n\n    const score = getLabelDrawingContext(gameContext.context, {\n      x: 0,\n      y: 5,\n      height: 15,\n      padding: 5,\n      label: `Score: ${currentScore}`,\n      border: false,\n    })\n\n    const version = getLabelDrawingContext(gameContext.context, {\n      x: 0,\n      y: 5,\n      height: 15,\n      padding: 5,\n      label: process.env.version || '',\n      border: false,\n    })\n\n    // position the x of the switch game type button to the right of the new game button\n    switchGame.box.x = newGame.box.x + newGame.box.width + getHorizontalMarginSize(gameContext.context)\n\n    // position the x of the score to the very right of the board\n    score.box.x = gameContext.context.width - score.box.width - getHorizontalMarginSize(gameContext.context)\n\n    // version goes in the bottom right\n    version.box.x = gameContext.context.width - version.box.width - getHorizontalMarginSize(gameContext.context)\n    version.box.y = gameContext.context.height - version.box.height - getVerticalMarginSize(gameContext.context)\n\n    return { newGame, switchGame, score, version }\n  }, [gameContext, currentScore, otherGameType])\n\n  const handleNewGame = React.useCallback(() => dispatch(initialize()), [dispatch])\n\n  const handleSwitchGame = React.useCallback(() => dispatch(initialize(otherGameType)), [dispatch, otherGameType])\n\n  useDrawing((context) => deets && drawLabel(context, deets.newGame), { onClick: handleNewGame })\n\n  useDrawing((context) => deets && drawLabel(context, deets.switchGame), { onClick: handleSwitchGame })\n\n  useDrawing((context) => deets && drawLabel(context, deets.score))\n\n  useDrawing((context) => deets && drawLabel(context, deets.version))\n\n  return null\n}\n\nexport { TopBar }\nexport default React.memo(TopBar)\n","import { Drawable, DrawRoutine, DrawingContext, Box } from './Common'\n\nimport { search, measureWidth } from './FontSize'\n\ntype LabelDrawingOpts = {\n  label: string\n  padding: number\n  x?: number\n  y: number\n  height: number\n  border?: boolean\n}\n\ntype LabelDrawingContext = LabelDrawingOpts & {\n  box: Box\n  font: string\n}\n\nexport const getLabelDrawingContext = (context: DrawingContext, opts: LabelDrawingOpts): LabelDrawingContext => {\n  const isBigEnough = (_: number, boxHeight: number) => boxHeight > height\n  const { ctx } = context\n  const { x, y, height, label } = opts\n  const font = search(context.ctx, isBigEnough, label)\n  const width = measureWidth(ctx, font, label)\n  return {\n    ...opts,\n    box: { x: x ?? 0, y, width: width + opts.padding * 2, height: height + opts.padding * 2 },\n    font,\n  }\n}\n\nexport const drawLabel: DrawRoutine<LabelDrawingContext, Drawable> = (context, drawingOpts) => {\n  if (drawingOpts == null) return null\n  const { ctx } = context\n  const { font, box, label, padding, border } = drawingOpts\n  ctx.save()\n  ctx.beginPath()\n  ctx.rect(box.x, box.y, box.width, box.height)\n  ctx.closePath()\n  ctx.clip()\n\n  ctx.font = font\n  ctx.textAlign = 'left'\n  ctx.textBaseline = 'top'\n  ctx.fillText(label, box.x + padding, box.y + padding)\n\n  if (border) {\n    ctx.strokeStyle = context.colorScheme.buttonBorder\n    ctx.strokeRect(box.x, box.y, box.width, box.height)\n  }\n\n  ctx.restore()\n\n  const path = new Path2D()\n  path.rect(box.x, box.y, box.width, box.height)\n  path.closePath()\n\n  return { box, path }\n}\n"],"sourceRoot":""}