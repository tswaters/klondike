{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/Card.ts","webpack:///./src/redux/selectors.ts","webpack:///./src/lib/Scoring.ts","webpack:///./src/drawing/ColorScheme.ts","webpack:///./src/lib/util.ts","webpack:///./src/redux/thunks.ts","webpack:///./src/redux/undoable.ts","webpack:///./src/components/GameCanvas.tsx","webpack:///./src/drawing/Layout.ts","webpack:///./src/redux/init.ts","webpack:///./src/redux/stacks.ts","webpack:///./src/redux/game-state.ts","webpack:///./src/lib/Persist.ts","webpack:///./src/css/index.css","webpack:///./src/drawing/Common.ts","webpack:///./src/index.tsx","webpack:///./src/components/App.tsx","webpack:///./src/components/Container.tsx","webpack:///./src/components/Fireworks.tsx","webpack:///./src/drawing/Card.ts","webpack:///./src/drawing/FontSize.ts","webpack:///./src/hooks/useCanvasSize.ts","webpack:///./src/components/StackElement.tsx","webpack:///./src/drawing/Stack.ts","webpack:///./src/hooks/useDrawing.ts","webpack:///./src/components/Options.tsx","webpack:///./src/redux/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","ValueType","SuitType","StackDirection","StackType","Cards","values","suit","freeze","getStacks","createSelector","state","stacks","present","getFoundation","filter","stack","type","foundation","getTableau","tableau","getGameWon","every","cards","getHiddenCard","reduce","acc","topCard","getTopCard","hidden","stackCard","getMovableToFoundation","some","f","isValidFoundationMove","getStock","stock","getWaste","waste","getFoundationStack","_","find","getGameState","gameState","score","getTheme","theme","getScore","getType","scoringType","getDraws","draws","getOverDrawn","ScoringType","vegas","getShowing","showing","getNumber","number","getSelection","selection","disallowClickStock","overDrawn","ScoreType","getScoreChange","scoreType","regular","tableauToFoundation","wasteToFoundation","revealCard","wasteToTableau","foundationToTableau","ColorSchemeType","colorSchemes","dark","background","color","emptyColor","faceUp","hiddenColor1","hiddenColor2","buttonBorder","cardBorder","black","red","selected","errorColor","light","rnd","Math","imul","min","max","floor","sumConsecutive","random","sameStack","stack1","stack2","index","sameCard","stackCard1","stackCard2","card","stackContainsCard","stackCards","item","isSequential","card1","valueToInt","isRed","diamond","heart","includes","isBlack","club","spade","isBig","ace","jack","queen","king","desintation","isValidTableauMove","destination","parseInt","newType","initializeGame","newNumber","newTheme","dispatch","getState","availableCards","Array","from","rando","initialize","performMoves","movable","checkAndPerformCardReveal","checkAndPerformFoundationMove","checkpoint","incrementScore","revealTop","deselectCard","moveCards","clickCard","cardSelection","selectCard","drawStockCards","recycleWaste","incrementDraws","doubleClickCard","destroy","createAction","undo","redo","undoable","reducer","initialState","past","future","action","match","previous","next","newFuture","newPresent","GameCtx","React","createContext","intersect","evt","pointsRef","nativeEvent","e","canvas","target","point","x","offsetX","y","offsetY","ctx","getContext","path","keys","isPointInPath","thing","GameCanvas","children","rest","useRef","Map","clickHandlers","doubleClickHandlers","width","height","handleCanvasRef","useCanvasSize","colorSchemeType","useSelector","colorScheme","context","useMemo","useLayoutEffect","events","current","set","onClick","onDoubleClick","delete","handleCanvasDoubleClick","useCallback","event","handleCanvasClick","id","ref","innerWidth","innerHeight","Provider","memo","getStackCardOffsetWidth","getStackCardOffsetHeight","getVerticalMarginSize","getHorizontalMarginSize","getTopbarBox","getCardDimensions","horizontalMargin","verticalMargin","topBarBox","stackCardOffsetHeight","usedVerticalSpace","usedHorizontalSpace","maxWidth","maxHeight","getStackBox","topBar","cardLength","usedWidth","baseX","stackWidth","direction","horizontal","stackHeight","vertical","stacksSlice","createSlice","reducers","shiftCards","payload","to","toStack","fromStack","map","thisStack","thisCard","selectedCard","extraReducers","builder","addCase","a","actions","from_card","findIndex","reverse","gameStateSlice","retrieve","PersistanceType","addMatcher","changeTheme","persist","localStorage","setItem","JSON","stringify","err","init","getItem","parse","c2","getKey","toString","cardCache","getHiddenImageData","getEmptyImageData","getErrorImageData","forEach","getCardImageData","document","createElement","clearRect","writeDataToCanvas","ctx2","putImageData","drawImage","offline","install","applyUpdate","location","reload","ReactDOM","render","getElementById","App","store","hot","useDispatch","cssVars","colors","showOptions","setShowOptions","useState","handleCloseOptions","handleShowOptions","handleNewGame","useEffect","handleMouseDown","button","preventDefault","handleKeyDown","keyCode","prev","ctrlKey","shiftKey","addEventListener","removeEventListener","style","onClose","className","optionsModal","optionsMask","tabIndex","label","game","fireworksObj","active","display","FireworksCanvas","ev","stop","start","fireworks","FontSizeType","getBoxPath","radius","smaller","Path2D","dx","dy","dw","dh","moveTo","lineTo","quadraticCurveTo","closePath","getGlyphLocations","cardWidth","cardHeight","gutterHeight","gutterWidth","cornerWidth","figureOutFontSize","search","Corner","fontSizes","Regular","cornerValueX","cornerValueY","cornerSuitX","cornerSuitY","measureHeight","positions","glyph","rotated","textAlign","textBaseline","font","pos","three","five","nine","two","four","six","seven","eight","ten","getTop","getLeft","getTextAlign","box","fillStyle","fillRect","lineWidth","strokeStyle","strokeRect","getImageData","tile","tileCtx","gradient","createLinearGradient","addColorStop","stroke","save","clip","createPattern","restore","fill","translate","rotate","PI","fillText","allFontSizes","v","k","measureWidth","text","measureText","searchFontSize","isBigEnough","setCanvas","getSize","size","setSize","tid","handleSize","clearTimeout","setTimeout","StackElement","Infinity","gameContext","useContext","drawingOpts","getStackDrawingContext","prop","space","useDrawing","drawStack","opts","rect","empty","error","elements","drawing","draw","performCleanup","lastWidth","lastHeight","add","remove","OptionCtx","Option","options","selector","props","optionCtx","newThing","setNewThing","handleChangeThing","handleSubmit","htmlFor","onChange","option","checked","displayName","typeOptions","colorSchemeOptions","Options","Set","cb","onSubmit","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","combineReducers","configureStore"],"mappings":"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","file":"klondike.643c45b28369d314e349.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([27,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export enum ValueType {\n  ace = 'A',\n  two = '2',\n  three = '3',\n  four = '4',\n  five = '5',\n  six = '6',\n  seven = '7',\n  eight = '8',\n  nine = '9',\n  ten = '10',\n  jack = 'J',\n  queen = 'Q',\n  king = 'K',\n}\n\nexport enum SuitType {\n  heart = '\\u2665',\n  diamond = '\\u2666',\n  spade = '\\u2660',\n  club = '\\u2663',\n}\n\nexport type Card = {\n  suit: SuitType\n  value: ValueType\n}\n\nexport type StackCard = {\n  card: Card\n  hidden?: boolean\n  selected?: boolean\n}\n\nexport enum StackDirection {\n  horizontal = 'horizontal',\n  vertical = 'vertical',\n}\n\n//\n//  1 2   3 3 3 3\n//  4 4 4 4 4 4 4\n//\n// 1 - stock\n// 2 - waste\n// 3 - foundation\n// 4 - tableau\n//\n\nexport enum StackType {\n  tableau = 'tableau',\n  foundation = 'foundation',\n  stock = 'stock',\n  waste = 'waste',\n}\n\nexport type Stack = {\n  cards: StackCard[]\n  selection: StackCard | null\n  type: StackType\n  direction: StackDirection | null\n  index: number\n}\n\nconst Cards: Card[] = []\n\nfor (const value of Object.values(ValueType)) {\n  for (const suit of Object.values(SuitType)) {\n    Cards.push({ suit, value })\n  }\n}\n\nObject.freeze(Cards)\n\nexport { Cards }\n","import { createSelector } from 'reselect'\nimport { StackType, StackCard } from '../lib/Card'\nimport { getTopCard, isValidFoundationMove } from '../lib/util'\nimport { ScoringType } from '../lib/Scoring'\nimport { StoreState, CardSelection } from './index'\n\nexport const getStacks = createSelector(\n  (state: StoreState) => state.stacks.present.stacks,\n  (stacks) => stacks,\n)\n\nconst getFoundation = createSelector(getStacks, (stacks) =>\n  stacks.filter((stack) => stack.type === StackType.foundation),\n)\n\nexport const getTableau = createSelector(getStacks, (stacks) =>\n  stacks.filter((stack) => stack.type === StackType.tableau),\n)\n\nexport const getGameWon = createSelector(getFoundation, (foundation) =>\n  foundation.every((stack) => stack.cards.length === 13),\n)\n\nexport const getHiddenCard = createSelector(getTableau, (stacks) =>\n  stacks.reduce<CardSelection | null>((acc, stack) => {\n    if (acc) return acc\n    const topCard = getTopCard(stack)\n    if (topCard && topCard.hidden) return { stack, stackCard: topCard }\n    return null\n  }, null),\n)\n\nexport const getMovableToFoundation = createSelector([getStacks, getFoundation], (stacks, foundation) =>\n  stacks\n    .filter((stack) => stack.type !== StackType.foundation)\n    .reduce<CardSelection | null>((acc, stack) => {\n      if (acc) return acc\n      const topCard = getTopCard(stack)\n      if (topCard == null || topCard.hidden) return acc\n      if (foundation.some((f) => isValidFoundationMove(topCard, getTopCard(f)))) return { stack, stackCard: topCard }\n      return null\n    }, null),\n)\n\nexport const getStock = createSelector(\n  getStacks,\n  (stacks) => stacks.filter((stack) => stack.type === StackType.stock)[0],\n)\n\nexport const getWaste = createSelector(\n  getStacks,\n  (stacks) => stacks.filter((stack) => stack.type === StackType.waste)[0],\n)\n\nexport const getFoundationStack = createSelector(\n  getFoundation,\n  (_: unknown, stackCard: StackCard) => stackCard,\n  (foundation, stackCard) => foundation.find((stack) => isValidFoundationMove(stackCard, getTopCard(stack))),\n)\n\nexport const getGameState = createSelector(\n  (state: StoreState) => state.gameState.present,\n  (score) => score,\n)\n\nexport const getTheme = createSelector(getGameState, (gameState) => gameState.theme)\n\nexport const getScore = createSelector(getGameState, (gameState) => gameState.score)\n\nexport const getType = createSelector(getGameState, (gameState) => gameState.scoringType)\n\nexport const getDraws = createSelector(getGameState, (gameState) => gameState.draws)\n\nconst VEGAS_DRAW_LIMIT = 3\nexport const getOverDrawn = createSelector(\n  [getDraws, getType],\n  (draws, scoringType) => scoringType === ScoringType.vegas && draws + 1 > VEGAS_DRAW_LIMIT,\n)\n\nexport const getShowing = createSelector(getGameState, ({ showing }) => showing)\n\nexport const getNumber = createSelector(getGameState, ({ number }) => number)\n\nexport const getSelection = createSelector(getStacks, (stacks) => {\n  const stack = stacks.find((stack) => stack.selection != null)\n  if (stack) return { stackCard: stack.selection, stack: stack }\n  return null\n})\n\nexport const disallowClickStock = createSelector(\n  [getStock, getOverDrawn],\n  (stock, overDrawn) => stock.cards.length === 0 && overDrawn,\n)\n","export enum ScoringType {\n  vegas,\n  regular,\n}\n\nexport enum ScoreType {\n  wasteToTableau = 'wasteToTableau',\n  wasteToFoundation = 'wasteToFoundation',\n  tableauToFoundation = 'tableauToFoundation',\n  revealCard = 'revealCard',\n  foundationToTableau = 'foundationToTableau',\n}\n\nexport const getScoreChange = (scoringType: ScoringType, scoreType: ScoreType) => {\n  let score = 0\n  if (scoringType === ScoringType.regular && scoreType === ScoreType.tableauToFoundation) {\n    score = 10\n  } else if (\n    scoreType === ScoreType.wasteToFoundation ||\n    (scoringType === ScoringType.vegas && scoreType === ScoreType.tableauToFoundation) ||\n    (scoringType === ScoringType.regular && scoreType === ScoreType.revealCard) ||\n    (scoringType === ScoringType.regular && scoreType === ScoreType.wasteToTableau)\n  ) {\n    score = 5\n  } else if (scoringType === ScoringType.regular && ScoreType.foundationToTableau) {\n    score = -10\n  } else if (scoringType === ScoringType.vegas && scoreType === ScoreType.foundationToTableau) {\n    score = -5\n  }\n  return score\n}\n","// add variables to `style` declaration\ndeclare module 'csstype' {\n  interface Properties {\n    '--background'?: string\n    '--emptyColor'?: string\n    '--faceUp'?: string\n    '--hiddenColor1'?: string\n    '--hiddenColor2'?: string\n    '--buttonBorder'?: string\n    '--cardBorder'?: string\n    '--black'?: string\n    '--red'?: string\n    '--selected'?: string\n    '--errorColor'?: string\n    '--labelColor'?: string\n  }\n}\n\nexport enum ColorSchemeType {\n  dark,\n  light,\n}\n\nexport type ColorScheme = {\n  background: string\n  hiddenColor1: string\n  hiddenColor2: string\n  buttonBorder: string\n  cardBorder: string\n  faceUp: string\n  selected: string\n  red: string\n  black: string\n  emptyColor: string\n  errorColor: string\n  color: string\n}\n\nexport const colorSchemes: { [key in ColorSchemeType]: ColorScheme } = {\n  [ColorSchemeType.dark]: {\n    background: '#000',\n    color: '#fff',\n    emptyColor: '#060606',\n    faceUp: '#ddd',\n    hiddenColor1: '#404dac',\n    hiddenColor2: '#263278',\n    buttonBorder: '#ddd',\n    cardBorder: '#000',\n    black: '#505050',\n    red: '#f03a17',\n    selected: '#fff000',\n    errorColor: '#900',\n  },\n  [ColorSchemeType.light]: {\n    background: '#ffffff',\n    color: '#000',\n    emptyColor: '#f5f5f5',\n    faceUp: '#ddd',\n    hiddenColor1: '#606dbc',\n    hiddenColor2: '#465298',\n    buttonBorder: '#000',\n    cardBorder: '#000',\n    black: '#505050',\n    red: '#f03a17',\n    selected: '#fff000',\n    errorColor: 'red',\n  },\n}\n","import { Card, ValueType, SuitType, Stack, StackCard } from './Card'\n\n// minstd_rand\nexport const rnd = (s: number) => {\n  const rnd = () => ((2 ** 31 - 1) & (s = Math.imul(48271, s))) / 2 ** 31\n  rnd() // first call is always junk\n  return (min: number, max: number) => Math.floor(rnd() * max) + min\n}\n\nexport const sumConsecutive = (i: number) => (i * (i + 1)) / 2\n\nexport const getTopCard = (stack: Stack): StackCard | null => stack.cards[stack.cards.length - 1] || null\n\nexport const random = (min: number, max: number): number => Math.floor(Math.random() * max) + min\n\n// for simplicity, these routines would just use strict object comparison\n// however, if doing that, any changes to the store in a thunk would invalidate variable reference\n// this is useful for comparing a selected, or checking if stacks are the same before modifying them\n// so, we compare both value/suit when doing card comparisons, and type/index for stack comparisons\n\nexport const sameStack = (stack1: Stack, stack2: Stack) => stack1.type === stack2.type && stack1.index === stack2.index\n\nexport const sameCard = (stackCard1: StackCard, stackCard2: StackCard) =>\n  stackCard1.card.value === stackCard2.card.value && stackCard1.card.suit === stackCard2.card.suit\n\nexport const stackContainsCard = (stackCards: StackCard[], stackCard: StackCard) =>\n  stackCards.some((item: StackCard) => sameCard(item, stackCard))\n\nexport const isSequential = (card: Card, card1: Card) => valueToInt(card1.value) + 1 === valueToInt(card.value)\n\nexport const isRed = (card: Card) => [SuitType.diamond, SuitType.heart].includes(card.suit)\n\nexport const isBlack = (card: Card) => [SuitType.club, SuitType.spade].includes(card.suit)\n\nexport const isBig = (card: Card) =>\n  [ValueType.ace, ValueType.jack, ValueType.queen, ValueType.king].includes(card.value)\n\nexport const isValidFoundationMove = (stackCard: StackCard, desintation: StackCard | null) =>\n  desintation == null\n    ? stackCard.card.value === ValueType.ace\n    : desintation.card.suit === stackCard.card.suit && isSequential(stackCard.card, desintation.card)\n\nexport const isValidTableauMove = (stackCard: StackCard, destination: StackCard | null) => {\n  return destination == null\n    ? stackCard.card.value === ValueType.king\n    : isSequential(destination.card, stackCard.card) &&\n        ((isRed(stackCard.card) && isBlack(destination.card)) || (isBlack(stackCard.card) && isRed(destination.card)))\n}\n\nconst valueToInt = (value: ValueType): number => {\n  if (value === ValueType.ace) return 1\n  if (value === ValueType.jack) return 11\n  if (value === ValueType.queen) return 12\n  if (value === ValueType.king) return 13\n  return parseInt(value, 10)\n}\n","import { AppThunk, CardSelection } from '.'\nimport { isValidTableauMove, rnd } from '../lib/util'\nimport { StackType, Card, Cards } from '../lib/Card'\nimport { ScoringType, ScoreType } from '../lib/Scoring'\nimport { ColorSchemeType } from '../drawing/ColorScheme'\n\nimport { initialize } from './init'\nimport { moveCards, deselectCard, selectCard, revealTop, drawStockCards, recycleWaste } from './stacks'\nimport {\n  getSelection,\n  getFoundationStack,\n  disallowClickStock,\n  getWaste,\n  getStock,\n  getType,\n  getMovableToFoundation,\n  getHiddenCard,\n  getNumber,\n  getTheme,\n} from './selectors'\nimport { checkpoint } from './undoable'\nimport { incrementScore, incrementDraws } from './game-state'\n\nexport const newType = (newType?: ScoringType) =>\n  initializeGame({ newNumber: Math.floor(Math.random() * 1000), newType })\n\nexport const newNumber = (newNumber?: number) =>\n  initializeGame({ newNumber: newNumber == null ? Math.floor(Math.random() * 1000) : newNumber })\n\ntype InitOptions = { newType?: ScoringType; newNumber?: number; newTheme?: ColorSchemeType }\n\nexport const initializeGame = ({ newType, newNumber, newTheme }: InitOptions): AppThunk => (dispatch, getState) => {\n  const number = newNumber == null ? getNumber(getState()) : newNumber\n  const scoringType = newType == null ? getType(getState()) : newType\n  const theme = newTheme == null ? getTheme(getState()) : newTheme\n\n  const availableCards = Array.from(Cards)\n  const cards: Card[] = []\n\n  const rando = rnd(number)\n\n  for (let i = 0; i < 52; i += 1) {\n    const index = rando(0, availableCards.length)\n    const [card] = availableCards.splice(index, 1)\n    cards.push(card)\n  }\n\n  dispatch(initialize({ scoringType, cards, number, theme }))\n}\n\nexport const performMoves = (): AppThunk => (dispatch, getState) => {\n  let movable: CardSelection | null\n  while ((movable = getMovableToFoundation(getState()) || getHiddenCard(getState()))) {\n    if (movable.stackCard?.hidden ?? false) {\n      dispatch(checkAndPerformCardReveal(movable))\n    } else {\n      dispatch(checkAndPerformFoundationMove(movable))\n    }\n  }\n}\n\nconst checkAndPerformCardReveal = (selection: CardSelection): AppThunk => (dispatch) => {\n  if (selection == null) return\n  dispatch(checkpoint())\n  dispatch(incrementScore(ScoreType.revealCard))\n  dispatch(revealTop(selection.stack))\n}\n\nconst checkAndPerformFoundationMove = (selection: CardSelection): AppThunk => (dispatch, getState) => {\n  const foundation = selection.stackCard && getFoundationStack(getState(), selection.stackCard)\n  if (foundation && selection.stackCard) {\n    dispatch(deselectCard())\n    dispatch(checkpoint())\n    if (selection.stack.type === StackType.waste) dispatch(incrementScore(ScoreType.wasteToFoundation))\n    if (selection.stack.type === StackType.tableau) dispatch(incrementScore(ScoreType.tableauToFoundation))\n    dispatch(moveCards(selection.stack, foundation, selection.stackCard))\n  }\n}\n\nexport const clickCard = (cardSelection: CardSelection): AppThunk => (dispatch, getState) => {\n  const { stackCard, stack } = cardSelection\n  if (stackCard != null && stackCard.selected) return dispatch(deselectCard())\n\n  const selection = getSelection(getState())\n  if (selection == null && stackCard && !stackCard.hidden) return dispatch(selectCard({ stack, stackCard }))\n\n  if (stack.type === StackType.foundation && selection) {\n    dispatch(checkAndPerformFoundationMove(selection))\n    return\n  }\n\n  if (stack.type === StackType.tableau) {\n    if (selection == null && stackCard && stackCard.hidden) {\n      dispatch(checkpoint())\n      dispatch(incrementScore(ScoreType.revealCard))\n      dispatch(revealTop(stack))\n    }\n    if (selection && selection.stackCard && isValidTableauMove(selection.stackCard, stackCard)) {\n      dispatch(deselectCard())\n      dispatch(checkpoint())\n      if (selection.stack.type === StackType.waste) dispatch(incrementScore(ScoreType.wasteToTableau))\n      if (selection.stack.type === StackType.foundation) dispatch(incrementScore(ScoreType.foundationToTableau))\n      dispatch(moveCards(selection.stack, stack, selection.stackCard))\n    }\n  }\n\n  if (stack.type === StackType.stock) {\n    if (disallowClickStock(getState())) return\n    if (selection) dispatch(deselectCard())\n    const waste = getWaste(getState())\n    const stock = getStock(getState())\n    dispatch(checkpoint())\n    if (stock.cards.length > 0) {\n      dispatch(drawStockCards({ stock, waste }))\n    } else {\n      dispatch(recycleWaste({ stock, waste }))\n      dispatch(incrementDraws())\n    }\n  }\n}\n\nexport const doubleClickCard = (cardSelection: CardSelection): AppThunk => (dispatch) => {\n  const { stack, stackCard } = cardSelection\n  if (\n    stack.type === StackType.foundation ||\n    stack.type === StackType.stock ||\n    stackCard == null ||\n    stackCard.card == null\n  ) {\n    return\n  }\n\n  dispatch(checkAndPerformFoundationMove({ stack, stackCard }))\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { Reducer, AnyAction } from 'redux'\n\ntype History<State> = {\n  past: State[]\n  present: State\n  future: State[]\n}\n\nexport const destroy = createAction('destroy')\nexport const undo = createAction('undo')\nexport const redo = createAction('redo')\nexport const checkpoint = createAction('checkpoint')\n\nexport const undoable = <S, A extends AnyAction>(reducer: Reducer<S, A>) => {\n  const initialState: History<S> = {\n    past: [],\n    present: reducer(void 0, {} as A),\n    future: [],\n  }\n\n  return (state = initialState, action: A) => {\n    const { past, present, future } = state\n\n    if (undo.match(action)) {\n      const previous = past[past.length - 1]\n      if (!previous) {\n        return state\n      }\n\n      const newPast = past.slice(0, past.length - 1)\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future],\n      }\n    }\n\n    if (redo.match(action)) {\n      const next = future[0]\n      if (!next) {\n        return state\n      }\n\n      const newFuture = future.slice(1)\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture,\n      }\n    }\n\n    const newPresent = reducer(present, action)\n\n    if (destroy.match(action)) {\n      return {\n        past: [],\n        present: newPresent,\n        future: [],\n      }\n    }\n\n    if (checkpoint.match(action)) {\n      return {\n        past: [...past, present],\n        present: newPresent,\n        future: [],\n      }\n    }\n\n    if (present === newPresent) {\n      return state\n    }\n\n    return {\n      past,\n      present: newPresent,\n      future,\n    }\n  }\n}\n","import * as React from 'react'\nimport { Drawable, DrawingContext, Clickable, Handler } from '../drawing/Common'\nimport { colorSchemes } from '../drawing/ColorScheme'\nimport { initialize } from '../drawing/Common'\nimport { useCanvasSize } from '../hooks/useCanvasSize'\nimport { useSelector } from 'react-redux'\nimport { getTheme } from '../redux/selectors'\n\nexport type GameContext = {\n  context: DrawingContext\n  add: (thing: Drawable, events: Clickable) => void\n  remove: (path: Path2D) => void\n}\n\nexport const GameCtx = React.createContext<GameContext | null>(null)\n\nconst intersect = (evt: React.MouseEvent<HTMLCanvasElement>, pointsRef: Map<Path2D, Drawable>) => {\n  const { nativeEvent: e } = evt\n  const canvas = e.target as HTMLCanvasElement\n  const point = { x: e.offsetX, y: e.offsetY }\n  const ctx = canvas.getContext('2d')\n  for (const path of pointsRef.keys())\n    if (ctx?.isPointInPath(path, point.x, point.y)) {\n      const thing = pointsRef.get(path)\n      if (thing == null) return\n      return { thing, point }\n    }\n}\n\nconst GameCanvas: React.FC<React.HTMLAttributes<HTMLCanvasElement>> = ({ children, ...rest }) => {\n  const pointsRef = React.useRef<Map<Path2D, Drawable>>(new Map())\n  const clickHandlers = React.useRef<Map<Path2D, Handler>>(new Map())\n  const doubleClickHandlers = React.useRef<Map<Path2D, Handler>>(new Map())\n\n  const { ctx, width, height, handleCanvasRef } = useCanvasSize()\n  const colorSchemeType = useSelector(getTheme)\n  const colorScheme = colorSchemes[colorSchemeType]\n\n  const context = React.useMemo<DrawingContext | null>(() => {\n    if (!width || !height || !ctx) return null\n    return { ctx, width, height, colorSchemeType, colorScheme }\n  }, [ctx, width, height, colorSchemeType, colorScheme])\n\n  React.useLayoutEffect(() => (context && initialize(context)) || void 0, [context])\n\n  const value = React.useMemo<GameContext | null>(\n    () =>\n      context && {\n        context,\n        add(thing, events) {\n          pointsRef.current.set(thing.path, thing)\n          if (events.onClick) clickHandlers.current.set(thing.path, events.onClick)\n          if (events.onDoubleClick) doubleClickHandlers.current.set(thing.path, events.onDoubleClick)\n        },\n        remove(path: Path2D) {\n          pointsRef.current.delete(path)\n          clickHandlers.current.delete(path)\n          doubleClickHandlers.current.delete(path)\n        },\n      },\n    [context],\n  )\n\n  const handleCanvasDoubleClick = React.useCallback((evt: React.MouseEvent<HTMLCanvasElement>) => {\n    const selection = intersect(evt, pointsRef.current)\n    if (selection) {\n      const { thing, point } = selection\n      const event = doubleClickHandlers.current.get(thing.path)\n      if (event) event(thing, point)\n    }\n  }, [])\n\n  const handleCanvasClick = React.useCallback((evt: React.MouseEvent<HTMLCanvasElement>) => {\n    const selection = intersect(evt, pointsRef.current)\n    if (selection) {\n      const { thing, point } = selection\n      const event = clickHandlers.current.get(thing.path)\n      if (event) event(thing, point)\n    }\n  }, [])\n\n  return (\n    <>\n      <canvas\n        id=\"canvas\"\n        ref={handleCanvasRef}\n        width={window.innerWidth}\n        height={window.innerHeight}\n        onClick={handleCanvasClick}\n        onDoubleClick={handleCanvasDoubleClick}\n        {...rest}\n      />\n      <GameCtx.Provider value={value}>{children}</GameCtx.Provider>\n    </>\n  )\n}\n\nexport { GameCanvas }\nexport default React.memo(GameCanvas)\n","import { DrawingContext, Box, Dimensions } from './Common'\nimport { Stack, StackDirection, StackType } from '../lib/Card'\n\nexport const getStackCardOffsetWidth = (ctx: DrawingContext) => Math.floor(ctx.height * 0.03)\n\nexport const getStackCardOffsetHeight = (ctx: DrawingContext) => Math.floor(ctx.height * 0.03)\n\nexport const getVerticalMarginSize = (ctx: DrawingContext) => Math.floor(ctx.height * 0.01)\n\nexport const getHorizontalMarginSize = (ctx: DrawingContext) => Math.floor(ctx.width * 0.01)\n\nexport const getTopbarBox = (): Box => ({ x: 0, y: 0, width: 0, height: 30 })\n\n// the goal is to find the highest possible card width/height satisfying the desired ratio\n// assuming a fixed top-bar height with no margin, ( it will account for its own padding )\n// and 1 vertical separator + 6 horizontal separators\n// also, need room to stack 13 stack + 6 hidden => 19 cards.\n// without exceeding the size of the window.\n\nexport const getCardDimensions = (ctx: DrawingContext): Dimensions => {\n  const horizontalMargin = getHorizontalMarginSize(ctx)\n  const verticalMargin = getVerticalMarginSize(ctx)\n  const topBarBox = getTopbarBox()\n  const stackCardOffsetHeight = getStackCardOffsetHeight(ctx)\n\n  const usedVerticalSpace = topBarBox.height + verticalMargin * 2 + stackCardOffsetHeight * 19\n  const usedHorizontalSpace = horizontalMargin * 6\n\n  const maxWidth = Math.floor((ctx.width - usedHorizontalSpace) / 7)\n  const maxHeight = Math.floor((ctx.height - usedVerticalSpace) / 1.5)\n\n  const DESIRED_RATIO = 1.618 // try to get golden ratio size cards\n  const width = maxWidth * DESIRED_RATIO < maxHeight ? maxWidth : maxHeight / DESIRED_RATIO\n  const height = maxWidth * DESIRED_RATIO < maxHeight ? maxWidth * DESIRED_RATIO : maxHeight\n\n  return {\n    width: Math.floor(width),\n    height: Math.floor(height),\n  }\n}\n\nexport const getStackBox = (ctx: DrawingContext, stack: Stack, max: number): Box => {\n  const verticalMargin = getVerticalMarginSize(ctx)\n  const horizontalMargin = getHorizontalMarginSize(ctx)\n  const topBar = getTopbarBox()\n  const { width, height } = getCardDimensions(ctx)\n  const cardLength = Math.min(stack.cards.length, max)\n\n  // we know horizontal space used\n  // it might be less than available width\n  // base x width is half that available space (for centering)\n\n  const usedWidth = horizontalMargin * 6 + width * 7\n  const baseX = usedWidth < ctx.width ? (ctx.width - usedWidth) / 2 : 0\n\n  const stackWidth =\n    stack.direction === StackDirection.horizontal\n      ? cardLength === 0\n        ? height\n        : getStackCardOffsetWidth(ctx) * (cardLength - 1) + width\n      : width\n\n  const stackHeight =\n    stack.direction === StackDirection.vertical\n      ? cardLength === 0\n        ? height\n        : getStackCardOffsetHeight(ctx) * (cardLength - 1) + height\n      : height\n\n  switch (stack.type) {\n    case StackType.stock:\n      return {\n        y: topBar.height + verticalMargin,\n        x: baseX,\n        width: stackWidth,\n        height: stackHeight,\n      }\n    case StackType.waste:\n      return {\n        y: topBar.height + verticalMargin,\n        x: baseX + horizontalMargin + width,\n        width: stackWidth,\n        height: stackHeight,\n      }\n    case StackType.foundation:\n      return {\n        y: topBar.height + verticalMargin,\n        x: baseX + 3 * horizontalMargin + 3 * width + stack.index * (horizontalMargin + width),\n        width: stackWidth,\n        height: stackHeight,\n      }\n    case StackType.tableau:\n      return {\n        y: topBar.height + verticalMargin * 3 + height,\n        x: baseX + stack.index * (horizontalMargin + width),\n        width: stackWidth,\n        height: stackHeight,\n      }\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { Card } from '../lib/Card'\nimport { ScoringType } from '../lib/Scoring'\nimport { ColorSchemeType } from '../drawing/ColorScheme'\n\n// this is in it's own file because circular dependencies are jerks.\n\nexport const initialize = createAction<{\n  scoringType: ScoringType\n  cards: Card[]\n  number: number\n  theme: ColorSchemeType\n}>('initialize')\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { Stack, StackCard, StackType, StackDirection } from '../lib/Card'\nimport { stackContainsCard, sumConsecutive, sameStack, sameCard } from '../lib/util'\nimport { undoable } from './undoable'\nimport { initialize } from './init'\n\nexport type MoveCardPayload = { from: Stack; to: Stack; cards: StackCard[]; hidden: boolean }\n\nconst stacksSlice = createSlice({\n  name: 'stacks',\n  initialState: {\n    stacks: [\n      {\n        type: StackType.stock,\n        direction: null,\n        cards: [],\n        index: 0,\n        selection: null,\n      },\n      {\n        type: StackType.waste,\n        direction: StackDirection.horizontal,\n        cards: [],\n        index: 0,\n        selection: null,\n      },\n      ...Array.from<number, Stack>({ length: 7 }, (_, index) => ({\n        type: StackType.tableau,\n        direction: StackDirection.vertical,\n        cards: [],\n        index,\n        selection: null,\n      })),\n      ...Array.from<number, Stack>({ length: 4 }, (_, index) => ({\n        type: StackType.foundation,\n        direction: null,\n        cards: [],\n        index,\n        selection: null,\n      })),\n    ],\n  },\n  reducers: {\n    shiftCards: (state, { payload: { from, to, cards, hidden } }: PayloadAction<MoveCardPayload>) => {\n      const toStack = state.stacks.find((stack) => sameStack(to, stack))\n      const fromStack = state.stacks.find((stack) => sameStack(from, stack))\n      if (toStack) toStack.cards.push(...cards.map((card) => ({ ...card, selected: false, hidden })))\n      if (fromStack) fromStack.cards = fromStack.cards.filter((stackCard) => !stackContainsCard(cards, stackCard))\n    },\n    revealTop: (state, { payload }: PayloadAction<Stack>) => {\n      const thisStack = state.stacks.find((stack) => sameStack(stack, payload))\n      if (thisStack) {\n        const topCard = thisStack.cards[thisStack.cards.length - 1]\n        if (topCard) topCard.hidden = false\n      }\n    },\n    selectCard: (state, { payload }: PayloadAction<{ stack: Stack; stackCard: StackCard }>) => {\n      const thisStack = state.stacks.find((stack) => sameStack(stack, payload.stack))\n      if (thisStack) {\n        thisStack.selection = payload.stackCard\n        const thisCard = thisStack.cards.find((stackCard) => sameCard(stackCard, payload.stackCard))\n        if (thisCard) thisCard.selected = true\n      }\n    },\n    deselectCard: (state) => {\n      const thisStack = state.stacks.find((stack) => stack.selection != null)\n      if (thisStack) {\n        thisStack.selection = null\n        const selectedCard = thisStack.cards.find((stackCard) => stackCard.selected)\n        if (selectedCard) selectedCard.selected = false\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder.addCase(initialize, (state, { payload }) => {\n      state.stacks = state.stacks.map((stack) => {\n        switch (stack.type) {\n          case StackType.foundation:\n          case StackType.waste:\n            return { ...stack, cards: [] }\n          case StackType.stock:\n            return { ...stack, cards: payload.cards.slice(0, 24).map((card) => ({ card, hidden: true })) }\n          case StackType.tableau:\n            return {\n              ...stack,\n              cards: payload.cards\n                .slice(24 + sumConsecutive(stack.index), 24 + sumConsecutive(stack.index) + stack.index + 1)\n                .map((card, index, a) => ({ card, hidden: a.length !== index + 1 })),\n            }\n        }\n      })\n    }),\n})\n\nexport const { selectCard, deselectCard, revealTop, shiftCards } = stacksSlice.actions\n\nexport const moveCards = (from: Stack, to: Stack, from_card: StackCard | null) =>\n  shiftCards({\n    from,\n    to,\n    cards: from.cards.slice(from.cards.findIndex((card) => from_card && sameCard(card, from_card))),\n    hidden: false,\n  })\n\nexport const drawStockCards = ({ stock, waste }: { stock: Stack; waste: Stack }) =>\n  shiftCards({ from: stock, to: waste, cards: stock.cards.slice(-3).reverse(), hidden: false })\n\nexport const recycleWaste = ({ stock, waste }: { stock: Stack; waste: Stack }) =>\n  shiftCards({ from: waste, to: stock, cards: waste.cards.slice(0).reverse(), hidden: true })\n\nexport default undoable(stacksSlice.reducer)\n","import { createSlice, PayloadAction, AnyAction } from '@reduxjs/toolkit'\nimport { StackType } from '../lib/Card'\nimport { retrieve, PersistanceType } from '../lib/Persist'\nimport { ScoringType, getScoreChange, ScoreType } from '../lib/Scoring'\nimport { ColorSchemeType } from '../drawing/ColorScheme'\nimport { initialize } from './init'\nimport { undoable } from './undoable'\nimport { MoveCardPayload, shiftCards } from './stacks'\n\nconst gameStateSlice = createSlice({\n  name: 'game-state',\n  initialState: {\n    draws: 0,\n    number: 0,\n    score: 0,\n    scoringType: ScoringType.regular,\n    showing: 0,\n    theme: ColorSchemeType.dark,\n  },\n  reducers: {\n    incrementDraws(state) {\n      state.draws = state.draws + 1\n    },\n    incrementScore(state, { payload }: PayloadAction<ScoreType>) {\n      state.score = state.score + getScoreChange(state.scoringType, payload)\n    },\n    changeTheme(state, { payload }: PayloadAction<ColorSchemeType>) {\n      state.theme = payload\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(initialize, (state, { payload }) => {\n        state.draws = 0\n        state.number = payload.number\n        state.score = payload.scoringType === ScoringType.vegas ? retrieve(PersistanceType.score, 0) - 52 : 0\n        state.scoringType = payload.scoringType\n        state.showing = 3\n      })\n      .addMatcher(\n        (action: AnyAction): action is PayloadAction<MoveCardPayload> =>\n          shiftCards.match(action) &&\n          (action.payload.to.type === StackType.waste ||\n            (action.payload.from && action.payload.from.type === StackType.waste)),\n        (state, { payload: { to, cards } }) => {\n          state.showing =\n            to.type === StackType.waste ? Math.min(to.cards.length + cards.length, 3) : Math.max(1, state.showing - 1)\n        },\n      ),\n})\n\nexport const { incrementDraws, incrementScore, changeTheme } = gameStateSlice.actions\n\nexport default undoable(gameStateSlice.reducer)\n","export enum PersistanceType {\n  type = 'game-mode',\n  theme = 'theme',\n  score = 'score',\n  number = 'game-number',\n}\n\nexport const persist: <T>(name: PersistanceType, thing: T) => void = (name, thing) => {\n  try {\n    localStorage.setItem(name, JSON.stringify(thing))\n  } catch (err) {\n    // that sucks\n  }\n}\n\nexport const retrieve = <T>(name: PersistanceType, init: T) => {\n  try {\n    const thing = localStorage.getItem(name) || ''\n    return JSON.parse(thing) as T\n  } catch (err) {\n    return init\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"_3CVWuICEjzQr13Ih1TmDCM\",\"fireworks\":\"_72wrpjaOIkQ4uI_1fpLA8\",\"game\":\"_2o5m0OjGuq5pMnbWjfnxoN\",\"button\":\"_1-VLFGaQfP805551uJB2ZP\",\"label\":\"_10eHmfFA5mWj165r-vPLfC\",\"optionsMask\":\"_17c5vLIul6bZQ6p44fmVgW\",\"optionsModal\":\"_1JX8eFxYhW2LZWKxvRd372\"};","import { Cards, StackCard } from '../lib/Card'\nimport { ColorScheme, ColorSchemeType } from './ColorScheme'\nimport { getErrorImageData, getEmptyImageData, getHiddenImageData, getCardImageData } from './Card'\nimport { getCardDimensions } from './Layout'\n\n// this is passed to all drawing routines. it includes :\n// the color they should draw,\n// the ctx to draw it on, and\n// the width/height of the canvas.\n\nexport type DrawingContext = {\n  ctx: CanvasRenderingContext2D\n  colorScheme: ColorScheme\n  colorSchemeType: ColorSchemeType\n} & Dimensions\n\nexport type Dimensions = { width: number; height: number }\n\nexport type Point = { x: number; y: number }\n\nexport type Box = Dimensions & Point\n\n// something that is drawable includes an x/y coords and a height/width\n// once removed, clearRect is with these values to clean it from the canvas\n// also, the click/double click handlers will inspect if point is in their path.\n\nexport type Drawable = { path: Path2D; box: Box }\n\nexport interface Handler {\n  (arg0: Drawable, arg1: Point): void\n}\n\nexport type Clickable = { onClick?: Handler; onDoubleClick?: Handler }\n\n// a cache of cards is kept and re-initialized when color scheme / window dimensions change\n// this is a map of a key identifying the stack card, and the raw pixel data to draw it.\n// the idea is this is all cached one time at the beginning and re-used\n\n// this uses a string with keys because it's actually a \"StackCard\" we're interested in\n// this includes the selected flag - the highlighted / non-highlighted state need to both be kept\n// while `Cards` is immutable singleton of all available cads, StackCards is not and\n// using a non-string key, we'll wind up with missing references not hitting the cache.\n\nexport const getKey = ({ card: { suit, value }, selected }: StackCard) =>\n  `${suit}_${value}_${(selected || false).toString()}`\n\nexport const cardCache: Map<string, ImageData> = new Map()\n\nlet c2: HTMLCanvasElement\n\nexport const initialize = (context: DrawingContext) => {\n  const { width, height } = getCardDimensions(context)\n  cardCache.set('hidden', getHiddenImageData(context))\n  cardCache.set('empty', getEmptyImageData(context))\n  cardCache.set('error', getErrorImageData(context))\n  Cards.forEach((card) => {\n    cardCache\n      .set(getKey({ card, selected: true }), getCardImageData(context, { card, selected: true }))\n      .set(getKey({ card, selected: false }), getCardImageData(context, { card, selected: false }))\n  })\n\n  c2 = document.createElement('canvas')\n  c2.width = width\n  c2.height = height\n  context.ctx.clearRect(0, 0, width + 2, height + 2)\n}\n\n// to get transarency working, (maybe other composition?) need an intermediary canvas to proxy the drawing.\n\nexport const writeDataToCanvas = (context: DrawingContext, data: ImageData, x: number, y: number) => {\n  const ctx2 = c2.getContext('2d')\n  ctx2?.putImageData(data, 0, 0)\n  context.ctx.drawImage(c2, x, y)\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport * as offline from 'offline-plugin/runtime'\n\nimport App from './components/App'\n\nconst NODE_ENV = process.env.NODE_ENV\nif (NODE_ENV === 'production') {\n  offline.install({\n    onUpdateReady() {\n      offline.applyUpdate()\n    },\n    onUpdated() {\n      window.location.reload()\n    },\n  })\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import * as React from 'react'\n\nimport { Provider } from 'react-redux'\n\nimport Container from './Container'\nimport { retrieve, PersistanceType } from '../lib/Persist'\nimport { ScoringType } from '../lib/Scoring'\nimport { ColorSchemeType } from '../drawing/ColorScheme'\nimport store from '../redux'\nimport { initializeGame } from '../redux/thunks'\n\nconst App: React.FC = () => {\n  const newNumber = retrieve(PersistanceType.number, 0)\n  const newType = retrieve<ScoringType>(PersistanceType.type, ScoringType.regular)\n  const newTheme = retrieve<ColorSchemeType>(PersistanceType.theme, ColorSchemeType.dark)\n\n  store.dispatch(initializeGame({ newType, newNumber, newTheme }))\n\n  return (\n    <Provider store={store}>\n      <Container />\n    </Provider>\n  )\n}\n\nexport { App }\n\nexport default React.memo(App)\n","import * as React from 'react'\nimport { hot } from 'react-hot-loader/root'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { StackType } from '../lib/Card'\nimport { colorSchemes } from '../drawing/ColorScheme'\nimport { label, topBar, game, optionsMask, optionsModal, button } from '../css/index.css'\n\nimport FireworksComponent from './Fireworks'\nimport GameCanvas from './GameCanvas'\nimport StackElement from './StackElement'\nimport Options from './Options'\n\nimport { performMoves, newNumber } from '../redux/thunks'\nimport { undo, redo } from '../redux/undoable'\nimport { getOverDrawn, getShowing, getStacks, getTheme, getScore, getNumber } from '../redux/selectors'\n\nconst Container: React.FC = () => {\n  const dispatch = useDispatch()\n  const stacks = useSelector(getStacks)\n  const overDrawn = useSelector(getOverDrawn)\n  const showing = useSelector(getShowing)\n  const theme = useSelector(getTheme)\n  const score = useSelector(getScore)\n  const number = useSelector(getNumber)\n\n  const cssVars = React.useMemo(() => {\n    const colors = colorSchemes[theme]\n    return {\n      '--background': colors.background,\n      '--color': colors.color,\n      '--emptyColor': colors.emptyColor,\n      '--faceUp': colors.faceUp,\n      '--hiddenColor1': colors.hiddenColor1,\n      '--hiddenColor2': colors.hiddenColor2,\n      '--buttonBorder': colors.buttonBorder,\n      '--cardBorder': colors.cardBorder,\n      '--black': colors.black,\n      '--red': colors.red,\n      '--selected': colors.selected,\n      '--errorColor': colors.errorColor,\n    }\n  }, [theme])\n\n  const [showOptions, setShowOptions] = React.useState(false)\n\n  const handleCloseOptions = React.useCallback(() => setShowOptions(false), [])\n  const handleShowOptions = React.useCallback(() => setShowOptions(true), [])\n  const handleNewGame = React.useCallback(() => dispatch(newNumber()), [dispatch])\n\n  React.useEffect(() => {\n    const handleMouseDown = (e: MouseEvent) => {\n      if (e.button !== 1) return\n      e.preventDefault()\n      dispatch(performMoves())\n    }\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.keyCode === 113) dispatch(newNumber())\n      if (e.keyCode === 27) setShowOptions((prev) => !prev)\n      if (e.keyCode === 90) {\n        if (e.ctrlKey && e.shiftKey) {\n          dispatch(redo())\n        } else if (e.ctrlKey) {\n          dispatch(undo())\n        }\n      }\n    }\n    document.addEventListener('mousedown', handleMouseDown)\n    document.addEventListener('keydown', handleKeyDown)\n    return () => {\n      document.removeEventListener('mousedown', handleMouseDown)\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [dispatch])\n\n  return (\n    <div style={cssVars}>\n      <FireworksComponent />\n      {showOptions && (\n        <>\n          <Options onClose={handleCloseOptions} className={optionsModal} />\n          <div onClick={handleCloseOptions} className={optionsMask} />\n        </>\n      )}\n      <div className={topBar}>\n        <div>\n          <button tabIndex={1} onClick={handleNewGame} className={button}>\n            🔄︎\n          </button>\n          <span className={label}>{number}</span>\n        </div>\n        <div>\n          <span className={label}>{score}</span>\n          <button tabIndex={1} onClick={handleShowOptions} className={button}>\n            ☰︎\n          </button>\n        </div>\n      </div>\n      <GameCanvas className={game}>\n        {stacks.map((stack) => (\n          <StackElement\n            key={`${stack.type}-${stack.index}`}\n            stack={stack}\n            {...(stack.type === StackType.waste && { showing })}\n            {...(stack.type === StackType.stock && { overDrawn })}\n          />\n        ))}\n      </GameCanvas>\n    </div>\n  )\n}\n\nexport default hot(React.memo(Container))\n","import * as React from 'react'\nimport { useSelector } from 'react-redux'\nimport * as FireworksCanvas from 'fireworks-canvas'\nimport { getGameWon } from '../redux/selectors'\nimport { fireworks } from '../css/index.css'\n\nconst Fireworks: React.FC = () => {\n  const ref = React.useRef<HTMLDivElement>(null)\n  const fireworksObj = React.useRef<FireworksCanvas>()\n  const active = useSelector(getGameWon)\n  const display = active ? '' : 'none'\n\n  React.useEffect(() => {\n    if (ref.current == null) return\n    fireworksObj.current = new FireworksCanvas(ref.current)\n\n    const handleDocumentKeyDown = (ev: KeyboardEvent) => {\n      if (ev.keyCode === 27) fireworksObj.current?.stop()\n    }\n\n    document.addEventListener('keydown', handleDocumentKeyDown)\n\n    return () => {\n      fireworksObj.current?.destroy()\n    }\n  }, [ref, active])\n\n  React.useEffect(() => {\n    if (active) {\n      fireworksObj.current?.stop()\n    } else {\n      fireworksObj.current?.start()\n    }\n  }, [active])\n\n  return <div className={fireworks} style={{ display }} ref={ref} />\n}\n\nexport default React.memo(Fireworks)\n","import { ValueType, SuitType, StackCard } from '../lib/Card'\nimport { Box, DrawingContext } from './Common'\nimport { isBig, isRed } from '../lib/util'\nimport { search, measureHeight } from './FontSize'\n\nimport { getCardDimensions, getVerticalMarginSize, getHorizontalMarginSize } from './Layout'\n\ntype Glyph = {\n  glyph: ValueType | SuitType\n  x: number\n  y: number\n  rotated: boolean\n  textAlign: CanvasTextAlign\n  textBaseline: CanvasTextBaseline\n  font: string\n}\n\nexport const getBoxPath = ({ x, y, width, height }: Box, radius = 10, smaller = 0) => {\n  const path = new Path2D()\n\n  const dx = x + smaller\n  const dy = y + smaller\n  const dw = width - smaller * 2\n  const dh = height - smaller * 2\n\n  path.moveTo(dx + radius, dy)\n  path.lineTo(dx + dw - radius, dy)\n  path.quadraticCurveTo(dx + dw, dy, dx + dw, dy + radius)\n  path.lineTo(dx + dw, dy + dh - radius)\n  path.quadraticCurveTo(dx + dw, dy + dh, dx + dw - radius, dy + dh)\n  path.lineTo(dx + radius, dy + dh)\n  path.quadraticCurveTo(dx, dy + dh, dx, dy + dh - radius)\n  path.lineTo(dx, dy + radius)\n  path.quadraticCurveTo(dx, dy, dx + radius, dy)\n  path.closePath()\n  return path\n}\n\nenum FontSizeType {\n  Regular,\n  Corner,\n}\n\nexport const getGlyphLocations = (context: DrawingContext, { card, hidden }: StackCard): Glyph[] => {\n  if (hidden) return []\n\n  const { ctx } = context\n  const { width: cardWidth, height: cardHeight } = getCardDimensions(context)\n  const gutterHeight = getVerticalMarginSize(context)\n  const gutterWidth = getHorizontalMarginSize(context)\n\n  const cornerWidth = Math.floor(cardWidth * 0.2)\n  const figureOutFontSize = (type: FontSizeType) =>\n    search(\n      ctx,\n      (width: number, height: number) =>\n        type === FontSizeType.Corner\n          ? width > cornerWidth\n          : isBig(card)\n          ? width > cardWidth - Math.floor(cardWidth / 5) * 2\n          : width > Math.floor(cardWidth / 5) && height > Math.floor(cardHeight / 20),\n      type === FontSizeType.Corner ? '10' : '\\u2665',\n    )\n\n  const fontSizes: { [key in FontSizeType]: string } = {\n    [FontSizeType.Corner]: figureOutFontSize(FontSizeType.Corner),\n    [FontSizeType.Regular]: figureOutFontSize(FontSizeType.Regular),\n  }\n\n  // 20% of width is reserved for corner pieces\n  // y of suit is margin + height of value + margin\n  const cornerHeight = measureHeight(ctx, fontSizes[FontSizeType.Corner])\n\n  const cornerValueX = gutterWidth / 2\n  const cornerValueY = gutterHeight / 2\n  const cornerSuitX = gutterWidth / 2\n  const cornerSuitY = gutterWidth / 2 + cornerHeight\n\n  const { suit, value } = card\n\n  // top-left, bottom-right glyphs\n  const positions = [\n    { x: cornerValueX, y: cornerValueY, glyph: value },\n    { x: cornerSuitX, y: cornerSuitY, glyph: suit },\n  ].reduce<Glyph[]>((memo, glyph) => {\n    memo.push(\n      {\n        ...glyph,\n        rotated: false,\n        textAlign: 'left',\n        textBaseline: 'top',\n        font: fontSizes[FontSizeType.Corner],\n      },\n      {\n        ...glyph,\n        rotated: true,\n        textAlign: 'left',\n        textBaseline: 'top',\n        font: fontSizes[FontSizeType.Corner],\n      },\n    )\n    return memo\n  }, [])\n\n  type ypos = 0 | 1 | 2 | 3 | 4 | 5 | 6\n\n  type xpos = 0 | 1 | 2\n\n  const pos: { x: xpos; y: ypos }[] = []\n\n  if (\n    [\n      ValueType.ace,\n      ValueType.three,\n      ValueType.five,\n      ValueType.nine,\n      ValueType.jack,\n      ValueType.queen,\n      ValueType.king,\n    ].includes(value)\n  ) {\n    pos.push({ x: 1, y: 3 })\n  }\n\n  if ([ValueType.two, ValueType.three].includes(value)) {\n    pos.push({ x: 1, y: 0 }, { x: 1, y: 6 })\n  }\n\n  if (\n    [\n      ValueType.four,\n      ValueType.five,\n      ValueType.six,\n      ValueType.seven,\n      ValueType.eight,\n      ValueType.nine,\n      ValueType.ten,\n    ].includes(value)\n  ) {\n    pos.push({ x: 0, y: 0 }, { x: 2, y: 0 }, { x: 0, y: 6 }, { x: 2, y: 6 })\n  }\n\n  if ([ValueType.six, ValueType.seven, ValueType.eight].includes(value)) {\n    pos.push({ x: 0, y: 3 }, { x: 2, y: 3 })\n  }\n\n  if ([ValueType.seven, ValueType.ten, ValueType.eight].includes(value)) {\n    pos.push({ x: 1, y: 1 })\n  }\n\n  if ([ValueType.nine, ValueType.ten].includes(value)) {\n    pos.push({ x: 0, y: 2 }, { x: 2, y: 2 }, { x: 0, y: 4 }, { x: 2, y: 4 })\n  }\n\n  if ([ValueType.ten, ValueType.eight].includes(value)) {\n    pos.push({ x: 1, y: 5 })\n  }\n\n  const getTop = (y: ypos) => {\n    switch (y) {\n      case 0:\n      case 6:\n        return cardHeight * 0.2\n      case 1:\n      case 5:\n        return cardHeight * 0.3\n      case 2:\n      case 4:\n        return cardHeight * 0.4\n      case 3:\n        return cardHeight * 0.5\n    }\n  }\n\n  const getLeft = (x: xpos) => {\n    switch (x) {\n      case 0:\n        return cardWidth * 0.25\n      case 1:\n        return cardWidth * 0.5\n      case 2:\n        return cardWidth * 0.75\n    }\n  }\n\n  const getTextAlign = (x: xpos): CanvasTextAlign => {\n    switch (x) {\n      case 0:\n        return 'left'\n      case 1:\n        return 'center'\n      case 2:\n        return 'right'\n    }\n  }\n\n  pos.forEach(({ x, y }) => {\n    positions.push({\n      x: getLeft(x),\n      y: getTop(y),\n      glyph: suit,\n      textAlign: getTextAlign(x),\n      textBaseline: 'middle',\n      rotated: y > 3,\n      font: fontSizes[FontSizeType.Regular],\n    })\n  })\n\n  return positions\n}\n\nexport const getEmptyImageData = (context: DrawingContext) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardDimensions(context)\n  const box = { x: 0, y: 0, width, height }\n  ctx.clearRect(0, 0, width, height)\n  ctx.fillStyle = colorScheme.emptyColor\n  ctx.fillRect(box.x, box.y, box.width, box.height)\n  ctx.lineWidth = 0.5\n  ctx.strokeStyle = colorScheme.cardBorder\n  ctx.strokeRect(box.x, box.y, box.width, box.height)\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n\nexport const getHiddenImageData = (context: DrawingContext) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardDimensions(context)\n  const box = { x: 0, y: 0, width, height }\n\n  const tile = document.createElement('canvas')\n  const thickness = 25\n  tile.width = tile.height = thickness\n  const tileCtx = tile.getContext('2d') as CanvasRenderingContext2D\n  const gradient = tileCtx.createLinearGradient(0, 0, tile.width, tile.height)\n\n  gradient.addColorStop(0, colorScheme.hiddenColor1)\n  gradient.addColorStop(0.25, colorScheme.hiddenColor1)\n\n  gradient.addColorStop(0.25, colorScheme.hiddenColor2)\n  gradient.addColorStop(0.5, colorScheme.hiddenColor2)\n\n  gradient.addColorStop(0.5, colorScheme.hiddenColor1)\n  gradient.addColorStop(0.75, colorScheme.hiddenColor1)\n\n  gradient.addColorStop(0.75, colorScheme.hiddenColor2)\n  gradient.addColorStop(1, colorScheme.hiddenColor2)\n\n  tileCtx.fillStyle = gradient\n  tileCtx.fillRect(0, 0, thickness, thickness)\n\n  ctx.clearRect(box.x, box.y, box.width, box.height)\n  ctx.strokeStyle = colorScheme.cardBorder\n  ctx.lineWidth = 3\n  ctx.stroke(getBoxPath(box))\n  ctx.save()\n  ctx.clip(getBoxPath(box, 10))\n  ctx.fillStyle = ctx.createPattern(tile, 'repeat') as CanvasPattern\n  ctx.fillRect(box.x + 1, box.y + 1, box.width - 2, box.height - 2)\n  ctx.restore()\n\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n\nexport const getCardImageData = (context: DrawingContext, card: StackCard) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardDimensions(context)\n  const box = { x: 0, y: 0, width, height }\n\n  ctx.clearRect(box.x, box.y, box.width, box.height)\n  ctx.strokeStyle = colorScheme.cardBorder\n  ctx.lineWidth = 2\n  ctx.stroke(getBoxPath(box, 10))\n\n  ctx.fillStyle = card.selected ? colorScheme.selected : colorScheme.faceUp\n  ctx.fill(getBoxPath(box, 10, 0.5))\n\n  for (const glyph of getGlyphLocations(context, card)) {\n    ctx.fillStyle = isRed(card.card) ? colorScheme.red : colorScheme.black\n    ctx.textAlign = glyph.textAlign\n    ctx.textBaseline = glyph.textBaseline\n    ctx.font = glyph.font\n    if (glyph.rotated) {\n      ctx.save()\n      ctx.translate(width, height)\n      ctx.rotate(Math.PI)\n    }\n    ctx.fillText(glyph.glyph, glyph.x + box.x * (glyph.rotated ? -1 : 1), glyph.y + box.y * (glyph.rotated ? -1 : 1))\n    if (glyph.rotated) ctx.restore()\n  }\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n\nexport const getErrorImageData = (context: DrawingContext) => {\n  const { ctx, colorScheme } = context\n  const { width, height } = getCardDimensions(context)\n  const box = { x: 0, y: 0, width, height }\n  ctx.clearRect(box.x, box.y, box.width, box.height)\n  ctx.fillStyle = colorScheme.emptyColor\n  ctx.fill(getBoxPath(box))\n  ctx.font = '48px sans-serif'\n  ctx.textAlign = 'center'\n  ctx.textBaseline = 'middle'\n  ctx.fillStyle = colorScheme.errorColor\n  ctx.fillText('X', box.width / 2, box.height / 2)\n  return ctx.getImageData(box.x, box.y, box.width, box.height)\n}\n","const allFontSizes = Array.from<number, number>({ length: 200 }, (v, k) => k)\n\ninterface isBigEnough {\n  (width: number, height: number): boolean\n}\n\nexport const measureWidth = (ctx: CanvasRenderingContext2D, font: string, text: string) => {\n  ctx.font = font\n  return ctx.measureText(text).width\n}\n\nexport const measureHeight = (ctx: CanvasRenderingContext2D, font: string) => {\n  ctx.font = font\n  return ctx.measureText('M').width // close enough\n}\n\nconst searchFontSize = (\n  ctx: CanvasRenderingContext2D,\n  isBigEnough: isBigEnough,\n  text: string,\n  min: number,\n  max: number,\n): string => {\n  const index = Math.floor((max + min) / 2)\n  const font = `${allFontSizes[index]}px sans-serif`\n  const width = measureWidth(ctx, font, text)\n  const height = measureHeight(ctx, font)\n  if (min > max) return font\n  if (isBigEnough(width, height)) return searchFontSize(ctx, isBigEnough, text, min, index - 1)\n  return searchFontSize(ctx, isBigEnough, text, index + 1, max)\n}\n\nexport const search = (ctx: CanvasRenderingContext2D, isBigEnough: isBigEnough, text: string) =>\n  searchFontSize(ctx, isBigEnough, text, 0, allFontSizes.length - 1)\n","import * as React from 'react'\nimport { Dimensions } from '../drawing/Common'\n\ntype CanvasSizeReturn = {\n  ctx?: CanvasRenderingContext2D\n  width?: number\n  height?: number\n  handleCanvasRef: (canvas: HTMLCanvasElement) => void\n}\n\nexport const useCanvasSize = (): CanvasSizeReturn => {\n  const [canvas, setCanvas] = React.useState<HTMLCanvasElement | null>(null)\n  const handleCanvasRef = React.useCallback((canvas: HTMLCanvasElement) => canvas && setCanvas(canvas), [])\n\n  const getSize = () => ({ width: window.innerWidth, height: window.innerHeight })\n\n  const [size, setSize] = React.useState<Dimensions>()\n\n  React.useEffect(() => {\n    let tid: number\n    const handleSize = () => {\n      if (tid) clearTimeout(tid)\n      tid = window.setTimeout(() => setSize(getSize()), 300)\n    }\n    window.addEventListener('resize', handleSize)\n    return () => {\n      window.removeEventListener('resize', handleSize)\n    }\n  })\n\n  const retVal = React.useMemo(\n    () => ({\n      handleCanvasRef,\n      ...(canvas && {\n        ctx: canvas.getContext('2d') as CanvasRenderingContext2D,\n        ...(size ?? getSize()),\n      }),\n    }),\n    [size, handleCanvasRef, canvas],\n  )\n\n  return retVal\n}\n","import * as React from 'react'\nimport { GameCtx } from './GameCanvas'\nimport { drawStack, StackDrawingContext, getStackDrawingContext } from '../drawing/Stack'\nimport { Stack, StackDirection, StackType } from '../lib/Card'\nimport { useDispatch } from 'react-redux'\nimport { clickCard, doubleClickCard } from '../redux/thunks'\nimport { Point, Drawable } from '../drawing/Common'\nimport { useDrawing } from '../hooks/useDrawing'\nimport { useMemo } from 'react'\n\nconst StackElement: React.FC<{\n  stack: Stack\n  overDrawn?: boolean\n  showing?: number\n}> = ({ stack, overDrawn = false, showing = Infinity }) => {\n  const dispatch = useDispatch()\n  const gameContext = React.useContext(GameCtx)\n\n  const drawingOpts = useMemo<StackDrawingContext | null>(\n    () => gameContext && getStackDrawingContext(gameContext.context, stack, { overDrawn, showing }),\n    [gameContext, stack, overDrawn, showing],\n  )\n\n  const onDoubleClick = React.useCallback(\n    (thing: Drawable, point: Point) => {\n      if (gameContext == null || drawingOpts == null) return\n      const prop = stack.direction === StackDirection.horizontal ? 'x' : 'y'\n      const cards = stack.cards.slice(-drawingOpts.max)\n      const index = Math.min(cards.length - 1, Math.floor((point[prop] - drawingOpts.box[prop]) / drawingOpts.space))\n      if (stack.type !== StackType.waste || index === cards.length - 1)\n        dispatch(doubleClickCard({ stack, stackCard: cards[index] }))\n    },\n    [dispatch, gameContext, drawingOpts, stack],\n  )\n\n  const onClick = React.useCallback(\n    (thing: Drawable, point: Point) => {\n      if (gameContext == null || drawingOpts == null) return\n      const prop = stack.direction === StackDirection.horizontal ? 'x' : 'y'\n      const cards = stack.cards.slice(-drawingOpts.max)\n      const index = Math.min(cards.length - 1, Math.floor((point[prop] - drawingOpts.box[prop]) / drawingOpts.space))\n      if (stack.type !== StackType.waste || index === cards.length - 1)\n        dispatch(clickCard({ stack, stackCard: cards[index] }))\n    },\n    [dispatch, gameContext, drawingOpts, stack],\n  )\n\n  useDrawing((context) => drawStack(context, drawingOpts), { onClick, onDoubleClick })\n\n  return null\n}\n\nexport { StackElement }\nexport default React.memo(StackElement)\n","import { Stack, StackDirection, StackType } from '../lib/Card'\nimport { writeDataToCanvas, cardCache, getKey, DrawingContext, Box } from './Common'\nimport { getStackCardOffsetWidth, getStackCardOffsetHeight, getStackBox } from './Layout'\n\nexport type StackDrawingOptions = {\n  overDrawn: boolean\n  showing: number\n}\n\nexport type StackDrawingContext = StackDrawingOptions & {\n  stack: Stack\n  space: number\n  max: number\n  box: Box\n}\n\nexport const getStackDrawingContext = (\n  context: DrawingContext,\n  stack: Stack,\n  opts: StackDrawingOptions,\n): StackDrawingContext => {\n  const max =\n    stack.type === StackType.stock || stack.type === StackType.foundation\n      ? 1\n      : stack.type === StackType.waste\n      ? opts.showing || 0\n      : stack.cards.length\n\n  const box = getStackBox(context, stack, max)\n\n  const space =\n    stack.direction === StackDirection.horizontal ? getStackCardOffsetWidth(context) : getStackCardOffsetHeight(context)\n\n  return {\n    stack,\n    overDrawn: opts.overDrawn,\n    showing: opts.showing,\n    space,\n    box,\n    max,\n  }\n}\n\nexport const drawStack = (context: DrawingContext, drawingOpts: StackDrawingContext | null) => {\n  if (drawingOpts == null) return null\n  const { stack, overDrawn, max, space, box } = drawingOpts\n  const cards = stack.cards.slice(-max)\n\n  const path = new Path2D()\n  path.rect(box.x, box.y, box.width, box.height)\n  path.closePath()\n\n  const empty = cards.length === 0\n  const error = stack.type === StackType.stock && empty && overDrawn\n  const elements = []\n\n  if (error) elements.push({ data: cardCache.get('error'), x: box.x, y: box.y })\n  else if (empty) elements.push({ data: cardCache.get('empty'), x: box.x, y: box.y })\n  else\n    cards.forEach((card, i) => {\n      const drawing = card.hidden ? cardCache.get('hidden') : cardCache.get(getKey(card))\n      if (drawing) {\n        const x = stack.direction === StackDirection.horizontal ? i * space : 0\n        const y = stack.direction === StackDirection.horizontal ? 0 : i * space\n        elements.push({ data: drawing, x: box.x + x, y: box.y + y })\n      }\n    })\n\n  for (const { data, x, y } of elements) data && writeDataToCanvas(context, data, x, y)\n  return { path, box }\n}\n","import * as React from 'react'\nimport { GameCtx } from '../components/GameCanvas'\nimport { Clickable, DrawingContext, Drawable } from '../drawing/Common'\n\nexport interface Drawer {\n  (context: DrawingContext): Drawable | null\n}\n\nexport const useDrawing = (draw: Drawer, events: Clickable = {}) => {\n  const gameContext = React.useContext(GameCtx)\n  const performCleanup = React.useRef(true)\n  const lastWidth = React.useRef(gameContext?.context.width ?? 0)\n  const lastHeight = React.useRef(gameContext?.context.height ?? 0)\n\n  // should only clear the rects if we haven't just resized the screen\n  // a screen resize will already clear the entire canvas\n  // if this isn't tracked, we end up drawing a new game and clear out the old sizes, leaving blank holes.\n\n  React.useLayoutEffect(() => {\n    if (!gameContext) return\n    performCleanup.current = !(\n      (lastHeight.current !== gameContext.context.height || lastWidth.current !== gameContext.context.width) &&\n      lastHeight.current > 0 &&\n      lastWidth.current > 0\n    )\n    lastHeight.current = gameContext.context.height\n    lastWidth.current = gameContext.context.width\n  }, [gameContext])\n\n  React.useEffect(() => {\n    if (gameContext == null) return\n    const { add, remove, context } = gameContext\n    const { ctx } = context\n\n    const thing = draw(context)\n    if (thing == null) return\n    add(thing, events)\n\n    return () => {\n      remove(thing.path)\n      if (performCleanup.current) {\n        ctx.clearRect(thing.box.x, thing.box.y, thing.box.width, thing.box.height)\n      }\n      performCleanup.current = true\n    }\n  })\n}\n","import * as React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ScoringType } from '../lib/Scoring'\nimport { ColorSchemeType } from '../drawing/ColorScheme'\nimport { StoreState } from '../redux'\nimport { getType, getTheme, getNumber } from '../redux/selectors'\nimport { changeTheme } from '../redux/game-state'\nimport { newNumber, newType } from '../redux/thunks'\n\ntype OptionContextType = {\n  add: (cb: () => void) => void\n  remove: (cb: () => void) => void\n}\n\nexport const OptionCtx = React.createContext<OptionContextType | null>(null)\n\ntype OptionType<T = number> = React.HTMLAttributes<HTMLFieldSetElement> & {\n  name: string\n  label: string\n  selector: (arg0: StoreState) => T\n  action: (arg0: T) => void\n  options?: [string, T][]\n}\n\nconst Option: React.FC<OptionType> = React.memo(({ name, options = [], label, selector, action, ...props }) => {\n  const optionCtx = React.useContext(OptionCtx)\n  const dispatch = useDispatch()\n  const thing = useSelector(selector)\n  const [newThing, setNewThing] = React.useState(thing)\n\n  const handleChangeThing = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setNewThing(parseInt(e.target.value, 10)),\n    [],\n  )\n\n  const handleSubmit = React.useCallback(() => {\n    if (newThing !== thing) dispatch(action(newThing))\n  }, [dispatch, action, thing, newThing])\n\n  React.useEffect(() => {\n    if (optionCtx == null) return\n    optionCtx.add(handleSubmit)\n    return () => optionCtx.remove(handleSubmit)\n  })\n\n  return (\n    <fieldset {...props}>\n      <legend>{label}</legend>\n      {options.length === 0 ? (\n        <div>\n          <label htmlFor={`option-${name}`} style={{ display: 'none' }}>\n            {label}\n          </label>\n          <input type=\"text\" id={`option-${name}`} value={newThing} onChange={handleChangeThing} />\n        </div>\n      ) : (\n        options.map(([label, option]) => (\n          <div key={label.toString()}>\n            <input\n              type=\"radio\"\n              id={`${name}-${label}`}\n              checked={newThing === option}\n              value={option}\n              onChange={handleChangeThing}\n            />\n            <label htmlFor={`${name}-${label}`}>{label}</label>\n          </div>\n        ))\n      )}\n    </fieldset>\n  )\n})\n\nOption.displayName = 'Option'\n\nconst typeOptions: [string, ScoringType][] = [\n  ['Regular', ScoringType.regular],\n  ['Vegas', ScoringType.vegas],\n]\n\nconst colorSchemeOptions: [string, ColorSchemeType][] = [\n  ['Dark', ColorSchemeType.dark],\n  ['Light', ColorSchemeType.light],\n]\n\ntype OptionContainerProps = { onClose(): void } & React.HTMLAttributes<HTMLFormElement>\n\nconst Options: React.FC<OptionContainerProps> = React.memo(({ onClose, ...props }) => {\n  const options = React.useRef<Set<() => void>>(new Set())\n\n  const value = React.useMemo(\n    () => ({\n      add: (cb: () => void) => options.current.add(cb),\n      remove: (cb: () => void) => options.current.delete(cb),\n    }),\n    [],\n  )\n\n  const handleSubmit = React.useCallback(\n    (e: React.FormEvent) => {\n      e.preventDefault()\n      options.current.forEach((cb) => cb())\n      onClose()\n    },\n    [onClose],\n  )\n\n  return (\n    <form onSubmit={handleSubmit} {...props}>\n      <OptionCtx.Provider value={value}>\n        <Option name=\"game-number\" label=\"Game Number\" selector={getNumber} action={newNumber} />\n        <Option name=\"type\" label=\"Game Type\" selector={getType} action={newType} options={typeOptions} />\n        <Option name=\"theme\" label=\"Theme\" selector={getTheme} action={changeTheme} options={colorSchemeOptions} />\n      </OptionCtx.Provider>\n      <button type=\"submit\">Save</button>\n    </form>\n  )\n})\n\nOptions.displayName = 'OptionContainer'\n\nexport { Options }\nexport default React.memo(Options)\n","import { configureStore, combineReducers, ThunkAction, Action, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { createLogger } from 'redux-logger'\nimport subscribe from 'redux-subscribe-reselect'\n\nimport { getType, getGameState, getTheme, getNumber } from './selectors'\nimport stacks from './stacks'\nimport gameState from './game-state'\nimport { persist, PersistanceType } from '../lib/Persist'\nimport { StackCard, Stack } from '../lib/Card'\nimport { ScoringType } from '../lib/Scoring'\n\nconst middleware = getDefaultMiddleware({ immutableCheck: false, serializableCheck: false })\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(\n    createLogger({\n      stateTransformer: (state: StoreState) => ({\n        gameState: state.gameState.present,\n        stacks: state.stacks.present,\n      }),\n    }),\n  )\n}\n\nconst reducer = combineReducers({ stacks, gameState })\nconst store = configureStore({ reducer, middleware })\n\nsubscribe(store, getGameState, ({ scoringType, score }) => {\n  if (scoringType === ScoringType.vegas) persist(PersistanceType.score, score)\n})\nsubscribe(store, getType, (scoringType) => persist(PersistanceType.type, scoringType))\nsubscribe(store, getTheme, (newTheme) => persist(PersistanceType.theme, newTheme))\nsubscribe(store, getNumber, (number) => persist(PersistanceType.number, number))\n\nexport type StoreState = ReturnType<typeof reducer>\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk<T = void> = ThunkAction<T, StoreState, unknown, Action>\n\nexport type CardSelection = { stackCard: StackCard | null; stack: Stack }\n\nexport default store\n"],"sourceRoot":""}