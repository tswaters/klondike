{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/redux/actions.ts","webpack:///./src/ts/redux/undoable.ts","webpack:///./src/ts/lib/Stack.ts","webpack:///./src/ts/lib/util.ts","webpack:///./src/ts/lib/Card.ts","webpack:///./src/ts/redux/selectors.ts","webpack:///./src/ts/redux/tableau.ts","webpack:///./src/ts/redux/stock.ts","webpack:///./src/ts/redux/waste.ts","webpack:///./src/ts/redux/score.ts","webpack:///./src/ts/redux/deck.ts","webpack:///./src/styles/cards.scss","webpack:///./src/ts/index.tsx","webpack:///./src/ts/store.ts","webpack:///./src/ts/redux/index.ts","webpack:///./src/ts/redux/foundation.ts","webpack:///./src/ts/components/Container.tsx","webpack:///./src/ts/components/Stack.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","reselect_1","stock_1","waste_1","Stack_1","Card_1","util_1","score_1","selectors_1","undoable_1","deck_1","tableau_1","INITIALIZE","SELECT_CARD","DESELECT_CARD","MOVE_CARDS","REPLACE_TOP","getAllStacks","createSelector","getFoundation","getWaste","getTableau","stacks","foundation","waste","tableau","initialize","dispatch","getState","type","forEach","stack","card","getRandomCard","appendCard","selectCard","deselectCard","moveCards","from","to","selectedCard","index","cards","findIndex","equals","replaceTop","doubleClick","stackCard","StackType","stock","foundation_stack","ValueType","ace","find","first","suit","top_card","get_top_card","movable_to_foundation","checkpoint","incrementScore","clickFoundation","selection","get_selection","selected","selected_card","from_stack","clickWaste","clickTableau","movable_to_tableau","clickStock","state","waste_stack","stock_stack","left","getStock","useStock","addCardsToWaste","cards_to_add","map","x","filter","reverse","addCardsToStock","recycleWaste","actions_1","UNDO","undo","REDO","redo","CHECKPOINT","undoable","reducer","initialState","past","present","undefined","future","action","previous","next","newFuture","newPresent","StackDirection","card1","card2","valueToInt","jack","queen","king","parseInt","random","min","max","Math","floor","select_card","some","item","contains","assign","deselect_card","move_cards","indexOf","isRed","isBlack","WIDTH","HEIGHT","SuitType","Cards","entries","diamond","heart","club","spade","drawing","getDrawing","color","fontSize","pos","three","five","nine","y","two","four","six","seven","eight","ten","cornerFont","valueXOffset","valueYOffset","suitXOffset","suitYOffset","positions","textAlign","getTextAlign","rotated","getLeft","top","getTop","getScore","score","getDeck","deck","APPEND_CARD","default","every","USE_STOCK","ADD_CARDS_TO_STOCK","count","RECYCLE_WASTE","ADD_CARDS_TO_WASTE","showing","INCREMENT_SCORE","REMOVE_CARD","removeCard","current_deck","new_card","container","play","version","new-game","newGame","React","ReactDOM","offline","react_redux_1","store_1","Container_1","install","[object Object]","applyUpdate","location","reload","store","render","createElement","Provider","Container","document","getElementById","redux_1","redux_thunk_1","redux_2","middleware","createStore","applyMiddleware","foundation_1","combineReducers","cards_scss_1","Stack_2","selector","connect","handleNewGame","handleStockClick","handleTableauClick","handleWasteClick","handleFoundationClick","handleDoubleClick","handleUndo","handleRedo","PureComponent","props","super","this","handleNewGameClick","handleKeyDown","addEventListener","removeEventListener","e","keyCode","ctrlKey","shiftKey","className","id","onClick","StackComponent","direction","none","hidden","onDoubleClick","horizontal","offset","vertical","ref","createRef","handleCanvasClick","handleCanvasDoubleClick","stack_style","canvas_width","width","height","canvas_height","evt","nativeEvent","prop","updateCanvas","canvas","current","ctx","getContext","save","translate","clearRect","drawBoxRadius","stroke","drawClipRegion","drawCard","restore","radius","clip_width","clip_height","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","stack_card","fillStyle","fill","textBaseline","font","fillText","rotate","PI","factor","defaultProps","Infinity"],"mappings":"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","file":"klondike.3c0a6984e75a1c0e20b8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([24,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nimport {createSelector} from 'reselect'\nimport {ThunkResult} from './index'\nimport {useStock, addCardsToStock} from './stock'\nimport {addCardsToWaste, recycleWaste} from './waste'\nimport {StackCard, Stack, StackType} from '../lib/Stack'\nimport {Card, ValueType} from '../lib/Card'\nimport {equals, get_selection, movable_to_tableau, get_top_card, movable_to_foundation} from '../lib/util'\nimport {incrementScore} from './score'\nimport {getWaste, getTableau, getFoundation, getStock} from '../redux/selectors'\nimport {checkpoint} from './undoable'\nimport {getRandomCard} from './deck'\nimport {appendCard} from './tableau'\n\nexport const INITIALIZE = 'INITIALIZE'\nexport type INITIALIZE = typeof INITIALIZE\ntype Initialize = {type: INITIALIZE}\n\nexport const SELECT_CARD = 'SELECT_CARD'\ntype SELECT_CARD = typeof SELECT_CARD\ntype SelectAction = {type: SELECT_CARD, stack: Stack, card: StackCard}\n\nexport const DESELECT_CARD = 'DESELECT_CARD'\ntype DESELECT_CARD = typeof DESELECT_CARD\ntype DeselectAction = {type: DESELECT_CARD}\n\nexport const MOVE_CARDS = 'MOVE_CARDS'\ntype MOVE_CARDS = typeof MOVE_CARDS\ntype MoveCardAction = {type: MOVE_CARDS, from: Stack, to: Stack, cards: StackCard[]}\n\nexport const REPLACE_TOP = 'REPLACE_TOP'\ntype REPLACE_TOP = typeof REPLACE_TOP\ntype ReplaceTopAction = {type: REPLACE_TOP, stack: Stack, card: Card}\n\nexport type GlobalActions =\n  Initialize |\n  SelectAction |\n  DeselectAction |\n  MoveCardAction |\n  ReplaceTopAction\n\nconst getAllStacks = createSelector([\n  getFoundation,\n  getWaste,\n  getTableau\n], (\n  {stacks: foundation},\n  {stacks: waste},\n  {stacks: tableau}\n) => [\n  ...foundation,\n  ...waste,\n  ...tableau\n])\n\nexport function initialize(): ThunkResult<void> {\n  return (dispatch, getState) => {\n    dispatch({type: INITIALIZE})\n\n    const tableau = getTableau(getState())\n    tableau.stacks.forEach(stack => {\n      const card = dispatch(getRandomCard())\n      dispatch(appendCard({card}, stack))\n    })\n\n  }\n}\n\nconst selectCard = (stack: Stack, card: StackCard): SelectAction => ({type: SELECT_CARD, card, stack})\n\nconst deselectCard = (): DeselectAction => ({type: DESELECT_CARD})\n\nconst moveCards = (from: Stack, to: Stack, selectedCard: Card): MoveCardAction => {\n  const index = from.cards.findIndex(card => !!card.card && equals(card.card, selectedCard))\n  const cards = from.cards.slice(index)\n  return {type: MOVE_CARDS, from, to, cards}\n}\n\nconst replaceTop = (stack: Stack, card: Card): ReplaceTopAction => ({type: REPLACE_TOP, stack, card})\n\nexport function doubleClick (stack: Stack, stackCard?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    if (stack.type === StackType.foundation || stack.type === StackType.stock) {\n      return\n    }\n\n    if (stackCard == null) {\n      return\n    }\n\n    const {card} = stackCard\n\n    if (card == null) {\n      return\n    }\n\n    const foundation = getFoundation(getState())\n\n    const foundation_stack = (\n      card.value === ValueType.ace\n        ? foundation.stacks.find(stack => stack.cards.length === 0)\n        : foundation.stacks.find(stack => {\n          if (stack.cards.length === 0) { return false }\n          const first = stack.cards[0].card\n          if (first == null) { return false }\n          return first.suit === card.suit\n        })\n    ) as Stack\n\n    const top_card = get_top_card(foundation_stack)\n\n    if (movable_to_foundation(card, top_card)) {\n\n      dispatch(checkpoint())\n\n      if (stack.type === StackType.waste) {\n        dispatch(incrementScore(5))\n      }\n\n      if (stack.type === StackType.tableau) {\n        dispatch(incrementScore(10))\n      }\n\n      dispatch(moveCards(stack, foundation_stack, card))\n      dispatch(deselectCard())\n    }\n\n  }\n}\n\nexport function clickFoundation (stack: Stack, card?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    const stacks = getAllStacks(getState())\n    const selection = get_selection(stacks)\n\n    if (!selection) {\n      if (card && card.card) {\n        dispatch(selectCard(stack, card))\n      }\n      return\n    }\n\n    if (card && card.selected) {\n      dispatch(deselectCard())\n      return\n    }\n\n    const top_card = get_top_card(stack)\n    const {card: selected_card, stack: from_stack} = selection\n\n    if (movable_to_foundation(selected_card, top_card)) {\n\n      dispatch(checkpoint())\n\n      if (from_stack.type === StackType.waste) {\n        dispatch(incrementScore(5))\n      }\n\n      if (from_stack.type === StackType.tableau) {\n        dispatch(incrementScore(10))\n      }\n\n      dispatch(moveCards(from_stack, stack, selected_card))\n      dispatch(deselectCard())\n    }\n\n  }\n}\n\nexport function clickWaste (stack: Stack, card?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    if (!card) { return }\n\n    const stacks = getAllStacks(getState())\n    const selection = get_selection(stacks)\n    const top_card = get_top_card(stack)\n\n    if (card.selected) {\n      dispatch(deselectCard())\n      return\n    }\n\n    if (!selection && top_card === card) {\n      dispatch(selectCard(stack, card))\n    }\n\n  }\n}\n\nexport function clickTableau (stack: Stack, card?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    const stacks = getAllStacks(getState())\n    const selection = get_selection(stacks)\n\n    if (!selection) {\n      if (card && card.card) {\n        dispatch(selectCard(stack, card))\n      } else if (card) {\n        dispatch(checkpoint())\n        dispatch(incrementScore(5))\n        const card = dispatch(getRandomCard())\n        dispatch(replaceTop(stack, card))\n      }\n      return\n    }\n\n    if (card && card.selected) {\n      dispatch(deselectCard())\n      return\n    }\n\n    const top_card = get_top_card(stack)\n    const {card: selected_card, stack: from_stack} = selection\n\n    if (card === top_card && movable_to_tableau(selected_card, top_card)) {\n\n      dispatch(checkpoint())\n\n      if (from_stack.type === StackType.waste) {\n        dispatch(incrementScore(10))\n      }\n\n      if (from_stack.type === StackType.foundation) {\n        dispatch(incrementScore(-10))\n      }\n\n      dispatch(moveCards(from_stack, stack, selected_card))\n      dispatch(deselectCard())\n\n    }\n  }\n}\n\nexport function clickStock (): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    const state = getState()\n    const {stacks: [waste_stack]} = getWaste(state)\n    const {stack: stock_stack, left} = getStock(state)\n\n    dispatch(checkpoint())\n\n    if (left > 0) {\n\n      // stock starts off with 0 cards and 24 \"left\"\n      // if we haven't finished drawing from left,\n      // choose random cards from the deck to add to waste.\n\n      const cards = []\n      for (let i = 0; i < 3; i++) {\n        cards.push(dispatch(getRandomCard()))\n      }\n\n      dispatch(useStock(3))\n      dispatch(addCardsToWaste(cards))\n\n    } else if (stock_stack.cards.length > 0) {\n\n      // after recycling the waste, stock will now have cards\n      // `useStock` with 0 left will remove items off the top\n      // take those 3 items and add them to the waste pile\n      const cards_to_add = stock_stack.cards.slice(-3).map(x => x.card).filter(x => x != null).reverse() as Card[]\n\n      dispatch(useStock(3))\n      dispatch(addCardsToWaste(cards_to_add))\n\n    } else {\n\n      // take all the cards in waste in add them to the stock\n      // recycling removes all items.\n\n      const cards_to_add = waste_stack.cards.map(x => x.card).filter(x => x != null).reverse() as Card[]\n\n      dispatch(addCardsToStock(cards_to_add))\n      dispatch(recycleWaste())\n\n    }\n\n  }\n}\n","\nimport {Reducer, Action, AnyAction} from 'redux'\nimport {INITIALIZE} from './actions'\n\nexport type History <State> = {\n  past: State[],\n  present: State,\n  future: State[]\n}\n\nconst UNDO = 'UNDO'\ntype UNDO = typeof UNDO\ntype UndoAction = {type: UNDO}\nexport const undo = (): UndoAction => ({type: UNDO})\n\nconst REDO = 'REDO'\ntype REDO = typeof REDO\ntype RedoAction = {type: REDO}\nexport const redo = (): RedoAction => ({type: REDO})\n\nconst CHECKPOINT = 'CHECKPOINT'\ntype CHECKPOINT = typeof CHECKPOINT\ntype CheckpointAction = {type: CHECKPOINT}\nexport const checkpoint = (): CheckpointAction => ({type: CHECKPOINT})\n\nexport type UndoableActions = UndoAction | RedoAction | CheckpointAction\n\nexport function undoable <S, A extends AnyAction = Action>(reducer: Reducer<S, A>) {\n\n  const initialState: History<S> = {\n    past: [],\n    present: reducer(undefined, {} as A),\n    future: []\n  }\n\n  return function (state = initialState, action: A) {\n    const {past, present, future} = state\n\n    if (action.type === UNDO) {\n      const previous = past[past.length - 1]\n      if (!previous) { return state }\n\n      const newPast = past.slice(0, past.length - 1)\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future]\n      }\n    }\n\n    if (action.type === REDO) {\n      const next = future[0]\n      if (!next) { return state }\n\n      const newFuture = future.slice(1)\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture\n      }\n    }\n\n    const newPresent = reducer(present, action)\n\n    if (action.type === INITIALIZE) {\n      return {\n        past: [],\n        present: newPresent,\n        future: []\n      }\n    }\n\n    if (action.type === CHECKPOINT) {\n      return {\n        past: [...past, present],\n        present: newPresent,\n        future: []\n      }\n    }\n\n    if (present === newPresent) {\n      return state\n    }\n\n    return {\n      past,\n      present: newPresent,\n      future\n    }\n  }\n}\n","\nimport {Card} from './Card'\n\nexport type StackCard = {\n  card?: Card\n  selected?: boolean\n}\n\nexport enum StackDirection {\n  horizontal = 'horizontal',\n  vertical = 'vertical',\n  none = ''\n}\n\nexport enum StackType {\n  tableau = 'tableau',\n  foundation = 'foundation',\n  stock = 'stock',\n  waste = 'waste'\n}\n\nexport type Stack = {\n  cards: StackCard[],\n  selection?: Card,\n  type: StackType\n}\n","\nimport {Card, ValueType} from './Card'\nimport {Stack, StackCard} from './Stack'\n\nexport const random = (min: number, max: number): number => {\n  return Math.floor(Math.random() * max) + min\n}\n\nexport function equals (card1: Card, card2: Card): boolean {\n  return card1.suit === card2.suit && card1.value === card2.value\n}\n\nfunction contains (stack: Stack, card: Card) {\n  return stack.cards.some((item: StackCard) => !!item.card && equals(item.card, card))\n}\n\nexport function get_top_card (stack: Stack): StackCard | null {\n  return stack.cards[stack.cards.length - 1]\n}\n\nexport function get_selection (stacks: Stack[]): {card: Card, stack: Stack} | null {\n  for (let i = 0; i < stacks.length; i++) {\n    const stack = stacks[i]\n    if (stack.selection == null) { continue }\n    return {card: stack.selection, stack}\n  }\n  return null\n}\n\nexport function select_card (stacks: Stack[], stackCard: StackCard): Stack[] {\n  const card = stackCard.card\n  if (card == null) { return stacks }\n  return stacks.map(stack => {\n\n    if (!contains(stack, card)) { return stack }\n\n    return {\n      ...stack,\n      cards: stack.cards.map(stackCard => {\n        if (!stackCard.card) { return stackCard }\n        if (!equals(stackCard.card, card)) { return stackCard }\n        return {...stackCard, selected: true}\n      }),\n      selection: card\n    }\n\n  })\n}\n\nexport function deselect_card (stacks: Stack[]): Stack[] {\n  return stacks.map(stack => {\n    if (!stack.selection) { return stack }\n    return {\n      ...stack,\n      selection: void 0,\n      cards: stack.cards.map(card => !card.selected ? card : {...card, selected: void 0})\n    }\n  })\n}\n\nexport function move_cards (stacks: Stack[], from: Stack | null, to: Stack, cards: StackCard[]): Stack[] {\n  return stacks.map(stack => {\n    if (stack === to) {\n      return {\n        ...stack,\n        cards: [\n          ...stack.cards,\n          ...cards.map(card => ({ ...card, selected: false }) )\n        ]\n      }\n    }\n    if (stack === from) {\n      return {\n        ...stack,\n        cards: stack.cards.filter(stackCard => cards.indexOf(stackCard) === -1)\n      }\n    }\n    return stack\n  })\n}\n\nexport function movable_to_foundation (card1: Card, card2?: StackCard | null) {\n\n  if (card2 == null) {\n    return card1.value === ValueType.ace\n  }\n\n  const {card} = card2\n  if (!card) { return false }\n\n  return (\n    valueToInt(card1.value) === valueToInt(card.value) + 1 &&\n    card1.suit === card.suit\n  )\n}\n\nexport function movable_to_tableau (card1: Card, card2?: StackCard | null) {\n\n  if (card2 == null) {\n    return card1.value === ValueType.king\n  }\n\n  const {card} = card2\n  if (!card) { return false }\n\n  return (\n    valueToInt(card1.value) + 1 === valueToInt(card.value) &&\n    card1.isRed && card.isBlack || card1.isBlack && card.isRed\n  )\n}\n\nfunction valueToInt (value: ValueType): number {\n  if (value === ValueType.ace) { return 1 }\n  if (value === ValueType.jack) { return 11 }\n  if (value === ValueType.queen) { return 12 }\n  if (value === ValueType.king) { return 13 }\n  return parseInt(value)\n}\n","\nconst WIDTH = 75\nconst HEIGHT = 97\n\nexport enum ValueType {\n  ace = 'A',\n  two = '2',\n  three = '3',\n  four = '4',\n  five = '5',\n  six = '6',\n  seven = '7',\n  eight = '8',\n  nine = '9',\n  ten = '10',\n  jack = 'J',\n  queen = 'Q',\n  king = 'K'\n}\n\nenum SuitType {\n  heart = '\\u2665',\n  diamond = '\\u2666',\n  spade = '\\u2660',\n  club = '\\u2663'\n}\n\ntype Position = {\n  left: number,\n  top: number,\n  rotated: boolean,\n  textAlign: string\n}\n\ntype Drawing = {\n  color: string,\n  cornerFont: string,\n  fontSize: string\n  suitXOffset: number,\n  suitYOffset: number,\n  valueXOffset: number,\n  valueYOffset: number,\n  positions: Position[]\n}\n\nexport type Card = {\n  suit: SuitType,\n  value: ValueType,\n  drawing: Drawing,\n  isRed: boolean,\n  isBlack: boolean\n}\n\nexport const Cards: Card[] = []\nfor (const [, value] of Object.entries(ValueType)) {\n  for (const [, suit] of Object.entries(SuitType)) {\n    Cards.push({\n      suit,\n      value,\n      isRed: [SuitType.diamond, SuitType.heart].indexOf(suit) > -1,\n      isBlack: [SuitType.club, SuitType.spade].indexOf(suit) > -1,\n      drawing: getDrawing(suit, value)\n    })\n  }\n}\n\nfunction getDrawing (suit: SuitType, value: ValueType): Drawing {\n\n  type ypos = 0|1|2|3|4|5|6\n  type xpos = 0|1|2\n\n  const color = [\n    SuitType.diamond,\n    SuitType.heart\n  ].indexOf(suit) > -1 ? 'red' : 'black'\n\n  const fontSize = [\n    ValueType.ace,\n    ValueType.jack,\n    ValueType.queen,\n    ValueType.king\n  ].indexOf(value) > -1 ? '72px' : '20px'\n\n  const pos: {x: xpos, y: ypos}[] = []\n\n  if ([ValueType.ace, ValueType.three, ValueType.five, ValueType.nine, ValueType.jack, ValueType.queen, ValueType.king].indexOf(value) > -1) {\n    pos.push({x: 1, y: 3})\n  }\n\n  if ([ValueType.two, ValueType.three].indexOf(value) > -1) {\n    pos.push({x: 1, y: 0}, {x: 1, y: 6})\n  }\n\n  if ([ValueType.four, ValueType.five, ValueType.six, ValueType.seven, ValueType.eight, ValueType.nine, ValueType.ten].indexOf(value) > -1) {\n    pos.push({x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 6}, {x: 2, y: 6})\n  }\n\n  if ([ValueType.six, ValueType.seven, ValueType.eight].indexOf(value) > -1) {\n    pos.push({x: 0, y: 3}, {x: 2, y: 3})\n  }\n\n  if ([ValueType.seven, ValueType.ten, ValueType.eight].indexOf(value) > -1) {\n    pos.push({x: 1, y: 1})\n  }\n\n  if ([ValueType.nine, ValueType.ten].indexOf(value) > -1) {\n    pos.push({x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 4}, {x: 2, y: 4})\n  }\n\n  if ([ValueType.ten, ValueType.eight].indexOf(value) > -1) {\n    pos.push({x: 1, y: 5})\n  }\n\n  const getTop = (y: ypos) => {\n    switch (y) {\n      case 0: case 6: return HEIGHT * 0.2\n      case 1: case 5: return HEIGHT * 0.3\n      case 2: case 4: return HEIGHT * 0.4\n      case 3: return HEIGHT * 0.5\n    }\n  }\n\n  const getLeft = (x: xpos) => {\n    switch (x) {\n      case 0: return WIDTH * 0.25\n      case 1: return WIDTH * 0.50\n      case 2: return WIDTH * 0.75\n    }\n  }\n\n  const getTextAlign = (x: xpos) => {\n    switch (x) {\n      case 0: return 'left'\n      case 1: return 'center'\n      case 2: return 'right'\n    }\n  }\n\n  const positions: Position[] = pos.map(({x, y}) => {\n    return {\n      textAlign: getTextAlign(x),\n      rotated: y > 3,\n      left: getLeft(x),\n      top: getTop(y)\n    }\n  })\n\n  return {\n    cornerFont: 'bold 15px sans-serif',\n    valueXOffset: 9,\n    valueYOffset: 2,\n    suitXOffset: 9,\n    suitYOffset: 12,\n    color,\n    fontSize,\n    positions\n  }\n}\n","import {createSelector} from 'reselect'\nimport {StoreState} from './index'\n\nexport const getFoundation = createSelector(\n  (state: StoreState) => state.foundation.present,\n  foundation => foundation\n)\n\nexport const getScore = createSelector(\n  (state: StoreState) => state.score.present,\n  score => score\n)\n\nexport const getStock = createSelector(\n  (state: StoreState) => state.stock.present,\n  stock => stock\n)\n\nexport const getTableau = createSelector(\n  (state: StoreState) => state.tableau.present,\n  tableau => tableau\n)\n\nexport const getWaste = createSelector(\n  (state: StoreState) => state.waste.present,\n  waste => waste\n)\n\nexport const getDeck = createSelector(\n  (state: StoreState) => state.deck.present,\n  deck => deck\n)\n","\nimport {INITIALIZE, GlobalActions, SELECT_CARD, DESELECT_CARD, MOVE_CARDS, REPLACE_TOP} from './actions'\nimport {Stack, StackType, StackCard} from '../lib/Stack'\nimport {select_card, deselect_card, move_cards} from '../lib/util'\nimport {undoable} from './undoable'\n\nconst APPEND_CARD = 'APPEND_CARD'\ntype APPEND_CARD = typeof APPEND_CARD\n\ntype AppendCardAction = {\n  type: APPEND_CARD,\n  stack: Stack,\n  card: StackCard\n}\n\nexport const appendCard = (card: StackCard, stack: Stack): AppendCardAction => ({type: APPEND_CARD, card, stack})\n\nexport type TableauActions = AppendCardAction\n\nexport type TableauStore = {\n  readonly stacks: Stack[]\n}\n\nconst initialState: TableauStore = {stacks: []}\n\nfunction tableauReducer (\n  state: TableauStore = initialState,\n  action: GlobalActions | TableauActions\n): TableauStore {\n\n  if (action.type === INITIALIZE) {\n\n    const stacks: Stack[] = []\n    for (let i = 0; i <= 6; i++) {\n      const stack: Stack = {type: StackType.tableau, cards: []}\n      for (let j = 0; j < i; j++) {\n          stack.cards.push({})\n      }\n      stacks.push(stack)\n    }\n\n    return {stacks}\n  }\n\n  if (action.type === SELECT_CARD) {\n    if (state.stacks.every(stack => stack !== action.stack)) { return state }\n    return {...state, stacks: select_card(state.stacks, action.card)}\n  }\n\n  if (action.type === DESELECT_CARD) {\n    if (state.stacks.every(stack => stack.selection == null)) { return state }\n    return {...state, stacks: deselect_card(state.stacks)}\n  }\n\n  if (action.type === MOVE_CARDS) {\n    if (state.stacks.every(stack => [action.from, action.to].indexOf(stack) === -1)) { return state }\n    return {...state, stacks: move_cards(state.stacks, action.from, action.to, action.cards)}\n  }\n\n  if (action.type === REPLACE_TOP) {\n    return {\n      ...state,\n      stacks: state.stacks.map(stack => {\n        if (stack !== action.stack) { return stack }\n        return {\n          ...stack,\n          cards: stack.cards.map((card, index) => {\n            if (index < stack.cards.length - 1) { return card }\n            return {card: action.card}\n          })\n        }\n      })\n    }\n  }\n\n  if (action.type === APPEND_CARD) {\n    return {\n      ...state,\n      stacks: state.stacks.map(stack => {\n        if (stack !== action.stack) {\n          return stack\n        }\n        return {\n          ...stack,\n          cards: [...stack.cards, action.card]\n        }\n      })\n    }\n  }\n\n  return state\n\n}\n\nexport default undoable(tableauReducer)\n","\nimport {undoable} from './undoable'\nimport {INITIALIZE, GlobalActions} from './actions'\nimport {Stack, StackCard, StackType} from '../lib/Stack'\nimport {Card} from '../lib/Card'\n\nconst USE_STOCK = 'USE_STOCK'\ntype USE_STOCK = typeof USE_STOCK\ntype UseStockAction = {type: USE_STOCK, count: number}\n\nconst ADD_CARDS_TO_STOCK = 'ADD_CARDS_TO_STOCK'\ntype ADD_CARDS_TO_STOCK = typeof ADD_CARDS_TO_STOCK\ntype AddCardToStockAction = {type: ADD_CARDS_TO_STOCK, cards: Card[]}\n\nexport function useStock (count: number): UseStockAction {\n  return {type: USE_STOCK, count}\n}\n\nexport function addCardsToStock(cards: Card[]): AddCardToStockAction {\n  return {type: ADD_CARDS_TO_STOCK, cards}\n}\n\nexport type StockActions = UseStockAction | AddCardToStockAction\n\nexport type StockStore = {\n  readonly stack: Stack\n  readonly left: number\n}\n\nconst initialState: StockStore = {stack: {type: StackType.stock, cards: [{}]}, left: 24}\n\nfunction stockReducer (\n  state: StockStore = initialState,\n  action: StockActions | GlobalActions\n): StockStore {\n\n  if (action.type === INITIALIZE) {\n    return {...initialState}\n  }\n\n  if (action.type === USE_STOCK) {\n\n    let cards: StackCard[]\n    if (state.left > 0) {\n      cards = state.left - action.count === 0 ? [] : state.stack.cards\n    } else {\n      cards = state.stack.cards.slice(0, -action.count)\n    }\n\n    return {\n      stack: {\n        ...state.stack,\n        cards\n      },\n      left: state.left > 0 ? state.left - action.count : 0\n    }\n  }\n\n  if (action.type === ADD_CARDS_TO_STOCK) {\n    return {\n      ...state,\n      stack: {\n        ...state.stack,\n        cards: [\n          ...state.stack.cards,\n          ...action.cards.map(card => ({card}))\n        ]\n      }\n    }\n  }\n\n  return state\n\n}\n\nexport default undoable(stockReducer)\n","\nimport {INITIALIZE, GlobalActions, SELECT_CARD, DESELECT_CARD, MOVE_CARDS} from './actions'\nimport {select_card, deselect_card, move_cards} from '../lib/util'\nimport {Stack, StackType} from '../lib/Stack'\nimport {Card} from '../lib/Card'\nimport {undoable} from './undoable'\n\nconst RECYCLE_WASTE = 'RECYCLE_WASTE'\ntype RECYCLE_WASTE = typeof RECYCLE_WASTE\ntype RecycleAction = {type: RECYCLE_WASTE}\nexport const recycleWaste = (): RecycleAction => ({type: RECYCLE_WASTE})\n\nconst ADD_CARDS_TO_WASTE = 'ADD_CARDS_TO_WASTE'\ntype ADD_CARDS_TO_WASTE = typeof ADD_CARDS_TO_WASTE\ntype AddCardToWasteAction = {type: ADD_CARDS_TO_WASTE, cards: Card[]}\nexport const addCardsToWaste = (cards: Card[]): AddCardToWasteAction => ({type: ADD_CARDS_TO_WASTE, cards})\n\nexport type WasteActions = RecycleAction | AddCardToWasteAction\n\nexport type WasteStore = {\n  readonly stacks: Stack[] // this is an array for consistency with other stores\n  readonly showing: number\n}\n\nconst initialState: WasteStore = {stacks: [{type: StackType.waste, cards: []}], showing: 0}\n\nfunction wasteReducer (\n  state: WasteStore = initialState,\n  action: WasteActions | GlobalActions\n): WasteStore {\n\n  if (action.type === INITIALIZE) {\n    return {...initialState}\n  }\n\n  if (action.type === RECYCLE_WASTE) {\n    return {...initialState}\n  }\n\n  if (action.type === SELECT_CARD) {\n    if (state.stacks.every(stack => stack !== action.stack)) { return state }\n    return {...state, stacks: select_card(state.stacks, action.card)}\n  }\n\n  if (action.type === DESELECT_CARD) {\n    if (state.stacks.every(stack => stack.selection == null)) { return state }\n    return {...state, stacks: deselect_card(state.stacks)}\n  }\n\n  if (action.type === MOVE_CARDS) {\n    if (state.stacks.every(stack => [action.from, action.to].indexOf(stack) === -1)) { return state }\n    return {\n      ...state,\n      showing: Math.max(1, state.showing - 1),\n      stacks: move_cards(state.stacks, action.from, action.to, action.cards)\n    }\n  }\n\n  if (action.type === ADD_CARDS_TO_WASTE) {\n    const cards = [...state.stacks[0].cards, ...action.cards.map(card => ({card}))]\n    return {\n      ...state,\n      showing: Math.min(cards.length, 3),\n      stacks: state.stacks.map(stack => ({...stack, cards}))\n    }\n  }\n\n  return state\n\n}\n\nexport default undoable(wasteReducer)\n","\nimport {INITIALIZE, GlobalActions} from './actions'\nimport {undoable} from './undoable'\n\nconst INCREMENT_SCORE = 'INCREMENT_SCORE'\ntype INCREMENT_SCORE = typeof INCREMENT_SCORE\n\ntype IncrementAction = {\n  type: INCREMENT_SCORE,\n  score: number\n}\n\nexport function incrementScore (score: number): IncrementAction {\n  return {type: INCREMENT_SCORE, score}\n}\n\nexport type ScoreStore = {\n  score: number\n}\n\nexport type ScoreActions = IncrementAction\n\nconst initialState: ScoreStore = {score: 0}\n\nfunction scoreReducer (\n  state: ScoreStore = initialState,\n  action: IncrementAction | GlobalActions\n): ScoreStore {\n\n  if (action.type === INITIALIZE) {\n    return {score: 0}\n  }\n\n  if (action.type === INCREMENT_SCORE) {\n    return {score: state.score + action.score}\n  }\n\n  return state\n\n}\n\nexport default undoable(scoreReducer)\n","import {Card, Cards} from '../lib/Card'\nimport {GlobalActions, INITIALIZE} from './actions'\nimport {undoable} from './undoable'\nimport {equals, random} from '../lib/util'\nimport {ThunkResult} from '.'\nimport {getDeck} from './selectors'\n\nexport type DeckStore = {\n  readonly cards: Card[]\n}\n\nconst REMOVE_CARD = 'REMOVE_CARD'\ntype REMOVE_CARD = typeof REMOVE_CARD\ntype RemoveCardAction = {type: REMOVE_CARD, card: Card}\nexport const removeCard = (card: Card): RemoveCardAction => ({type: REMOVE_CARD, card})\n\nexport type DeckActions = RemoveCardAction\n\nexport const getRandomCard = (): ThunkResult<Card> => {\n  return (dispatch, getState) => {\n\n    const current_deck = getDeck(getState())\n    const new_card = current_deck.cards[random(0, current_deck.cards.length - 1)]\n\n    dispatch(removeCard(new_card))\n    return new_card\n  }\n}\n\nconst initialState: DeckStore = {\n  cards: []\n}\n\nfunction deckReducer (\n  state: DeckStore = initialState,\n  action: DeckActions | GlobalActions\n): DeckStore {\n\n  if (action.type === INITIALIZE) {\n    const cards = []\n    for (const card of Cards) {\n      cards.push({...card})\n    }\n    return {cards}\n  }\n\n  if (action.type === REMOVE_CARD) {\n    return {\n      cards: state.cards.filter(card => !equals(card, action.card))\n    }\n  }\n\n  return state\n}\n\nexport default undoable(deckReducer)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3hBob\",\"top\":\"_3awzY\",\"play\":\"_1E68Q\",\"stock\":\"_2EnhJ\",\"waste\":\"_3xl1i\",\"foundation\":\"cOfJ3\",\"tableau\":\"_2j3jz\",\"version\":\"_3qfCP\",\"new-game\":\"_3o9uZ\",\"newGame\":\"_3o9uZ\",\"score\":\"_1xo1P\"};","\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport * as offline from 'offline-plugin/runtime'\nimport {Provider} from 'react-redux'\nimport configStore from './store'\nimport {initialize} from './redux/actions'\nimport {Container} from './components/Container'\nimport {ThunkDispatch} from './redux'\n\noffline.install({\n  onUpdateReady () { offline.applyUpdate() },\n  onUpdated () { window.location.reload() }\n})\n\nconst store = configStore()\n\n; (store.dispatch as ThunkDispatch)(initialize())\n\nReactDOM.render(\n  <Provider store={store}>\n    <Container />\n  </Provider>,\n  document.getElementById('root')\n)\n","\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\nimport {createLogger} from 'redux-logger'\nimport reducer, {StoreState, StoreActions} from './redux'\n\nexport default function configStore (state?: object) {\n\n  const middleware = []\n\n  middleware.push(thunk as ThunkMiddleware<StoreState, StoreActions>)\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger())\n  }\n\n  return createStore(\n    reducer,\n    state!,\n    applyMiddleware(...middleware)\n  )\n}\n","\nimport {combineReducers} from 'redux'\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk'\nimport {GlobalActions} from './actions'\nimport tableau, {TableauStore, TableauActions} from './tableau'\nimport foundation, {FoundationStore} from './foundation'\nimport waste, {WasteStore, WasteActions} from './waste'\nimport stock, {StockStore, StockActions} from './stock'\nimport score, {ScoreStore, ScoreActions} from './score'\nimport deck, {DeckStore, DeckActions} from './deck'\nimport {History, UndoableActions} from './undoable'\n\nexport type StoreActions =\n  GlobalActions |\n  ScoreActions |\n  WasteActions |\n  StockActions |\n  UndoableActions |\n  DeckActions |\n  TableauActions\n\nexport type StoreState = {\n  deck: History<DeckStore>,\n  tableau: History<TableauStore>,\n  foundation: History<FoundationStore>,\n  waste: History<WasteStore>,\n  stock: History<StockStore>,\n  score: History<ScoreStore>\n}\n\nexport type ThunkResult<R> = ThunkAction<R, StoreState, null, StoreActions>\nexport type ThunkDispatch = ThunkDispatch<StoreState, null, StoreActions>\n\nexport default combineReducers<StoreState, StoreActions>({\n  deck,\n  tableau,\n  foundation,\n  waste,\n  stock,\n  score\n})\n","\nimport {INITIALIZE, GlobalActions, SELECT_CARD, DESELECT_CARD, MOVE_CARDS} from './actions'\nimport {Stack, StackType} from '../lib/Stack'\nimport {select_card, deselect_card, move_cards} from '../lib/util'\nimport {undoable} from './undoable'\n\nexport type FoundationStore = {\n  readonly stacks: Stack[]\n}\n\nconst initialState: FoundationStore = {\n  stacks: [\n    {type: StackType.foundation, cards: []},\n    {type: StackType.foundation, cards: []},\n    {type: StackType.foundation, cards: []},\n    {type: StackType.foundation, cards: []}\n  ]\n}\n\nfunction foundationReducer (\n  state: FoundationStore = initialState,\n  action: GlobalActions\n): FoundationStore {\n\n  if (action.type === INITIALIZE) {\n    return {...initialState}\n  }\n\n  if (action.type === SELECT_CARD) {\n    if (state.stacks.every(stack => stack !== action.stack)) { return state }\n    return {...state, stacks: select_card(state.stacks, action.card)}\n  }\n\n  if (action.type === DESELECT_CARD) {\n    if (state.stacks.every(stack => stack.selection == null)) { return state }\n    return {...state, stacks: deselect_card(state.stacks)}\n  }\n\n  if (action.type === MOVE_CARDS) {\n    if (state.stacks.every(stack => [action.from, action.to].indexOf(stack) === -1)) { return state }\n    return {...state, stacks: move_cards(state.stacks, action.from, action.to, action.cards)}\n  }\n\n  return state\n\n}\n\nexport default undoable(foundationReducer)\n","\nimport * as React from 'react'\nimport {connect} from 'react-redux'\nimport {createSelector} from 'reselect'\nimport {StackComponent} from './Stack'\nimport {container, top, play, newGame, score, version} from '../../styles/cards.scss'\nimport {StoreState, ThunkDispatch} from '../redux'\nimport {Stack, StackCard, StackType, StackDirection} from '../lib/Stack'\nimport {initialize, clickStock, clickTableau, clickWaste, clickFoundation, doubleClick} from '../redux/actions'\nimport {WasteStore} from '../redux/waste'\nimport {getWaste, getTableau, getFoundation, getStock, getScore} from '../redux/selectors'\nimport {undo, redo} from '../redux/undoable'\n\ntype ContainerConnectedProps = {\n  tableau: Stack[],\n  foundation: Stack[],\n  stock: Stack,\n  waste: WasteStore,\n  score: number\n}\n\ntype ContainerActionProps = {\n  handleNewGame: () => void\n  handleStockClick: (stack: Stack, card?: StackCard) => void,\n  handleTableauClick: (stack: Stack, card?: StackCard) => void,\n  handleWasteClick: (stack: Stack, card?: StackCard) => void,\n  handleFoundationClick: (stack: Stack, card?: StackCard) => void,\n  handleDoubleClick: (stack: Stack, card?: StackCard) => void,\n  handleUndo: () => void,\n  handleRedo: () => void\n}\n\ntype ContainerProps = ContainerConnectedProps & ContainerActionProps\n\nclass ContainerComponent extends React.PureComponent<ContainerProps> {\n\n  constructor (props: ContainerProps) {\n    super(props)\n    this.handleNewGameClick = this.handleNewGameClick.bind(this)\n    this.handleStockClick = this.handleStockClick.bind(this)\n    this.handleTableauClick = this.handleTableauClick.bind(this)\n    this.handleWasteClick = this.handleWasteClick.bind(this)\n    this.handleFoundationClick = this.handleFoundationClick.bind(this)\n    this.handleDoubleClick = this.handleDoubleClick.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n  }\n\n  componentDidMount () {\n    document.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleNewGameClick () {\n    this.props.handleNewGame()\n  }\n\n  handleKeyDown (e: KeyboardEvent) {\n    if (e.keyCode !== 90) { return }\n    if (e.ctrlKey && e.shiftKey) {\n      this.props.handleRedo()\n    } else if (e.ctrlKey) {\n      this.props.handleUndo()\n    }\n  }\n\n  handleStockClick (stack: Stack, card?: StackCard) {\n    this.props.handleStockClick(stack, card)\n  }\n\n  handleTableauClick (stack: Stack, card?: StackCard) {\n    this.props.handleTableauClick(stack, card)\n  }\n\n  handleWasteClick (stack: Stack, card?: StackCard) {\n    this.props.handleWasteClick(stack, card)\n  }\n\n  handleFoundationClick (stack: Stack, card?: StackCard) {\n    this.props.handleFoundationClick(stack, card)\n  }\n\n  handleDoubleClick (stack: Stack, card?: StackCard) {\n    this.props.handleDoubleClick(stack, card)\n  }\n\n  render () {\n    return (\n      <div className={container}>\n        <div>\n          <button id=\"new-game\" className={newGame} onClick={this.handleNewGameClick}>\n            {'New Game'}\n          </button>\n          <label id=\"score\" className={score}>\n            {'Score: '}\n            {this.props.score}\n          </label>\n        </div>\n        <div className={top}>\n          <StackComponent\n            stack={this.props.stock}\n            onClick={this.handleStockClick}\n            direction={StackDirection.none}\n            type={StackType.stock}\n            hidden={true}\n          />\n          <StackComponent\n            stack={this.props.waste.stacks[0]}\n            onClick={this.handleWasteClick}\n            onDoubleClick={this.handleDoubleClick}\n            direction={StackDirection.horizontal}\n            type={StackType.waste}\n            max={this.props.waste.showing}\n            offset={15}\n          />\n          {this.props.foundation.map((stack, index) => (\n            <StackComponent\n              key={`foundation-${index}`}\n              onClick={this.handleFoundationClick}\n              stack={stack}\n              direction={StackDirection.none}\n              type={StackType.foundation}\n              max={1}\n            />\n          ))}\n        </div>\n        <div className={play}>\n          {this.props.tableau.map((stack, index) => (\n            <StackComponent\n              key={`tableau-${index}`}\n              onClick={this.handleTableauClick}\n              onDoubleClick={this.handleDoubleClick}\n              stack={stack}\n              direction={StackDirection.vertical}\n              type={StackType.tableau}\n            />\n          ))}\n        </div>\n        <div className={version}>\n          {process.env.version}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst selector = createSelector([\n  getTableau,\n  getFoundation,\n  getStock,\n  getWaste,\n  getScore\n], (\n  {stacks: tableau},\n  {stacks: foundation},\n  {stack: stock},\n  waste,\n  {score}\n) => ({\n  tableau,\n  foundation,\n  stock,\n  waste,\n  score\n}))\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch): ContainerActionProps => ({\n  handleNewGame: () => dispatch(initialize()),\n  handleStockClick: () => dispatch(clickStock()),\n  handleTableauClick: (stack, card) => dispatch(clickTableau(stack, card)),\n  handleWasteClick: (stack, card) => dispatch(clickWaste(stack, card)),\n  handleFoundationClick: (stack, card) => dispatch(clickFoundation(stack, card)),\n  handleDoubleClick: (stack, card) => dispatch(doubleClick(stack, card)),\n  handleUndo: () => dispatch(undo()),\n  handleRedo: () => dispatch(redo())\n})\n\nconst mapStateToProps = (state: StoreState): ContainerConnectedProps => selector(state)\n\nexport const Container = connect(mapStateToProps, mapDispatchToProps)(ContainerComponent)\n","\nimport * as React from 'react'\nimport {stock, waste, tableau, foundation} from '../../styles/cards.scss'\nimport {Stack, StackCard, StackType, StackDirection} from '../lib/Stack'\n\ntype CardClickEvent = (stack: Stack, card: StackCard) => void\n\ntype StackOwnProps = {\n  type: StackType,\n  direction: StackDirection,\n  children?: React.ReactNode,\n  stack: Stack,\n  onClick?: CardClickEvent,\n  onDoubleClick?: CardClickEvent\n  max: number,\n  hidden: boolean,\n  width: number,\n  height: number,\n  offset: number,\n  radius: number\n}\n\ntype StackConnectedProps = {\n}\n\ntype StackProps = StackOwnProps & StackConnectedProps\n\ntype Point = {\n  x: number\n  y: number\n}\n\nexport class StackComponent extends React.PureComponent<StackProps> {\n\n  static defaultProps = {\n    max: Infinity,\n    hidden: false,\n    width: 74,\n    height: 97,\n    offset: 20,\n    radius: 10\n  }\n\n  private ref = React.createRef<HTMLCanvasElement>()\n\n  constructor (props: StackProps) {\n    super(props)\n    this.handleCanvasClick = this.handleCanvasClick.bind(this)\n    this.handleCanvasDoubleClick = this.handleCanvasDoubleClick.bind(this)\n  }\n\n  get stack_style(): string {\n    switch (this.props.type) {\n      case StackType.foundation: return foundation\n      case StackType.tableau: return tableau\n      case StackType.stock: return stock\n      case StackType.waste: return waste\n    }\n  }\n\n  get canvas_width () {\n    switch (this.props.direction) {\n      case StackDirection.none:\n      case StackDirection.vertical:\n        return this.props.width\n      case StackDirection.horizontal:\n        return this.cards.length === 0\n          ? this.props.height\n          : (this.props.offset * (this.cards.length - 1) + this.props.width)\n    }\n  }\n\n  get canvas_height () {\n    switch (this.props.direction) {\n      case StackDirection.none:\n      case StackDirection.horizontal:\n        return this.props.height\n      case StackDirection.vertical:\n        return this.cards.length === 0\n          ? this.props.height\n          : this.props.offset * (this.cards.length - 1) + this.props.height\n    }\n  }\n\n  get cards () {\n    return this.props.hidden && this.props.stack.cards.length > 0\n      ? [{}]\n      : this.props.stack.cards.slice(-this.props.max)\n  }\n\n  handleCanvasDoubleClick (evt: React.MouseEvent<Element>) {\n    const {cards} = this\n    const {stack, offset, direction, onDoubleClick} = this.props\n    const {nativeEvent: e} = evt\n    if (!onDoubleClick) { return }\n\n    const prop = direction === StackDirection.horizontal ? 'offsetX' : 'offsetY'\n    const index = Math.min(cards.length - 1, Math.floor(e[prop] / offset))\n    onDoubleClick(stack, cards[index])\n  }\n\n  handleCanvasClick (evt: React.MouseEvent<Element>) {\n    const {cards} = this\n    const {stack, offset, direction, onClick} = this.props\n    const {nativeEvent: e} = evt\n    if (!onClick) { return }\n\n    const prop = direction === StackDirection.horizontal ? 'offsetX' : 'offsetY'\n    const index = Math.min(cards.length - 1, Math.floor(e[prop] / offset))\n    onClick(stack, cards[index])\n  }\n\n  componentDidMount () {\n    this.updateCanvas()\n  }\n\n  componentDidUpdate () {\n    this.updateCanvas()\n  }\n\n  updateCanvas () {\n    const canvas = this.ref.current\n    if (!canvas) { return }\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) { return }\n\n    const {cards} = this\n    const {direction, offset} = this.props\n\n    ctx.save()\n    ctx.translate(0.5, 0.5)\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n    if (cards.length === 0) {\n      this.drawBoxRadius(ctx, {x: 0, y: 0})\n      ctx.stroke()\n    }\n\n    for (let i = 0; i < cards.length; i++) {\n      const x = direction === StackDirection.horizontal ? i * offset : 0\n      const y = direction === StackDirection.horizontal ? 0 : i * offset\n\n      if (i < cards.length - 1) {\n        ctx.save()\n        this.drawClipRegion(ctx, {x, y})\n      }\n\n      this.drawCard(ctx, cards[i], {x, y})\n\n      if (i < cards.length - 1) {\n        ctx.restore()\n      }\n    }\n    ctx.restore()\n  }\n\n  drawClipRegion (ctx: CanvasRenderingContext2D, {x, y}: Point) {\n\n    const {direction, radius, offset, width, height} = this.props\n    const clip_width = direction === StackDirection.horizontal ? offset : width\n    const clip_height = direction === StackDirection.horizontal ? height : offset\n\n    ctx.beginPath()\n    if (direction === StackDirection.horizontal) {\n      ctx.moveTo(x, y)\n      ctx.lineTo(x + clip_width + radius, y)\n      ctx.quadraticCurveTo(x + clip_width, y, x + clip_width, y + radius)\n      ctx.lineTo(x + clip_width, y + clip_height - radius)\n      ctx.quadraticCurveTo(x + clip_width, y + clip_height, x + clip_width + radius, y + clip_height)\n      ctx.lineTo(x, y + clip_height)\n    } else {\n      ctx.moveTo(x + clip_width, y)\n      ctx.lineTo(x + clip_width, y + clip_height + radius)\n      ctx.quadraticCurveTo(x + clip_width, y + clip_height, x + clip_width - radius, y + clip_height)\n      ctx.lineTo(x + radius, y + clip_height)\n      ctx.quadraticCurveTo(x, y + clip_height, x, y + clip_height + radius)\n      ctx.lineTo(x, y)\n    }\n    ctx.closePath()\n    ctx.clip()\n  }\n\n  drawBoxRadius (ctx: CanvasRenderingContext2D, {x, y}: Point) {\n    const {radius, height, width} = this.props\n    ctx.beginPath()\n    ctx.moveTo(x + radius, y)\n    ctx.lineTo(x + width - radius, y)\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n    ctx.lineTo(x + width, y + height - radius)\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n    ctx.lineTo(x + radius, y + height)\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n    ctx.lineTo(x, y + radius)\n    ctx.quadraticCurveTo(x, y, x + radius, y)\n    ctx.closePath()\n  }\n\n  drawCard (ctx: CanvasRenderingContext2D, stack_card: StackCard, {x, y}: Point) {\n\n    const {card, selected} = stack_card\n\n    this.drawBoxRadius(ctx, {x, y})\n    ctx.stroke()\n\n    if (!card) {\n      ctx.fillStyle = '#0aa'\n      ctx.fill()\n      return\n    }\n\n    if (selected) {\n      ctx.fillStyle = 'yellow'\n      ctx.fill()\n    }\n\n    const {value, suit, drawing} = card\n\n    ctx.fillStyle = drawing.color\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'top'\n\n    ctx.font = drawing.cornerFont\n    ctx.fillText(value, drawing.valueXOffset + x, drawing.valueYOffset + y, 12)\n    ctx.fillText(suit, drawing.suitXOffset + x, drawing.suitYOffset + y)\n\n    ctx.save()\n    ctx.translate(this.props.width, this.props.height)\n    ctx.rotate(Math.PI)\n    ctx.fillText(value, drawing.valueXOffset - x, drawing.valueYOffset - y, 12)\n    ctx.fillText(suit, drawing.suitXOffset - x, drawing.suitYOffset - y)\n    ctx.restore()\n\n    ctx.textBaseline = 'middle'\n\n    for (const pos of drawing.positions) {\n      const factor = pos.rotated ? -1 : 1\n      ctx.textAlign = pos.textAlign\n\n      if (pos.rotated) {\n        ctx.save()\n        ctx.translate(this.props.width, this.props.height)\n        ctx.rotate(Math.PI)\n      }\n\n      ctx.font = `${drawing.fontSize} sans-serif`\n      ctx.fillText(suit, pos.left + x * factor, pos.top + y * factor)\n\n      if (pos.rotated) {\n        ctx.restore()\n      }\n    }\n  }\n\n  render () {\n    return (\n      <canvas\n        onDoubleClick={this.handleCanvasDoubleClick}\n        onClick={this.handleCanvasClick}\n        className={this.stack_style}\n        width={this.canvas_width + 1}\n        height={this.canvas_height + 1}\n        ref={this.ref}\n      />\n    )\n  }\n}\n"],"sourceRoot":""}