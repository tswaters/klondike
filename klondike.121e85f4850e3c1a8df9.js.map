{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/redux/actions.ts","webpack:///./src/ts/lib/Stack.ts","webpack:///./src/ts/lib/util.ts","webpack:///./src/ts/lib/Deck.ts","webpack:///./src/ts/lib/Card.ts","webpack:///./src/ts/redux/stock.ts","webpack:///./src/ts/redux/waste.ts","webpack:///./src/ts/redux/score.ts","webpack:///./src/styles/cards.scss","webpack:///./src/ts/index.tsx","webpack:///./src/ts/store.ts","webpack:///./src/ts/redux/index.ts","webpack:///./src/ts/redux/tableau.ts","webpack:///./src/ts/redux/foundation.ts","webpack:///./src/ts/components/Container.tsx","webpack:///./src/ts/components/Stack.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","reselect_1","Deck_1","stock_1","waste_1","Stack_1","Card_1","util_1","score_1","INITIALIZE","SELECT_CARD","DESELECT_CARD","MOVE_CARDS","REPLACE_TOP","getAllStacks","createSelector","state","foundation","stacks","waste","tableau","initialize","type","selectCard","stack","card","deselectCard","moveCards","from","to","selectedCard","index","cards","findIndex","equals","replaceTop","doubleClick","stackCard","dispatch","getState","StackType","stock","foundation_stack","ValueType","ace","find","first","suit","top_card","get_top_card","movable_to_foundation","incrementScore","clickFoundation","selection","get_selection","selected","selected_card","from_stack","clickWaste","clickTableau","default","getCard","movable_to_tableau","clickStock","stock_stack","left","waste_stack","useStock","addCardsToWaste","cards_to_add","map","x","filter","reverse","addCardsToStock","recycleWaste","StackDirection","card1","card2","valueToInt","jack","queen","king","parseInt","random","min","max","Math","floor","select_card","some","item","contains","assign","deselect_card","move_cards","indexOf","isRed","isBlack","[object Object]","this","shuffle","Cards","WIDTH","HEIGHT","SuitType","entries","diamond","heart","club","spade","drawing","getDrawing","color","fontSize","pos","three","five","nine","y","two","four","six","seven","eight","ten","cornerFont","valueXOffset","valueYOffset","suitXOffset","suitYOffset","positions","textAlign","getTextAlign","rotated","getLeft","top","getTop","actions_1","USE_STOCK","ADD_CARDS_TO_STOCK","count","initialState","action","RECYCLE_WASTE","ADD_CARDS_TO_WASTE","showing","every","INCREMENT_SCORE","score","container","play","version","new-game","newGame","React","ReactDOM","offline","react_redux_1","store_1","Container_1","install","applyUpdate","location","reload","store","render","createElement","Provider","Container","document","getElementById","redux_1","redux_thunk_1","redux_2","middleware","createStore","applyMiddleware","tableau_1","foundation_1","combineReducers","cards_scss_1","Stack_2","selector","connect","handleNewGame","handleStockClick","handleTableauClick","handleWasteClick","handleFoundationClick","handleDoubleClick","PureComponent","props","super","handleNewGameClick","className","id","onClick","StackComponent","direction","none","hidden","onDoubleClick","horizontal","offset","vertical","ref","createRef","handleCanvasClick","handleCanvasDoubleClick","stack_style","canvas_width","width","height","canvas_height","evt","nativeEvent","e","prop","updateCanvas","canvas","current","ctx","getContext","save","translate","clearRect","drawBoxRadius","stroke","drawClipRegion","drawCard","restore","radius","clip_width","clip_height","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","stack_card","fillStyle","fill","textBaseline","font","fillText","rotate","PI","factor","defaultProps","Infinity"],"mappings":"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","file":"klondike.121e85f4850e3c1a8df9.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([21,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nimport {createSelector} from 'reselect'\nimport Deck from '../lib/Deck'\nimport {ThunkResult, StoreState} from './index'\nimport {useStock, addCardsToStock} from './stock'\nimport {addCardsToWaste, recycleWaste} from './waste'\nimport {StackCard, Stack, StackType} from '../lib/Stack'\nimport {Card, ValueType} from '../lib/Card'\nimport {equals, get_selection, movable_to_tableau, get_top_card, movable_to_foundation} from '../lib/util'\nimport {incrementScore} from './score'\n\nexport const INITIALIZE = 'INITIALIZE'\nexport type INITIALIZE = typeof INITIALIZE\ntype Initialize = {type: INITIALIZE}\n\nexport const SELECT_CARD = 'SELECT_CARD'\ntype SELECT_CARD = typeof SELECT_CARD\ntype SelectAction = {type: SELECT_CARD, stack: Stack, card: StackCard}\n\nexport const DESELECT_CARD = 'DESELECT_CARD'\ntype DESELECT_CARD = typeof DESELECT_CARD\ntype DeselectAction = {type: DESELECT_CARD}\n\nexport const MOVE_CARDS = 'MOVE_CARDS'\ntype MOVE_CARDS = typeof MOVE_CARDS\ntype MoveCardAction = {type: MOVE_CARDS, from: Stack, to: Stack, cards: StackCard[]}\n\nexport const REPLACE_TOP = 'REPLACE_TOP'\ntype REPLACE_TOP = typeof REPLACE_TOP\ntype ReplaceTopAction = {type: REPLACE_TOP, stack: Stack, card: Card}\n\nexport type GlobalActions =\n  Initialize |\n  SelectAction |\n  DeselectAction |\n  MoveCardAction |\n  ReplaceTopAction\n\nconst getAllStacks = createSelector([\n  (state: StoreState) => state.foundation.stacks,\n  (state: StoreState) => state.waste.stacks,\n  (state: StoreState) => state.tableau.stacks\n], (foundation, waste, tableau) => [...foundation, ...waste, ...tableau])\n\nexport const initialize = (): Initialize => ({type: INITIALIZE})\n\nconst selectCard = (stack: Stack, card: StackCard): SelectAction => ({type: SELECT_CARD, card, stack})\n\nconst deselectCard = (): DeselectAction => ({type: DESELECT_CARD})\n\nconst moveCards = (from: Stack, to: Stack, selectedCard: Card): MoveCardAction => {\n  const index = from.cards.findIndex(card => !!card.card && equals(card.card, selectedCard))\n  const cards = from.cards.slice(index)\n  return {type: MOVE_CARDS, from, to, cards}\n}\n\nconst replaceTop = (stack: Stack, card: Card): ReplaceTopAction => ({type: REPLACE_TOP, stack, card})\n\nexport function doubleClick (stack: Stack, stackCard?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    if (stack.type === StackType.foundation || stack.type === StackType.stock) {\n      return\n    }\n\n    if (stackCard == null) {\n      return\n    }\n\n    const {card} = stackCard\n\n    if (card == null) {\n      return\n    }\n\n    const {foundation} = getState()\n\n    const foundation_stack = (\n      card.value === ValueType.ace\n        ? foundation.stacks.find(stack => stack.cards.length === 0)\n        : foundation.stacks.find(stack => {\n          if (stack.cards.length === 0) { return false }\n          const first = stack.cards[0].card\n          if (first == null) { return false }\n          return first.suit === card.suit\n        })\n    ) as Stack\n\n    const top_card = get_top_card(foundation_stack)\n\n    if (movable_to_foundation(card, top_card)) {\n\n      if (stack.type === StackType.waste) {\n        dispatch(incrementScore(5))\n      }\n\n      if (stack.type === StackType.tableau) {\n        dispatch(incrementScore(10))\n      }\n\n      dispatch(moveCards(stack, foundation_stack, card))\n      dispatch(deselectCard())\n    }\n\n  }\n}\n\nexport function clickFoundation (stack: Stack, card?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    const stacks = getAllStacks(getState())\n    const selection = get_selection(stacks)\n\n    if (!selection) {\n      if (card && card.card) {\n        dispatch(selectCard(stack, card))\n      }\n      return\n    }\n\n    if (card && card.selected) {\n      dispatch(deselectCard())\n      return\n    }\n\n    const top_card = get_top_card(stack)\n    const {card: selected_card, stack: from_stack} = selection\n\n    if (movable_to_foundation(selected_card, top_card)) {\n\n      if (from_stack.type === StackType.waste) {\n        dispatch(incrementScore(5))\n      }\n\n      if (from_stack.type === StackType.tableau) {\n        dispatch(incrementScore(10))\n      }\n\n      dispatch(moveCards(from_stack, stack, selected_card))\n      dispatch(deselectCard())\n    }\n\n  }\n}\n\nexport function clickWaste (stack: Stack, card?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    if (!card) { return }\n\n    const stacks = getAllStacks(getState())\n    const selection = get_selection(stacks)\n    const top_card = get_top_card(stack)\n\n    if (card.selected) {\n      dispatch(deselectCard())\n      return\n    }\n\n    if (!selection && top_card === card) {\n      dispatch(selectCard(stack, card))\n    }\n\n  }\n}\n\nexport function clickTableau (stack: Stack, card?: StackCard): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    const stacks = getAllStacks(getState())\n    const selection = get_selection(stacks)\n\n    if (!selection) {\n      if (card && card.card) {\n        dispatch(selectCard(stack, card))\n      } else if (card) {\n        dispatch(incrementScore(5))\n        dispatch(replaceTop(stack, Deck.getCard()))\n      }\n      return\n    }\n\n    if (card && card.selected) {\n      dispatch(deselectCard())\n      return\n    }\n\n    const top_card = get_top_card(stack)\n    const {card: selected_card, stack: from_stack} = selection\n\n    if (card === top_card && movable_to_tableau(selected_card, top_card)) {\n\n      if (from_stack.type === StackType.waste) {\n        dispatch(incrementScore(10))\n      }\n\n      if (from_stack.type === StackType.foundation) {\n        dispatch(incrementScore(-10))\n      }\n\n      dispatch(moveCards(from_stack, stack, selected_card))\n      dispatch(deselectCard())\n\n    }\n  }\n}\n\nexport function clickStock (): ThunkResult<void> {\n  return (dispatch, getState) => {\n\n    const {\n      stock: {stack: stock_stack, left},\n      waste: {stacks: [waste_stack]}\n    } = getState()\n\n    if (left > 0) {\n\n      // stock starts off with 0 cards and 24 \"left\"\n      // if we haven't finished drawing from left,\n      // choose random cards from the deck to add to waste.\n\n      dispatch(useStock(3))\n      dispatch(addCardsToWaste([Deck.getCard(), Deck.getCard(), Deck.getCard()]))\n\n    } else if (stock_stack.cards.length > 0) {\n\n      // after recycling the waste, stock will now have cards\n      // `useStock` with 0 left will remove items off the top\n      // take those 3 items and add them to the waste pile\n      const cards_to_add = stock_stack.cards.slice(-3).map(x => x.card).filter(x => x != null).reverse() as Card[]\n\n      dispatch(useStock(3))\n      dispatch(addCardsToWaste(cards_to_add))\n\n    } else {\n\n      // take all the cards in waste in add them to the stock\n      // recycling removes all items.\n\n      const cards_to_add = waste_stack.cards.map(x => x.card).filter(x => x != null).reverse() as Card[]\n\n      dispatch(addCardsToStock(cards_to_add))\n      dispatch(recycleWaste())\n\n    }\n\n  }\n}\n","\nimport {Card} from './Card'\n\nexport type StackCard = {\n  card?: Card\n  selected?: boolean\n}\n\nexport enum StackDirection {\n  horizontal = 'horizontal',\n  vertical = 'vertical',\n  none = ''\n}\n\nexport enum StackType {\n  tableau = 'tableau',\n  foundation = 'foundation',\n  stock = 'stock',\n  waste = 'waste'\n}\n\nexport type Stack = {\n  cards: StackCard[],\n  selection?: Card,\n  type: StackType\n}\n","\nimport {Card, ValueType} from './Card'\nimport {Stack, StackCard} from './Stack'\n\nexport const random = (min: number, max: number): number => {\n  return Math.floor(Math.random() * max) + min\n}\n\nexport function equals (card1: Card, card2: Card): boolean {\n  return card1.suit === card2.suit && card1.value === card2.value\n}\n\nfunction contains (stack: Stack, card: Card) {\n  return stack.cards.some((item: StackCard) => !!item.card && equals(item.card, card))\n}\n\nexport function get_top_card (stack: Stack): StackCard | null {\n  return stack.cards[stack.cards.length - 1]\n}\n\nexport function get_selection (stacks: Stack[]): {card: Card, stack: Stack} | null {\n  for (let i = 0; i < stacks.length; i++) {\n    const stack = stacks[i]\n    if (stack.selection == null) { continue }\n    return {card: stack.selection, stack}\n  }\n  return null\n}\n\nexport function select_card (stacks: Stack[], stackCard: StackCard): Stack[] {\n  const card = stackCard.card\n  if (card == null) { return stacks }\n  return stacks.map(stack => {\n\n    if (!contains(stack, card)) { return stack }\n\n    return {\n      ...stack,\n      cards: stack.cards.map(stackCard => {\n        if (!stackCard.card) { return stackCard }\n        if (!equals(stackCard.card, card)) { return stackCard }\n        return {...stackCard, selected: true}\n      }),\n      selection: card\n    }\n\n  })\n}\n\nexport function deselect_card (stacks: Stack[]): Stack[] {\n  return stacks.map(stack => {\n    if (!stack.selection) { return stack }\n    return {\n      ...stack,\n      selection: void 0,\n      cards: stack.cards.map(card => !card.selected ? card : {...card, selected: void 0})\n    }\n  })\n}\n\nexport function move_cards (stacks: Stack[], from: Stack | null, to: Stack, cards: StackCard[]): Stack[] {\n  return stacks.map(stack => {\n    if (stack === to) {\n      return {\n        ...stack,\n        cards: [\n          ...stack.cards,\n          ...cards.map(card => ({ ...card, selected: false }) )\n        ]\n      }\n    }\n    if (stack === from) {\n      return {\n        ...stack,\n        cards: stack.cards.filter(stackCard => cards.indexOf(stackCard) === -1)\n      }\n    }\n    return stack\n  })\n}\n\nexport function movable_to_foundation (card1: Card, card2?: StackCard | null) {\n\n  if (card2 == null) {\n    return card1.value === ValueType.ace\n  }\n\n  const {card} = card2\n  if (!card) { return false }\n\n  return (\n    valueToInt(card1.value) === valueToInt(card.value) + 1 &&\n    card1.suit === card.suit\n  )\n}\n\nexport function movable_to_tableau (card1: Card, card2?: StackCard | null) {\n\n  if (card2 == null) {\n    return card1.value === ValueType.king\n  }\n\n  const {card} = card2\n  if (!card) { return false }\n\n  return (\n    valueToInt(card1.value) + 1 === valueToInt(card.value) &&\n    card1.isRed && card.isBlack || card1.isBlack && card.isRed\n  )\n}\n\nfunction valueToInt (value: ValueType): number {\n  if (value === ValueType.ace) { return 1 }\n  if (value === ValueType.jack) { return 11 }\n  if (value === ValueType.queen) { return 12 }\n  if (value === ValueType.king) { return 13 }\n  return parseInt(value)\n}\n","\nimport {Card, Cards} from './Card'\nimport {random} from './util'\n\nclass Deck {\n\n  cards: Card[] = []\n\n  constructor () {\n    this.shuffle()\n  }\n\n  shuffle (): void {\n    this.cards = []\n    for (const card of Cards) {\n      this.cards.push({...card})\n    }\n  }\n\n  getCard (): Card {\n    return this.cards.splice(random(0, this.cards.length - 1), 1)[0]\n  }\n\n}\n\nexport default new Deck()\n","\nconst WIDTH = 75\nconst HEIGHT = 97\n\nexport enum ValueType {\n  ace = 'A',\n  two = '2',\n  three = '3',\n  four = '4',\n  five = '5',\n  six = '6',\n  seven = '7',\n  eight = '8',\n  nine = '9',\n  ten = '10',\n  jack = 'J',\n  queen = 'Q',\n  king = 'K'\n}\n\nenum SuitType {\n  heart = '\\u2665',\n  diamond = '\\u2666',\n  spade = '\\u2660',\n  club = '\\u2663'\n}\n\ntype Position = {\n  left: number,\n  top: number,\n  rotated: boolean,\n  textAlign: string\n}\n\ntype Drawing = {\n  color: string,\n  cornerFont: string,\n  fontSize: string\n  suitXOffset: number,\n  suitYOffset: number,\n  valueXOffset: number,\n  valueYOffset: number,\n  positions: Position[]\n}\n\nexport type Card = {\n  suit: SuitType,\n  value: ValueType,\n  drawing: Drawing,\n  isRed: boolean,\n  isBlack: boolean\n}\n\nexport const Cards: Card[] = []\nfor (const [, value] of Object.entries(ValueType)) {\n  for (const [, suit] of Object.entries(SuitType)) {\n    Cards.push({\n      suit,\n      value,\n      isRed: [SuitType.diamond, SuitType.heart].indexOf(suit) > -1,\n      isBlack: [SuitType.club, SuitType.spade].indexOf(suit) > -1,\n      drawing: getDrawing(suit, value)\n    })\n  }\n}\n\nfunction getDrawing (suit: SuitType, value: ValueType): Drawing {\n\n  type ypos = 0|1|2|3|4|5|6\n  type xpos = 0|1|2\n\n  const color = [\n    SuitType.diamond,\n    SuitType.heart\n  ].indexOf(suit) > -1 ? 'red' : 'black'\n\n  const fontSize = [\n    ValueType.ace,\n    ValueType.jack,\n    ValueType.queen,\n    ValueType.king\n  ].indexOf(value) > -1 ? '72px' : '20px'\n\n  const pos: {x: xpos, y: ypos}[] = []\n\n  if ([ValueType.ace, ValueType.three, ValueType.five, ValueType.nine, ValueType.jack, ValueType.queen, ValueType.king].indexOf(value) > -1) {\n    pos.push({x: 1, y: 3})\n  }\n\n  if ([ValueType.two, ValueType.three].indexOf(value) > -1) {\n    pos.push({x: 1, y: 0}, {x: 1, y: 6})\n  }\n\n  if ([ValueType.four, ValueType.five, ValueType.six, ValueType.seven, ValueType.eight, ValueType.nine, ValueType.ten].indexOf(value) > -1) {\n    pos.push({x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 6}, {x: 2, y: 6})\n  }\n\n  if ([ValueType.six, ValueType.seven, ValueType.eight].indexOf(value) > -1) {\n    pos.push({x: 0, y: 3}, {x: 2, y: 3})\n  }\n\n  if ([ValueType.seven, ValueType.ten, ValueType.eight].indexOf(value) > -1) {\n    pos.push({x: 1, y: 1})\n  }\n\n  if ([ValueType.nine, ValueType.ten].indexOf(value) > -1) {\n    pos.push({x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 4}, {x: 2, y: 4})\n  }\n\n  if ([ValueType.ten, ValueType.eight].indexOf(value) > -1) {\n    pos.push({x: 1, y: 5})\n  }\n\n  const getTop = (y: ypos) => {\n    switch (y) {\n      case 0: case 6: return HEIGHT * 0.2\n      case 1: case 5: return HEIGHT * 0.3\n      case 2: case 4: return HEIGHT * 0.4\n      case 3: return HEIGHT * 0.5\n    }\n  }\n\n  const getLeft = (x: xpos) => {\n    switch (x) {\n      case 0: return WIDTH * 0.25\n      case 1: return WIDTH * 0.50\n      case 2: return WIDTH * 0.75\n    }\n  }\n\n  const getTextAlign = (x: xpos) => {\n    switch (x) {\n      case 0: return 'left'\n      case 1: return 'center'\n      case 2: return 'right'\n    }\n  }\n\n  const positions: Position[] = pos.map(({x, y}) => {\n    return {\n      textAlign: getTextAlign(x),\n      rotated: y > 3,\n      left: getLeft(x),\n      top: getTop(y)\n    }\n  })\n\n  return {\n    cornerFont: 'bold 15px sans-serif',\n    valueXOffset: 9,\n    valueYOffset: 2,\n    suitXOffset: 9,\n    suitYOffset: 12,\n    color,\n    fontSize,\n    positions\n  }\n}\n","\nimport {INITIALIZE, GlobalActions} from './actions'\nimport {Stack, StackCard, StackType} from '../lib/Stack'\nimport {Card} from '../lib/Card'\n\nconst USE_STOCK = 'USE_STOCK'\ntype USE_STOCK = typeof USE_STOCK\ntype UseStockAction = {type: USE_STOCK, count: number}\n\nconst ADD_CARDS_TO_STOCK = 'ADD_CARDS_TO_STOCK'\ntype ADD_CARDS_TO_STOCK = typeof ADD_CARDS_TO_STOCK\ntype AddCardToStockAction = {type: ADD_CARDS_TO_STOCK, cards: Card[]}\n\nexport function useStock (count: number): UseStockAction {\n  return {type: USE_STOCK, count}\n}\n\nexport function addCardsToStock(cards: Card[]): AddCardToStockAction {\n  return {type: ADD_CARDS_TO_STOCK, cards}\n}\n\nexport type StockActions = UseStockAction | AddCardToStockAction\n\nexport type StockStore = {\n  readonly stack: Stack\n  readonly left: number\n}\n\nconst initialState: StockStore = {stack: {type: StackType.stock, cards: [{}]}, left: 24}\n\nexport default function tableauReducer (\n  state: StockStore = initialState,\n  action: StockActions | GlobalActions\n): StockStore {\n\n  if (action.type === INITIALIZE) {\n    return {...initialState}\n  }\n\n  if (action.type === USE_STOCK) {\n\n    let cards: StackCard[]\n    if (state.left > 0) {\n      cards = state.left - action.count === 0 ? [] : state.stack.cards\n    } else {\n      cards = state.stack.cards.slice(0, -action.count)\n    }\n\n    return {\n      stack: {\n        ...state.stack,\n        cards\n      },\n      left: state.left > 0 ? state.left - action.count : 0\n    }\n  }\n\n  if (action.type === ADD_CARDS_TO_STOCK) {\n    return {\n      ...state,\n      stack: {\n        ...state.stack,\n        cards: [\n          ...state.stack.cards,\n          ...action.cards.map(card => ({card}))\n        ]\n      }\n    }\n  }\n\n  return state\n\n}\n","\nimport {INITIALIZE, GlobalActions, SELECT_CARD, DESELECT_CARD, MOVE_CARDS} from './actions'\nimport {select_card, deselect_card, move_cards} from '../lib/util'\nimport {Stack, StackType} from '../lib/Stack'\nimport {Card} from '../lib/Card'\n\nconst RECYCLE_WASTE = 'RECYCLE_WASTE'\ntype RECYCLE_WASTE = typeof RECYCLE_WASTE\ntype RecycleAction = {type: RECYCLE_WASTE}\nexport const recycleWaste = (): RecycleAction => ({type: RECYCLE_WASTE})\n\nconst ADD_CARDS_TO_WASTE = 'ADD_CARDS_TO_WASTE'\ntype ADD_CARDS_TO_WASTE = typeof ADD_CARDS_TO_WASTE\ntype AddCardToWasteAction = {type: ADD_CARDS_TO_WASTE, cards: Card[]}\nexport const addCardsToWaste = (cards: Card[]): AddCardToWasteAction => ({type: ADD_CARDS_TO_WASTE, cards})\n\nexport type WasteActions = RecycleAction | AddCardToWasteAction\n\nexport type WasteStore = {\n  readonly stacks: Stack[] // this is an array for consistency with other stores\n  readonly showing: number\n}\n\nconst initialState: WasteStore = {stacks: [{type: StackType.waste, cards: []}], showing: 0}\n\nexport default function tableauReducer (\n  state: WasteStore = initialState,\n  action: WasteActions | GlobalActions\n): WasteStore {\n\n  if (action.type === INITIALIZE) {\n    return {...initialState}\n  }\n\n  if (action.type === RECYCLE_WASTE) {\n    return {...initialState}\n  }\n\n  if (action.type === SELECT_CARD) {\n    if (state.stacks.every(stack => stack !== action.stack)) { return state }\n    return {...state, stacks: select_card(state.stacks, action.card)}\n  }\n\n  if (action.type === DESELECT_CARD) {\n    if (state.stacks.every(stack => stack.selection == null)) { return state }\n    return {...state, stacks: deselect_card(state.stacks)}\n  }\n\n  if (action.type === MOVE_CARDS) {\n    if (state.stacks.every(stack => [action.from, action.to].indexOf(stack) === -1)) { return state }\n    return {\n      ...state,\n      showing: Math.max(1, state.showing - 1),\n      stacks: move_cards(state.stacks, action.from, action.to, action.cards)\n    }\n  }\n\n  if (action.type === ADD_CARDS_TO_WASTE) {\n    const cards = [...state.stacks[0].cards, ...action.cards.map(card => ({card}))]\n    return {\n      ...state,\n      showing: Math.min(cards.length, 3),\n      stacks: state.stacks.map(stack => ({...stack, cards}))\n    }\n  }\n\n  return state\n\n}\n","\nimport {INITIALIZE, GlobalActions} from './actions'\n\nconst INCREMENT_SCORE = 'INCREMENT_SCORE'\ntype INCREMENT_SCORE = typeof INCREMENT_SCORE\n\ntype IncrementAction = {\n  type: INCREMENT_SCORE,\n  score: number\n}\n\nexport function incrementScore (score: number): IncrementAction {\n  return {type: INCREMENT_SCORE, score}\n}\n\nexport type ScoreStore = {\n  score: number\n}\n\nexport type ScoreActions = IncrementAction\n\nconst initialState: ScoreStore = {score: 0}\n\nexport default function scoreReducer (\n  state: ScoreStore = initialState,\n  action: IncrementAction | GlobalActions\n): ScoreStore {\n\n  if (action.type === INITIALIZE) {\n    return {score: 0}\n  }\n\n  if (action.type === INCREMENT_SCORE) {\n    return {score: state.score + action.score}\n  }\n\n  return state\n\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3hBob\",\"top\":\"_3awzY\",\"play\":\"_1E68Q\",\"stock\":\"_2EnhJ\",\"waste\":\"_3xl1i\",\"foundation\":\"cOfJ3\",\"tableau\":\"_2j3jz\",\"version\":\"_3qfCP\",\"new-game\":\"_3o9uZ\",\"newGame\":\"_3o9uZ\",\"score\":\"_1xo1P\"};","\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport * as offline from 'offline-plugin/runtime'\nimport {Provider} from 'react-redux'\nimport configStore from './store'\nimport {initialize} from './redux/actions'\nimport {Container} from './components/Container'\n\noffline.install({\n  onUpdateReady () { offline.applyUpdate() },\n  onUpdated () { window.location.reload() }\n})\n\nconst store = configStore()\n\nstore.dispatch(initialize())\n\nReactDOM.render(\n  <Provider store={store}>\n    <Container />\n  </Provider>,\n  document.getElementById('root')\n)\n","\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\nimport {createLogger} from 'redux-logger'\nimport reducer, {StoreState, StoreActions} from './redux'\n\nexport default function configStore (state?: object) {\n\n  const middleware = []\n\n  middleware.push(thunk as ThunkMiddleware<StoreState, StoreActions>)\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger())\n  }\n\n  return createStore(\n    reducer,\n    state!,\n    applyMiddleware(...middleware)\n  )\n}\n","\nimport {combineReducers} from 'redux'\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk'\nimport {GlobalActions} from './actions'\nimport tableau, {TableauStore} from './tableau'\nimport foundation, {FoundationStore} from './foundation'\nimport waste, {WasteStore, WasteActions} from './waste'\nimport stock, {StockStore, StockActions} from './stock'\nimport score, {ScoreStore, ScoreActions} from './score'\n\nexport type StoreActions =\n  GlobalActions |\n  ScoreActions |\n  WasteActions |\n  StockActions\n\nexport type StoreState = {\n  tableau: TableauStore,\n  foundation: FoundationStore,\n  waste: WasteStore,\n  stock: StockStore,\n  score: ScoreStore\n}\n\nexport type ThunkResult<R> = ThunkAction<R, StoreState, null, StoreActions>\nexport type ThunkDispatch = ThunkDispatch<StoreState, null, StoreActions>\n\nexport default combineReducers<StoreState, StoreActions>({\n  tableau,\n  foundation,\n  waste,\n  stock,\n  score\n})\n","\nimport deck from '../lib/Deck'\nimport {INITIALIZE, GlobalActions, SELECT_CARD, DESELECT_CARD, MOVE_CARDS, REPLACE_TOP} from './actions'\nimport {Stack, StackType, } from '../lib/Stack'\nimport {select_card, deselect_card, move_cards} from '../lib/util'\n\nexport type TableauStore = {\n  readonly stacks: Stack[]\n}\n\nconst initialState: TableauStore = {stacks: []}\n\nexport default function tableauReducer (\n  state: TableauStore = initialState,\n  action: GlobalActions\n): TableauStore {\n\n  if (action.type === INITIALIZE) {\n\n    const stacks: Stack[] = []\n    for (let i = 0; i <= 6; i++) {\n      const stack: Stack = {type: StackType.tableau, cards: []}\n      for (let j = 0; j < i; j++) {\n          stack.cards.push({})\n      }\n      stack.cards.push({card: deck.getCard()})\n      stacks.push(stack)\n    }\n\n    return {stacks}\n  }\n\n  if (action.type === SELECT_CARD) {\n    if (state.stacks.every(stack => stack !== action.stack)) { return state }\n    return {...state, stacks: select_card(state.stacks, action.card)}\n  }\n\n  if (action.type === DESELECT_CARD) {\n    if (state.stacks.every(stack => stack.selection == null)) { return state }\n    return {...state, stacks: deselect_card(state.stacks)}\n  }\n\n  if (action.type === MOVE_CARDS) {\n    if (state.stacks.every(stack => [action.from, action.to].indexOf(stack) === -1)) { return state }\n    return {...state, stacks: move_cards(state.stacks, action.from, action.to, action.cards)}\n  }\n\n  if (action.type === REPLACE_TOP) {\n    return {\n      ...state,\n      stacks: state.stacks.map(stack => {\n        if (stack !== action.stack) { return stack }\n        return {\n          ...stack,\n          cards: stack.cards.map((card, index) => {\n            if (index < stack.cards.length - 1) { return card }\n            return {card: action.card}\n          })\n        }\n      })\n    }\n  }\n\n  return state\n\n}\n","\nimport {INITIALIZE, GlobalActions, SELECT_CARD, DESELECT_CARD, MOVE_CARDS} from './actions'\nimport {Stack, StackType} from '../lib/Stack'\nimport {select_card, deselect_card, move_cards} from '../lib/util'\n\nexport type FoundationStore = {\n  readonly stacks: Stack[]\n}\n\nconst initialState: FoundationStore = {\n  stacks: [\n    {type: StackType.foundation, cards: []},\n    {type: StackType.foundation, cards: []},\n    {type: StackType.foundation, cards: []},\n    {type: StackType.foundation, cards: []}\n  ]\n}\n\nexport default function foundationReducer (\n  state: FoundationStore = initialState,\n  action: GlobalActions\n): FoundationStore {\n\n  if (action.type === INITIALIZE) {\n    return {...initialState}\n  }\n\n  if (action.type === SELECT_CARD) {\n    if (state.stacks.every(stack => stack !== action.stack)) { return state }\n    return {...state, stacks: select_card(state.stacks, action.card)}\n  }\n\n  if (action.type === DESELECT_CARD) {\n    if (state.stacks.every(stack => stack.selection == null)) { return state }\n    return {...state, stacks: deselect_card(state.stacks)}\n  }\n\n  if (action.type === MOVE_CARDS) {\n    if (state.stacks.every(stack => [action.from, action.to].indexOf(stack) === -1)) { return state }\n    return {...state, stacks: move_cards(state.stacks, action.from, action.to, action.cards)}\n  }\n\n  return state\n\n}\n","\nimport * as React from 'react'\nimport {connect} from 'react-redux'\nimport {createSelector} from 'reselect'\nimport {StackComponent} from './Stack'\nimport Deck from '../lib/Deck'\nimport {container, top, play, newGame, score, version} from '../../styles/cards.scss'\nimport {StoreState, ThunkDispatch} from '../redux'\nimport {Stack, StackCard, StackType, StackDirection} from '../lib/Stack'\nimport {initialize, clickStock, clickTableau, clickWaste, clickFoundation, doubleClick} from '../redux/actions'\nimport {WasteStore} from '../redux/waste'\n\ntype ContainerConnectedProps = {\n  tableau: Stack[],\n  foundation: Stack[],\n  stock: Stack,\n  waste: WasteStore,\n  score: number\n}\n\ntype ContainerActionProps = {\n  handleNewGame: () => void\n  handleStockClick: (stack: Stack, card?: StackCard) => void,\n  handleTableauClick: (stack: Stack, card?: StackCard) => void,\n  handleWasteClick: (stack: Stack, card?: StackCard) => void,\n  handleFoundationClick: (stack: Stack, card?: StackCard) => void,\n  handleDoubleClick: (stack: Stack, card?: StackCard) => void\n}\n\ntype ContainerProps = ContainerConnectedProps & ContainerActionProps\n\nclass ContainerComponent extends React.PureComponent<ContainerProps> {\n\n  constructor (props: ContainerProps) {\n    super(props)\n    this.handleNewGameClick = this.handleNewGameClick.bind(this)\n    this.handleStockClick = this.handleStockClick.bind(this)\n    this.handleTableauClick = this.handleTableauClick.bind(this)\n    this.handleWasteClick = this.handleWasteClick.bind(this)\n    this.handleFoundationClick = this.handleFoundationClick.bind(this)\n    this.handleDoubleClick = this.handleDoubleClick.bind(this)\n  }\n\n  handleNewGameClick () {\n    Deck.shuffle()\n    this.props.handleNewGame()\n  }\n\n  handleStockClick (stack: Stack, card?: StackCard) {\n    this.props.handleStockClick(stack, card)\n  }\n\n  handleTableauClick (stack: Stack, card?: StackCard) {\n    this.props.handleTableauClick(stack, card)\n  }\n\n  handleWasteClick (stack: Stack, card?: StackCard) {\n    this.props.handleWasteClick(stack, card)\n  }\n\n  handleFoundationClick (stack: Stack, card?: StackCard) {\n    this.props.handleFoundationClick(stack, card)\n  }\n\n  handleDoubleClick (stack: Stack, card?: StackCard) {\n    this.props.handleDoubleClick(stack, card)\n  }\n\n  render () {\n    return (\n      <div className={container}>\n        <div>\n          <button id=\"new-game\" className={newGame} onClick={this.handleNewGameClick}>\n            {'New Game'}\n          </button>\n          <label id=\"score\" className={score}>\n            {'Score: '}\n            {this.props.score}\n          </label>\n        </div>\n        <div className={top}>\n          <StackComponent\n            stack={this.props.stock}\n            onClick={this.handleStockClick}\n            direction={StackDirection.none}\n            type={StackType.stock}\n            hidden={true}\n          />\n          <StackComponent\n            stack={this.props.waste.stacks[0]}\n            onClick={this.handleWasteClick}\n            onDoubleClick={this.handleDoubleClick}\n            direction={StackDirection.horizontal}\n            type={StackType.waste}\n            max={this.props.waste.showing}\n            offset={15}\n          />\n          {this.props.foundation.map((stack, index) => (\n            <StackComponent\n              key={`foundation-${index}`}\n              onClick={this.handleFoundationClick}\n              stack={stack}\n              direction={StackDirection.none}\n              type={StackType.foundation}\n              max={1}\n            />\n          ))}\n        </div>\n        <div className={play}>\n          {this.props.tableau.map((stack, index) => (\n            <StackComponent\n              key={`tableau-${index}`}\n              onClick={this.handleTableauClick}\n              onDoubleClick={this.handleDoubleClick}\n              stack={stack}\n              direction={StackDirection.vertical}\n              type={StackType.tableau}\n            />\n          ))}\n        </div>\n        <div className={version}>\n          {process.env.version}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst selector = createSelector([\n  (state: StoreState) => state.tableau.stacks,\n  (state: StoreState) => state.foundation.stacks,\n  (state: StoreState) => state.stock.stack,\n  (state: StoreState) => state.waste,\n  (state: StoreState) => state.score.score\n], (\n  tableau,\n  foundation,\n  stock,\n  waste,\n  score\n) => ({\n  tableau,\n  foundation,\n  stock,\n  waste,\n  score\n}))\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch): ContainerActionProps => ({\n  handleNewGame: () => dispatch(initialize()),\n  handleStockClick: () => dispatch(clickStock()),\n  handleTableauClick: (stack, card) => dispatch(clickTableau(stack, card)),\n  handleWasteClick: (stack, card) => dispatch(clickWaste(stack, card)),\n  handleFoundationClick: (stack, card) => dispatch(clickFoundation(stack, card)),\n  handleDoubleClick: (stack, card) => dispatch(doubleClick(stack, card))\n})\n\nconst mapStateToProps = (state: StoreState): ContainerConnectedProps => selector(state)\n\nexport const Container = connect(mapStateToProps, mapDispatchToProps)(ContainerComponent)\n","\nimport * as React from 'react'\nimport {stock, waste, tableau, foundation} from '../../styles/cards.scss'\nimport {Stack, StackCard, StackType, StackDirection} from '../lib/Stack'\n\ntype CardClickEvent = (stack: Stack, card: StackCard) => void\n\ntype StackOwnProps = {\n  type: StackType,\n  direction: StackDirection,\n  children?: React.ReactNode,\n  stack: Stack,\n  onClick?: CardClickEvent,\n  onDoubleClick?: CardClickEvent\n  max: number,\n  hidden: boolean,\n  width: number,\n  height: number,\n  offset: number,\n  radius: number\n}\n\ntype StackConnectedProps = {\n}\n\ntype StackProps = StackOwnProps & StackConnectedProps\n\ntype Point = {\n  x: number\n  y: number\n}\n\nexport class StackComponent extends React.PureComponent<StackProps> {\n\n  static defaultProps = {\n    max: Infinity,\n    hidden: false,\n    width: 74,\n    height: 97,\n    offset: 20,\n    radius: 10\n  }\n\n  private ref = React.createRef<HTMLCanvasElement>()\n\n  constructor (props: StackProps) {\n    super(props)\n    this.handleCanvasClick = this.handleCanvasClick.bind(this)\n    this.handleCanvasDoubleClick = this.handleCanvasDoubleClick.bind(this)\n  }\n\n  get stack_style(): string {\n    switch (this.props.type) {\n      case StackType.foundation: return foundation\n      case StackType.tableau: return tableau\n      case StackType.stock: return stock\n      case StackType.waste: return waste\n    }\n  }\n\n  get canvas_width () {\n    switch (this.props.direction) {\n      case StackDirection.none:\n      case StackDirection.vertical:\n        return this.props.width\n      case StackDirection.horizontal:\n        return this.cards.length === 0\n          ? this.props.height\n          : (this.props.offset * (this.cards.length - 1) + this.props.width)\n    }\n  }\n\n  get canvas_height () {\n    switch (this.props.direction) {\n      case StackDirection.none:\n      case StackDirection.horizontal:\n        return this.props.height\n      case StackDirection.vertical:\n        return this.cards.length === 0\n          ? this.props.height\n          : this.props.offset * (this.cards.length - 1) + this.props.height\n    }\n  }\n\n  get cards () {\n    return this.props.hidden && this.props.stack.cards.length > 0\n      ? [{}]\n      : this.props.stack.cards.slice(-this.props.max)\n  }\n\n  handleCanvasDoubleClick (evt: React.MouseEvent<Element>) {\n    const {cards} = this\n    const {stack, offset, direction, onDoubleClick} = this.props\n    const {nativeEvent: e} = evt\n    if (!onDoubleClick) { return }\n\n    const prop = direction === StackDirection.horizontal ? 'offsetX' : 'offsetY'\n    const index = Math.min(cards.length - 1, Math.floor(e[prop] / offset))\n    onDoubleClick(stack, cards[index])\n  }\n\n  handleCanvasClick (evt: React.MouseEvent<Element>) {\n    const {cards} = this\n    const {stack, offset, direction, onClick} = this.props\n    const {nativeEvent: e} = evt\n    if (!onClick) { return }\n\n    const prop = direction === StackDirection.horizontal ? 'offsetX' : 'offsetY'\n    const index = Math.min(cards.length - 1, Math.floor(e[prop] / offset))\n    onClick(stack, cards[index])\n  }\n\n  componentDidMount () {\n    this.updateCanvas()\n  }\n\n  componentDidUpdate () {\n    this.updateCanvas()\n  }\n\n  updateCanvas () {\n    const canvas = this.ref.current\n    if (!canvas) { return }\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) { return }\n\n    const {cards} = this\n    const {direction, offset} = this.props\n\n    ctx.save()\n    ctx.translate(0.5, 0.5)\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n    if (cards.length === 0) {\n      this.drawBoxRadius(ctx, {x: 0, y: 0})\n      ctx.stroke()\n    }\n\n    for (let i = 0; i < cards.length; i++) {\n      const x = direction === StackDirection.horizontal ? i * offset : 0\n      const y = direction === StackDirection.horizontal ? 0 : i * offset\n\n      if (i < cards.length - 1) {\n        ctx.save()\n        this.drawClipRegion(ctx, {x, y})\n      }\n\n      this.drawCard(ctx, cards[i], {x, y})\n\n      if (i < cards.length - 1) {\n        ctx.restore()\n      }\n    }\n    ctx.restore()\n  }\n\n  drawClipRegion (ctx: CanvasRenderingContext2D, {x, y}: Point) {\n\n    const {direction, radius, offset, width, height} = this.props\n    const clip_width = direction === StackDirection.horizontal ? offset : width\n    const clip_height = direction === StackDirection.horizontal ? height : offset\n\n    ctx.beginPath()\n    if (direction === StackDirection.horizontal) {\n      ctx.moveTo(x, y)\n      ctx.lineTo(x + clip_width + radius, y)\n      ctx.quadraticCurveTo(x + clip_width, y, x + clip_width, y + radius)\n      ctx.lineTo(x + clip_width, y + clip_height - radius)\n      ctx.quadraticCurveTo(x + clip_width, y + clip_height, x + clip_width + radius, y + clip_height)\n      ctx.lineTo(x, y + clip_height)\n    } else {\n      ctx.moveTo(x + clip_width, y)\n      ctx.lineTo(x + clip_width, y + clip_height + radius)\n      ctx.quadraticCurveTo(x + clip_width, y + clip_height, x + clip_width - radius, y + clip_height)\n      ctx.lineTo(x + radius, y + clip_height)\n      ctx.quadraticCurveTo(x, y + clip_height, x, y + clip_height + radius)\n      ctx.lineTo(x, y)\n    }\n    ctx.closePath()\n    ctx.clip()\n  }\n\n  drawBoxRadius (ctx: CanvasRenderingContext2D, {x, y}: Point) {\n    const {radius, height, width} = this.props\n    ctx.beginPath()\n    ctx.moveTo(x + radius, y)\n    ctx.lineTo(x + width - radius, y)\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n    ctx.lineTo(x + width, y + height - radius)\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n    ctx.lineTo(x + radius, y + height)\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n    ctx.lineTo(x, y + radius)\n    ctx.quadraticCurveTo(x, y, x + radius, y)\n    ctx.closePath()\n  }\n\n  drawCard (ctx: CanvasRenderingContext2D, stack_card: StackCard, {x, y}: Point) {\n\n    const {card, selected} = stack_card\n\n    this.drawBoxRadius(ctx, {x, y})\n    ctx.stroke()\n\n    if (!card) {\n      ctx.fillStyle = '#0aa'\n      ctx.fill()\n      return\n    }\n\n    if (selected) {\n      ctx.fillStyle = 'yellow'\n      ctx.fill()\n    }\n\n    const {value, suit, drawing} = card\n\n    ctx.fillStyle = drawing.color\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'top'\n\n    ctx.font = drawing.cornerFont\n    ctx.fillText(value, drawing.valueXOffset + x, drawing.valueYOffset + y, 12)\n    ctx.fillText(suit, drawing.suitXOffset + x, drawing.suitYOffset + y)\n\n    ctx.save()\n    ctx.translate(this.props.width, this.props.height)\n    ctx.rotate(Math.PI)\n    ctx.fillText(value, drawing.valueXOffset - x, drawing.valueYOffset - y, 12)\n    ctx.fillText(suit, drawing.suitXOffset - x, drawing.suitYOffset - y)\n    ctx.restore()\n\n    ctx.textBaseline = 'middle'\n\n    for (const pos of drawing.positions) {\n      const factor = pos.rotated ? -1 : 1\n      ctx.textAlign = pos.textAlign\n\n      if (pos.rotated) {\n        ctx.save()\n        ctx.translate(this.props.width, this.props.height)\n        ctx.rotate(Math.PI)\n      }\n\n      ctx.font = `${drawing.fontSize} sans-serif`\n      ctx.fillText(suit, pos.left + x * factor, pos.top + y * factor)\n\n      if (pos.rotated) {\n        ctx.restore()\n      }\n    }\n  }\n\n  render () {\n    return (\n      <canvas\n        onDoubleClick={this.handleCanvasDoubleClick}\n        onClick={this.handleCanvasClick}\n        className={this.stack_style}\n        width={this.canvas_width + 1}\n        height={this.canvas_height + 1}\n        ref={this.ref}\n      />\n    )\n  }\n}\n"],"sourceRoot":""}